import { z } from 'zod';
export declare const signedUrlSchema: z.ZodObject<{
    signed: z.ZodString;
    statusCode: z.ZodNumber;
    headers: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodString]>>;
}, "strip", z.ZodTypeAny, {
    statusCode: number;
    headers: Record<string, string | string[]>;
    signed: string;
}, {
    statusCode: number;
    headers: Record<string, string | string[]>;
    signed: string;
}>;
export declare const uploadClientSchema: z.ZodObject<{
    data: z.ZodObject<{
        url: z.ZodString;
        sourceUrl: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        url: string;
        sourceUrl: string;
    }, {
        url: string;
        sourceUrl: string;
    }>;
    statusCode: z.ZodNumber;
    headers: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodString]>>;
}, "strip", z.ZodTypeAny, {
    statusCode: number;
    headers: Record<string, string | string[]>;
    data: {
        url: string;
        sourceUrl: string;
    };
}, {
    statusCode: number;
    headers: Record<string, string | string[]>;
    data: {
        url: string;
        sourceUrl: string;
    };
}>;
export declare const tunnelAuthTokenSchema: z.ZodObject<{
    token: z.ZodString;
    domain: z.ZodString;
    statusCode: z.ZodNumber;
    headers: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodString]>>;
}, "strip", z.ZodTypeAny, {
    statusCode: number;
    headers: Record<string, string | string[]>;
    token: string;
    domain: string;
}, {
    statusCode: number;
    headers: Record<string, string | string[]>;
    token: string;
    domain: string;
}>;
export declare const deploymentStatusTypesArray: readonly ["started", "pending", "building", "successful", "failed", "building-infra", "building-app", "deploying-app"];
export declare const deploymentStatusTypesSchema: z.ZodEnum<["started", "pending", "building", "successful", "failed", "building-infra", "building-app", "deploying-app"]>;
export declare const appVersionDeploymentStatusSchema: z.ZodObject<{
    error: z.ZodOptional<z.ZodObject<{
        message: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        message: string;
    }, {
        message: string;
    }>>;
    status: z.ZodEnum<["started", "pending", "building", "successful", "failed", "building-infra", "building-app", "deploying-app"]>;
    tip: z.ZodOptional<z.ZodString>;
    deployment: z.ZodOptional<z.ZodObject<{
        url: z.ZodString;
        latestUrl: z.ZodString;
        liveUrl: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        url: string;
        latestUrl: string;
        liveUrl?: string | undefined;
    }, {
        url: string;
        latestUrl: string;
        liveUrl?: string | undefined;
    }>>;
    statusCode: z.ZodNumber;
    headers: z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodString]>>;
}, "strip", z.ZodTypeAny, {
    statusCode: number;
    headers: Record<string, string | string[]>;
    status: "pending" | "started" | "building" | "successful" | "failed" | "building-infra" | "building-app" | "deploying-app";
    error?: {
        message: string;
    } | undefined;
    tip?: string | undefined;
    deployment?: {
        url: string;
        latestUrl: string;
        liveUrl?: string | undefined;
    } | undefined;
}, {
    statusCode: number;
    headers: Record<string, string | string[]>;
    status: "pending" | "started" | "building" | "successful" | "failed" | "building-infra" | "building-app" | "deploying-app";
    error?: {
        message: string;
    } | undefined;
    tip?: string | undefined;
    deployment?: {
        url: string;
        latestUrl: string;
        liveUrl?: string | undefined;
    } | undefined;
}>;
