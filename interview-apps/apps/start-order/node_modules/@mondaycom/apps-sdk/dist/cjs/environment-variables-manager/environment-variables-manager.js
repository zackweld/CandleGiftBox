"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
exports.__esModule = true;
exports.EnvironmentVariablesManager = void 0;
var key_value_manager_abstract_1 = require("../key-value-manager/key-value-manager.abstract.js");
var string_manipulations_1 = require("../utils/string-manipulations.js");
var EnvironmentVariablesManager = /** @class */ (function (_super) {
    __extends(EnvironmentVariablesManager, _super);
    function EnvironmentVariablesManager(options) {
        var _this = this;
        var dataFileName = process.env.SECRET_NAME;
        _this = _super.call(this, 'EnvironmentVariablesManager', dataFileName, '/secrets') || this;
        _this.shouldUpdateProcessEnv = Boolean(options === null || options === void 0 ? void 0 : options.updateProcessEnv);
        _this.initData();
        return _this;
    }
    EnvironmentVariablesManager.prototype.initData = function () {
        _super.prototype.initData.call(this);
        if (this.shouldUpdateProcessEnv) {
            Object.entries(this.cachedData).forEach(function (_a) {
                var key = _a[0], value = _a[1];
                var snakeCaseKey = (0, string_manipulations_1.snakeCase)(key, { upperCase: true });
                process.env[snakeCaseKey] = value;
            });
        }
        this.logger.info("[".concat(this.tag, "] Successfully updated process.env with data from file"), { mondayInternal: true });
    };
    return EnvironmentVariablesManager;
}(key_value_manager_abstract_1.KeyValueManager));
exports.EnvironmentVariablesManager = EnvironmentVariablesManager;
//# sourceMappingURL=environment-variables-manager.js.map