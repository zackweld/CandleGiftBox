{"version":3,"file":"useMergeRefs.js","sources":["../../../../src/hooks/useMergeRefs.ts"],"sourcesContent":["import { LegacyRef, MutableRefObject, useMemo } from \"react\";\n\n/*\n * const Component = React.forwardRef((props, ref) => {\n *   const internalRef = React.useRef();\n *   const mergedRef = useMergeRefs({ refs: [ref, internalRef] });\n *   return <div {...props} ref={mergedRef} />;\n * });\n */\n\n// TODO deprecate / replace with useMergeRef in next major version - https://monday.monday.com/boards/3532714909/pulses/5657904659\n/**\n * Returns a single ref callback that merges multiple ref callbacks\n * @deprecated - for internal usage - use `useMergeRef` hook instead\n * @param refs\n */\nexport default function useMergeRefs<T = any>({ refs = [] }: { refs: Array<MutableRefObject<T> | LegacyRef<T>> }) {\n  return useMemo(() => {\n    if (refs.every(ref => ref === null)) return null;\n\n    return (node: HTMLElement) => {\n      refs.forEach(ref => {\n        if (ref) assignRef(ref, node);\n      });\n    };\n  }, [refs]);\n}\n\nfunction assignRef(ref: MutableRefObject<any> | LegacyRef<any>, value: HTMLElement) {\n  if (ref === null) return;\n\n  if (typeof ref === \"function\") {\n    ref(value);\n    return;\n  }\n\n  try {\n    // eslint-disable-next-line no-param-reassign\n    (ref as MutableRefObject<any>).current = value;\n  } catch (error) {\n    console.error(error);\n    throw new Error(`Cannot assign value '${value}' to ref '${ref}'`);\n  }\n}\n"],"names":["useMergeRefs","_ref","_ref$refs","refs","useMemo","every","ref","node","forEach","value","current","error","console","Error","concat","assignRef"],"mappings":"gCAgBwB,SAAAA,EAAYC,GAA4E,IAAAC,EAAAD,EAAhEE,KAAAA,OAAO,IAAHD,EAAG,GAAEA,EACvD,OAAOE,GAAQ,WACb,OAAID,EAAKE,OAAM,SAAAC,GAAG,OAAY,OAARA,KAAsB,KAErC,SAACC,GACNJ,EAAKK,SAAQ,SAAAF,GACPA,GAMZ,SAAmBA,EAA6CG,GAC9D,GAAY,OAARH,EAAc,OAElB,GAAmB,mBAARA,EAET,YADAA,EAAIG,GAIN,IAEGH,EAA8BI,QAAUD,CAC1C,CAAC,MAAOE,GAEP,MADAC,QAAQD,MAAMA,GACJE,MAAK,wBAAAC,OAAyBL,EAAK,cAAAK,OAAaR,EAAG,KAC9D,CACH,CArBiBS,CAAUT,EAAKC,EAC1B,IAEJ,GAAG,CAACJ,GACN"}