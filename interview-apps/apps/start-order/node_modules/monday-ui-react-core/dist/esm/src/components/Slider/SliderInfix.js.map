{"version":3,"file":"SliderInfix.js","sources":["../../../../../src/components/Slider/SliderInfix.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { InfixKind } from \"./SliderConstants\";\nimport { useSliderInfixComponent } from \"./SliderInfixHooks\";\nimport cx from \"classnames\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { withStaticProps, VibeComponentProps } from \"../../types\";\nimport styles from \"./SliderInfix.module.scss\";\n\nexport interface SliderInfixProps extends VibeComponentProps {\n  /**\n   * kind (type/mode) of Infix prefix/postfix\n   * Infix - additional inserted by Consumer - component/string/number etc.\n   */\n  kind?: InfixKind;\n}\n\nconst SliderInfix: FC<SliderInfixProps> & { kinds?: typeof InfixKind } = ({ kind = SliderInfix.kinds.PREFIX }) => {\n  const [isShow, modificators, InfixComponent, inlineStyle] = useSliderInfixComponent(kind);\n  return (\n    isShow && (\n      <div\n        className={cx(\n          styles.infix,\n          getStyle(styles, kind),\n          modificators.map(m => getStyle(styles, m))\n        )}\n        style={inlineStyle}\n      >\n        {InfixComponent}\n      </div>\n    )\n  );\n};\n\nexport default withStaticProps(SliderInfix, {\n  kinds: InfixKind\n});\n"],"names":["withStaticProps","SliderInfix","_ref","_ref$kind","kind","kinds","PREFIX","_useSliderInfixCompon","useSliderInfixComponent","_useSliderInfixCompon2","_slicedToArray","modificators","InfixComponent","inlineStyle","React","className","cx","styles","infix","getStyle","map","m","style","InfixKind"],"mappings":"kaAgBA,IAkBeA,EAAAA,GAlB0D,SAAnEC,EAAWC,GAAgG,IAAAC,EAAAD,EAArCE,KAAAA,OAAOH,IAAHE,EAAGF,EAAYI,MAAMC,OAAMH,EACzGI,EAA4DC,EAAwBJ,GAAKK,EAAAC,EAAAH,EAAA,GAA1EI,EAAYF,EAAA,GAAEG,EAAcH,EAAA,GAAEI,EAAWJ,EAAA,GACxD,OADaA,EAAA,IAGTK,uBACEC,UAAWC,EACTC,EAAOC,MACPC,EAASF,EAAQb,GACjBO,EAAaS,KAAI,SAAAC,GAAC,OAAIF,EAASF,EAAQI,EAAE,KAE3CC,MAAOT,GAEND,EAIT,GAE4C,CAC1CP,MAAOkB"}