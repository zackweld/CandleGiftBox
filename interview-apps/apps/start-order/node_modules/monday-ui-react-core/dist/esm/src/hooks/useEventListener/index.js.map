{"version":3,"file":"index.js","sources":["../../../../../src/hooks/useEventListener/index.ts"],"sourcesContent":["import { RefObject, useEffect } from \"react\";\nimport { GenericEventCallback } from \"../../types/events\";\n\nexport default function useEventListener({\n  eventName,\n  callback,\n  ref,\n  capture = false\n}: {\n  eventName: keyof HTMLElementEventMap | string;\n  callback: GenericEventCallback;\n  ref: RefObject<HTMLElement | Document>;\n  capture?: boolean;\n}): void {\n  useEffect(() => {\n    const refElement = ref && ref.current;\n    if (!refElement) return;\n    const listenerOptions = { capture };\n\n    refElement.addEventListener(eventName, callback, listenerOptions);\n\n    return () => {\n      refElement.removeEventListener(eventName, callback, listenerOptions);\n    };\n  }, [eventName, ref, callback, capture]);\n}\n"],"names":["useEventListener","_ref","eventName","callback","ref","_ref$capture","capture","useEffect","refElement","current","listenerOptions","addEventListener","removeEventListener"],"mappings":"kCAGwB,SAAAA,EAAgBC,GAUvC,IATCC,EAASD,EAATC,UACAC,EAAQF,EAARE,SACAC,EAAGH,EAAHG,IAAGC,EAAAJ,EACHK,QAAAA,OAAU,IAAHD,GAAQA,EAOfE,GAAU,WACR,IAAMC,EAAaJ,GAAOA,EAAIK,QAC9B,GAAKD,EAAL,CACA,IAAME,EAAkB,CAAEJ,QAAAA,GAI1B,OAFAE,EAAWG,iBAAiBT,EAAWC,EAAUO,GAE1C,WACLF,EAAWI,oBAAoBV,EAAWC,EAAUO,GANrC,CAQlB,GAAE,CAACR,EAAWE,EAAKD,EAAUG,GAChC"}