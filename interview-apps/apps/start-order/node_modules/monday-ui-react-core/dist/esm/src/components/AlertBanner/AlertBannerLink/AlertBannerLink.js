import{defineProperty as t}from"../../../../_virtual/_rollupPluginBabelHelpers.js";import{__rest as r}from"../../../../_virtual/_tslib.js";import e from"classnames";import{getTestId as a,ComponentDefaultTestId as n}from"../../../tests/testIds.js";import i,{useContext as s}from"react";import o from"../../Link/Link.js";import m from"./AlertBannerLink.module.scss.js";import{TypographyColor as l}from"../../Typography/TypographyConstants.js";import{AlertBannerContext as p}from"../AlertBannerContext.js";var d=function(d){var f=d.marginLeft,L=void 0!==f&&f,c=d.id,j=d["data-testid"],g=r(d,["marginLeft","id","data-testid"]),u=s(p).textColor,N=e(t({},m.marginLeft,L));return i.createElement("div",{className:N,"data-testid":j||a(n.ALERT_BANNER_LINK,c),id:c},i.createElement(o,Object.assign({},g,{textClassName:e(m.bannerLink,t(t({},m.bannerLinkTextColorOnPrimary,u===l.ON_PRIMARY),m.bannerLinkTextColorOnInverted,u===l.ON_INVERTED))})))};Object.assign(d,{isAlertBannerItem:!0});export{d as default};
//# sourceMappingURL=AlertBannerLink.js.map
