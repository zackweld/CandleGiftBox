{"version":3,"file":"SliderConstants.js","sources":["../../../../../src/components/Slider/SliderConstants.ts"],"sourcesContent":["import { Slider } from \"../index\";\nimport { IconType } from \"../Icon/IconConstants\";\nimport { ReactElement } from \"react\";\n\nexport const BEM_PREFIX = \"monday\";\n\nexport const COMPONENT_ID = \"slider\";\n\nexport const UPDATE_SLIDER_SIZE_DEBOUNCE = 200;\n\nexport const TOOLTIP_SHOW_DELAY = 300;\n\nexport enum InfixKind {\n  PREFIX = \"prefix\",\n  POSTFIX = \"postfix\"\n}\n\nexport enum SliderColor {\n  PRIMARY = \"primary\",\n  NEGATIVE = \"negative\",\n  POSITIVE = \"positive\"\n}\nexport type SliderSize = (typeof Slider.sizes)[keyof typeof Slider.sizes];\n\nexport type SliderContextSelection = {\n  max: number;\n  min: number;\n  ranged: boolean;\n  step: number;\n  value: number | number[];\n  valueText: string | string[];\n};\n\nexport type SliderContextUI = {\n  active: number;\n  ariaLabel: string;\n  ariaLabelledby: string;\n  color: SliderColor;\n  disabled: boolean;\n  dragging: number;\n  focused: number;\n  size: SliderSize;\n  shapeTestId: (subElement: string) => string;\n  showValue: boolean;\n};\n\nexport type SliderContextActions = {\n  setActive: (value: number) => void;\n  setFocused: (value: number) => void;\n  setDragging: (value: number) => void;\n  changeThumbValue: (newValue: number | string, thumbIndex?: number, cancelFocus?: boolean) => void;\n  drugThumb: (newValue: number | number[]) => void;\n  decreaseValue: (consumerStep?: number) => void;\n  increaseValue: (consumerStep?: number) => void;\n};\n\nexport type SliderContextInfix = {\n  /**\n   * Show selected from Slider range value\n   */\n  indicateSelection?: boolean;\n  /**\n   * Options for initial/start/prefix element, it can be one of:\n   *  - Any Component (react component, node, text, number etc.)\n   *  - Or it can be an object of options for Icons component (see Icon components props)\n   *  - Or it can be an object for Label (Icon, Heading - and other components)\n   *  - Or it can be Render Props Function witch are getting value and valueText\n   */\n  prefix?:\n    | { icon: IconType }\n    | string\n    | ((value: number | number[], valueText: string | string[]) => ReactElement)\n    | ReactElement;\n  /**\n   * Options for postfix/end/finishing element. Same as prefix element.\n   */\n  postfix?:\n    | { icon: IconType }\n    | string\n    | ((value: number | number[], valueText: string | string[]) => ReactElement)\n    | ReactElement;\n  /**\n   * Width of SelectionIndicator (i.e. TextField)\n   */\n  selectionIndicatorWidth?: string;\n};\n"],"names":["InfixKind","SliderColor","UPDATE_SLIDER_SIZE_DEBOUNCE","TOOLTIP_SHOW_DELAY"],"mappings":"AAQO,IAIKA,EAKAC,EATCC,EAA8B,IAE9BC,EAAqB,KAElC,SAAYH,GACVA,EAAA,OAAA,SACAA,EAAA,QAAA,SACD,CAHD,CAAYA,IAAAA,EAGX,CAAA,IAED,SAAYC,GACVA,EAAA,QAAA,UACAA,EAAA,SAAA,WACAA,EAAA,SAAA,UACD,CAJD,CAAYA,IAAAA,EAIX,CAAA"}