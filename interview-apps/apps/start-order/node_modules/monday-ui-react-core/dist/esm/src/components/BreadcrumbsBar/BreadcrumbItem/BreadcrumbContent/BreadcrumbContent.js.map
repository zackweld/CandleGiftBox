{"version":3,"file":"BreadcrumbContent.js","sources":["../../../../../../../src/components/BreadcrumbsBar/BreadcrumbItem/BreadcrumbContent/BreadcrumbContent.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-tabindex */\nimport React, { ForwardedRef, forwardRef, useCallback, useMemo } from \"react\";\nimport { keyCodes } from \"../../../../constants\";\nimport { SubIcon, VibeComponentProps } from \"../../../../types\";\nimport cx from \"classnames\";\nimport styles from \"./BreadcrumbContent.module.scss\";\n\nexport interface BreadcrumbContentProps extends VibeComponentProps {\n  isClickable?: boolean;\n  link?: string;\n  onClick?: () => void;\n  text?: string;\n  icon?: SubIcon;\n  isCurrent?: boolean;\n  disabled?: boolean;\n  showText?: boolean;\n}\n\nconst iconProps = { className: styles.breadcrumbIcon, size: 14, clickable: false };\n\nexport const BreadcrumbContent: React.ForwardRefExoticComponent<BreadcrumbContentProps & React.RefAttributes<unknown>> =\n  forwardRef<unknown, BreadcrumbContentProps>(\n    (\n      { className, isClickable, link, onClick, text, icon, isCurrent, disabled = false, showText = true },\n      ref: ForwardedRef<HTMLSpanElement>\n    ) => {\n      const Icon = icon;\n\n      const onKeyDown = useCallback(\n        (event: React.KeyboardEvent) => {\n          if (event.key === keyCodes.ENTER || event.key === keyCodes.SPACE) {\n            link ? (window.parent.location.href = link) : onClick();\n          }\n        },\n        [onClick, link]\n      );\n\n      const tabIndex = useMemo(() => (disabled ? -1 : 0), [disabled]);\n\n      if (isClickable && (link || onClick)) {\n        if (link) {\n          return (\n            <a\n              className={cx(styles.breadcrumbContent, className, {\n                [styles.disabled]: disabled,\n                [styles.clickable]: isClickable,\n                [styles.current]: isCurrent,\n                [styles.withoutText]: !showText\n              })}\n              href={link}\n              onKeyDown={onKeyDown}\n              aria-current={isCurrent ? \"page\" : undefined}\n            >\n              {Icon && <Icon {...iconProps} />}\n              {showText && (\n                <span ref={ref} className={styles.breadcrumbText}>\n                  {text}\n                </span>\n              )}\n            </a>\n          );\n        }\n        return (\n          <span\n            className={cx(styles.breadcrumbContent, className, {\n              [styles.disabled]: disabled,\n              [styles.clickable]: isClickable,\n              [styles.current]: isCurrent,\n              [styles.withoutText]: !showText\n            })}\n            onClick={onClick}\n            onKeyDown={onKeyDown}\n            tabIndex={tabIndex}\n            aria-current={isCurrent ? \"page\" : undefined}\n            role=\"button\"\n          >\n            {Icon && <Icon {...iconProps} />}\n            {showText && (\n              <span ref={ref} className={styles.breadcrumbText}>\n                {text}\n              </span>\n            )}\n          </span>\n        );\n      }\n      return (\n        <span\n          className={cx(styles.breadcrumbContent, className, {\n            [styles.disabled]: disabled,\n            [styles.clickable]: isClickable,\n            [styles.current]: isCurrent,\n            [styles.notClickable]: !isClickable,\n            [styles.withoutText]: !showText\n          })}\n          aria-disabled=\"true\"\n          tabIndex={tabIndex}\n          aria-current={isCurrent ? \"page\" : undefined}\n        >\n          {Icon && <Icon {...iconProps} />}\n          {showText && (\n            <span ref={ref} className={styles.breadcrumbText}>\n              {text}\n            </span>\n          )}\n        </span>\n      );\n    }\n  );\n"],"names":["iconProps","className","styles","breadcrumbIcon","size","clickable","BreadcrumbContent","forwardRef","_ref","ref","isClickable","link","onClick","text","isCurrent","_ref$disabled","disabled","_ref$showText","showText","Icon","icon","onKeyDown","useCallback","event","key","keyCodes","ENTER","SPACE","window","parent","location","href","tabIndex","useMemo","React","createElement","cx","breadcrumbContent","_defineProperty","current","withoutText","undefined","Object","assign","breadcrumbText","role","notClickable"],"mappings":"6ZAkBA,IAAMA,EAAY,CAAEC,UAAWC,EAAOC,eAAgBC,KAAM,GAAIC,WAAW,GAE9DC,EACXC,GACE,SAAAC,EAEEC,GACE,IAFAR,EAASO,EAATP,UAAWS,EAAWF,EAAXE,YAAaC,EAAIH,EAAJG,KAAMC,EAAOJ,EAAPI,QAASC,EAAIL,EAAJK,KAAYC,EAASN,EAATM,UAASC,EAAAP,EAAEQ,SAAAA,OAAW,IAAHD,GAAQA,EAAAE,EAAAT,EAAEU,SAAAA,OAAW,IAAHD,GAAOA,EAG3FE,EAH6CX,EAAJY,KAKzCC,EAAYC,GAChB,SAACC,GACKA,EAAMC,MAAQC,EAASC,OAASH,EAAMC,MAAQC,EAASE,QACzDhB,EAAQiB,OAAOC,OAAOC,SAASC,KAAOpB,EAAQC,IAElD,GACA,CAACA,EAASD,IAGNqB,EAAWC,GAAQ,WAAA,OAAOjB,GAAY,EAAI,CAAC,GAAG,CAACA,IAErD,OAAIN,IAAgBC,GAAQC,GACtBD,EAEAuB,EACEC,cAAA,IAAA,CAAAlC,UAAWmC,EAAGlC,EAAOmC,kBAAmBpC,EAASqC,EAAAA,EAAAA,EAAAA,EAC9CpC,CAAAA,EAAAA,EAAOc,SAAWA,GAClBd,EAAOG,UAAYK,GACnBR,EAAOqC,QAAUzB,GACjBZ,EAAOsC,aAAetB,IAEzBa,KAAMpB,EACNU,UAAWA,EACG,eAAAP,EAAY,YAAS2B,GAElCtB,GAAQe,EAAAC,cAAChB,EAAIuB,OAAAC,OAAA,GAAK3C,IAClBkB,GACCgB,EAAAC,cAAA,OAAA,CAAM1B,IAAKA,EAAKR,UAAWC,EAAO0C,gBAC/B/B,IAOTqB,EACEC,cAAA,OAAA,CAAAlC,UAAWmC,EAAGlC,EAAOmC,kBAAmBpC,EAASqC,EAAAA,EAAAA,EAAAA,EAC9CpC,CAAAA,EAAAA,EAAOc,SAAWA,GAClBd,EAAOG,UAAYK,GACnBR,EAAOqC,QAAUzB,GACjBZ,EAAOsC,aAAetB,IAEzBN,QAASA,EACTS,UAAWA,EACXW,SAAUA,iBACIlB,EAAY,YAAS2B,EACnCI,KAAK,UAEJ1B,GAAQe,EAAAC,cAAChB,EAAIuB,OAAAC,OAAA,GAAK3C,IAClBkB,GACCgB,EAAAC,cAAA,OAAA,CAAM1B,IAAKA,EAAKR,UAAWC,EAAO0C,gBAC/B/B,IAOTqB,EACEC,cAAA,OAAA,CAAAlC,UAAWmC,EAAGlC,EAAOmC,kBAAmBpC,EAASqC,EAAAA,EAAAA,EAAAA,EAAAA,KAC9CpC,EAAOc,SAAWA,GAClBd,EAAOG,UAAYK,GACnBR,EAAOqC,QAAUzB,GACjBZ,EAAO4C,cAAgBpC,GACvBR,EAAOsC,aAAetB,IAEX,gBAAA,OACdc,SAAUA,EAAQ,eACJlB,EAAY,YAAS2B,GAElCtB,GAAQe,EAAAC,cAAChB,EAAIuB,OAAAC,OAAA,GAAK3C,IAClBkB,GACCgB,EAAAC,cAAA,OAAA,CAAM1B,IAAKA,EAAKR,UAAWC,EAAO0C,gBAC/B/B,GAKX"}