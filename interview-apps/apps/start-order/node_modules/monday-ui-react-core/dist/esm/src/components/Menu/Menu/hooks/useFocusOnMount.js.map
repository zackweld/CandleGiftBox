{"version":3,"file":"useFocusOnMount.js","sources":["../../../../../../../src/components/Menu/Menu/hooks/useFocusOnMount.tsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { ReactElement } from \"react\";\nimport { isMenuChildSelectable } from \"../utils/utils\";\n\nexport interface UseFocusOnMountProps {\n  focusItemIndexOnMount: number;\n  focusChildOnMount: ReactElement;\n  getNextSelectableIndex: (index: number) => number | null;\n  updateActiveItemIndex: (index: number) => void;\n  setIsInitialFocusSet: (state: boolean) => void;\n}\n\nexport const useFocusOnMount = ({\n  focusItemIndexOnMount,\n  focusChildOnMount,\n  getNextSelectableIndex,\n  updateActiveItemIndex,\n  setIsInitialFocusSet\n}: UseFocusOnMountProps) => {\n  useEffect(() => {\n    if (focusItemIndexOnMount === -1) {\n      return;\n    }\n\n    const indexToFocusOnMount = isMenuChildSelectable(focusChildOnMount)\n      ? focusItemIndexOnMount\n      : getNextSelectableIndex(focusItemIndexOnMount);\n\n    if (indexToFocusOnMount !== null) {\n      requestAnimationFrame(() => {\n        updateActiveItemIndex(indexToFocusOnMount);\n        setIsInitialFocusSet(true);\n      });\n    }\n  }, [focusChildOnMount, focusItemIndexOnMount, getNextSelectableIndex, setIsInitialFocusSet, updateActiveItemIndex]);\n};\n"],"names":["useFocusOnMount","_ref","focusItemIndexOnMount","focusChildOnMount","getNextSelectableIndex","updateActiveItemIndex","setIsInitialFocusSet","useEffect","indexToFocusOnMount","isMenuChildSelectable","requestAnimationFrame"],"mappings":"gGAYaA,EAAkB,SAAHC,GAMD,IALzBC,EAAqBD,EAArBC,sBACAC,EAAiBF,EAAjBE,kBACAC,EAAsBH,EAAtBG,uBACAC,EAAqBJ,EAArBI,sBACAC,EAAoBL,EAApBK,qBAEAC,GAAU,WACR,IAA+B,IAA3BL,EAAJ,CAIA,IAAMM,EAAsBC,EAAsBN,GAC9CD,EACAE,EAAuBF,GAEC,OAAxBM,GACFE,uBAAsB,WACpBL,EAAsBG,GACtBF,GAAqB,EACvB,GAVD,CAYH,GAAG,CAACH,EAAmBD,EAAuBE,EAAwBE,EAAsBD,GAC9F"}