{"version":3,"file":"index.js","sources":["../../../../../src/hooks/useDebounceEvent/index.ts"],"sourcesContent":["import { useMemo, useCallback, useState, useRef, useEffect, ChangeEvent, Dispatch, SetStateAction } from \"react\";\nimport { noop, debounce } from \"lodash-es\";\n\nexport type UseDebounceResult = {\n  inputValue: string;\n  onEventChanged: (event: ChangeEvent<Partial<HTMLInputElement> | Partial<HTMLTextAreaElement>>) => void;\n  clearValue: () => void;\n  updateValue: Dispatch<SetStateAction<string>>;\n};\n\nexport default function useDebounceEvent({\n  delay = 0,\n  onChange,\n  initialStateValue = \"\",\n  trim\n}: {\n  onChange: (value: string) => void;\n  initialStateValue?: string;\n  delay?: number;\n  trim?: boolean;\n}) {\n  const [inputValue, setValue] = useState<string>(initialStateValue);\n  const previousValue = useRef<string>(null);\n\n  useEffect(() => {\n    previousValue.current = initialStateValue;\n  });\n\n  const debounceCallback = useMemo(() => {\n    if (!delay) {\n      return onChange;\n    }\n\n    if (!onChange) {\n      return noop;\n    }\n\n    return debounce(onChange, delay);\n  }, [onChange, delay]);\n\n  const onEventChanged = useCallback(\n    (event: ChangeEvent<Partial<HTMLInputElement> | Partial<HTMLTextAreaElement>>) => {\n      const { value } = event.target;\n      const finalValue = trim ? value.trim() : value;\n      setValue(finalValue);\n      debounceCallback(finalValue);\n    },\n    [debounceCallback, setValue, trim]\n  );\n\n  const clearValue = useCallback(() => {\n    setValue(\"\");\n    if (onChange) {\n      onChange(\"\");\n    }\n  }, [setValue, onChange]);\n\n  if (initialStateValue !== previousValue.current && initialStateValue !== inputValue) {\n    setValue(initialStateValue);\n  }\n\n  return { inputValue, onEventChanged, clearValue, updateValue: setValue };\n}\n"],"names":["useDebounceEvent","_ref","_ref$delay","delay","onChange","_ref$initialStateValu","initialStateValue","trim","_useState","useState","_useState2","_slicedToArray","inputValue","setValue","previousValue","useRef","useEffect","current","debounceCallback","useMemo","debounce","noop","onEventChanged","useCallback","event","value","target","finalValue","clearValue","updateValue"],"mappings":"wNAUc,SAAUA,EAAgBC,GAUvC,IAAAC,EAAAD,EATCE,MAAAA,OAAQ,IAAHD,EAAG,EAACA,EACTE,EAAQH,EAARG,SAAQC,EAAAJ,EACRK,kBAAAA,OAAoB,IAAHD,EAAG,GAAEA,EACtBE,EAAIN,EAAJM,KAOAC,EAA+BC,EAAiBH,GAAkBI,EAAAC,EAAAH,EAAA,GAA3DI,EAAUF,EAAA,GAAEG,EAAQH,EAAA,GACrBI,EAAgBC,EAAe,MAErCC,GAAU,WACRF,EAAcG,QAAUX,CAC1B,IAEA,IAAMY,EAAmBC,GAAQ,WAC/B,OAAKhB,EAIAC,EAIEgB,EAAShB,EAAUD,GAHjBkB,EAJAjB,CAQX,GAAG,CAACA,EAAUD,IAERmB,EAAiBC,GACrB,SAACC,GACC,IAAQC,EAAUD,EAAME,OAAhBD,MACFE,EAAapB,EAAOkB,EAAMlB,OAASkB,EACzCZ,EAASc,GACTT,EAAiBS,EAClB,GACD,CAACT,EAAkBL,EAAUN,IAGzBqB,EAAaL,GAAY,WAC7BV,EAAS,IACLT,GACFA,EAAS,GAEb,GAAG,CAACS,EAAUT,IAMd,OAJIE,IAAsBQ,EAAcG,SAAWX,IAAsBM,GACvEC,EAASP,GAGJ,CAAEM,WAAAA,EAAYU,eAAAA,EAAgBM,WAAAA,EAAYC,YAAahB,EAChE"}