{"version":3,"file":"TableHeaderCell.js","sources":["../../../../../../src/components/Table/TableHeaderCell/TableHeaderCell.tsx"],"sourcesContent":["import React, { forwardRef, useState } from \"react\";\nimport cx from \"classnames\";\nimport { SubIcon, VibeComponent, VibeComponentProps } from \"../../../types\";\nimport styles from \"./TableHeaderCell.module.scss\";\nimport Icon from \"../../Icon/Icon\";\nimport IconButton from \"../../IconButton/IconButton\";\nimport Info from \"../../Icon/Icons/components/Info\";\nimport { ButtonType } from \"../../Button/ButtonConstants\";\nimport Text from \"../../Text/Text\";\nimport Flex from \"../../Flex/Flex\";\nimport { getAriaSort, getNextSortState, getSortIcon } from \"../Table/tableHelpers\";\nimport Tooltip from \"../../Tooltip/Tooltip\";\nimport { getTestId } from \"../../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../../tests/constants\";\nimport { getStyle } from \"../../../helpers/typesciptCssModulesHelper\";\n\nexport interface ITableHeaderCellProps extends VibeComponentProps {\n  title: string;\n  icon?: SubIcon;\n  infoContent?: string;\n  sortState?: \"asc\" | \"desc\" | \"none\";\n  onSortClicked?: (direction: \"asc\" | \"desc\" | \"none\") => void;\n  sortButtonAriaLabel?: string;\n  sticky?: boolean;\n}\n\nconst TableHeaderCell: VibeComponent<ITableHeaderCellProps, HTMLDivElement> = forwardRef(\n  (\n    {\n      id,\n      className,\n      \"data-testid\": dataTestId,\n      title,\n      onSortClicked,\n      infoContent,\n      icon,\n      sortState = \"none\",\n      sortButtonAriaLabel = \"Sort\",\n      sticky\n    },\n    ref\n  ) => {\n    const [isHovered, setIsHovered] = useState<boolean>(false);\n    const ariaSort = getAriaSort(sortState);\n    const isSortActive = onSortClicked && ariaSort !== \"none\";\n    const shouldShowSortIcon = ariaSort !== \"none\" || isHovered;\n\n    return (\n      <div\n        ref={ref}\n        id={id}\n        className={cx(\n          styles.tableHeaderCell,\n          { [styles.sortActive]: isSortActive, [styles.sticky]: sticky },\n          className\n        )}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.TABLE_HEADER_CELL, id)}\n        role=\"columnheader\"\n        onMouseOver={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n        onFocus={() => setIsHovered(true)}\n        onBlur={() => setIsHovered(false)}\n        aria-sort={onSortClicked ? ariaSort : undefined}\n        tabIndex={onSortClicked ? 0 : undefined}\n      >\n        <Flex\n          direction={Flex.directions.ROW}\n          align={Flex.align.CENTER}\n          className={styles.tableHeaderCellContent}\n          gap={Flex.gaps.XS}\n        >\n          {icon && <Icon icon={icon} clickable={false} className={styles.icon} />}\n          {\n            <Text type={Text.types.TEXT2} weight={Text.weights.MEDIUM} color={Text.colors.SECONDARY}>\n              {title}\n            </Text>\n          }\n          {infoContent && (\n            <Tooltip\n              content={infoContent}\n              referenceWrapperClassName={styles.infoTooltip}\n              addKeyboardHideShowTriggersByDefault\n            >\n              <Icon icon={Info} iconLabel={infoContent} clickable={false} />\n            </Tooltip>\n          )}\n        </Flex>\n        {onSortClicked && (\n          <Flex direction={Flex.directions.ROW} align={Flex.align.CENTER} className={styles.tableHeaderCellSort}>\n            <IconButton\n              icon={getSortIcon(sortState)}\n              kind={ButtonType.TERTIARY}\n              size={IconButton.sizes.XS}\n              ariaLabel={sortButtonAriaLabel}\n              aria-hidden={!shouldShowSortIcon}\n              className={cx(styles.sort, getStyle(styles, sortState), {\n                [styles.show]: shouldShowSortIcon\n              })}\n              onClick={() => onSortClicked(getNextSortState(sortState))}\n            />\n          </Flex>\n        )}\n      </div>\n    );\n  }\n);\n\nexport default TableHeaderCell;\n"],"names":["TableHeaderCell","forwardRef","_ref","ref","id","className","dataTestId","title","onSortClicked","infoContent","icon","_ref$sortState","sortState","_ref$sortButtonAriaLa","sortButtonAriaLabel","sticky","_useState","useState","_useState2","_slicedToArray","isHovered","setIsHovered","ariaSort","getAriaSort","shouldShowSortIcon","React","createElement","cx","styles","tableHeaderCell","_defineProperty","sortActive","getTestId","ComponentDefaultTestId","TABLE_HEADER_CELL","role","onMouseOver","onMouseLeave","onFocus","onBlur","undefined","tabIndex","Flex","direction","directions","ROW","align","CENTER","tableHeaderCellContent","gap","gaps","XS","Icon","clickable","Text","type","types","TEXT2","weight","weights","MEDIUM","color","colors","SECONDARY","Tooltip","content","referenceWrapperClassName","infoTooltip","addKeyboardHideShowTriggersByDefault","Info","iconLabel","tableHeaderCellSort","IconButton","getSortIcon","kind","ButtonType","TERTIARY","size","sizes","ariaLabel","sort","getStyle","show","onClick","getNextSortState"],"mappings":"kzBA0BMA,IAAAA,EAAwEC,GAC5E,SAAAC,EAaEC,GACE,IAZAC,EAAEF,EAAFE,GACAC,EAASH,EAATG,UACeC,EAAUJ,EAAzB,eACAK,EAAKL,EAALK,MACAC,EAAaN,EAAbM,cACAC,EAAWP,EAAXO,YACAC,EAAIR,EAAJQ,KAAIC,EAAAT,EACJU,UAAAA,OAAY,IAAHD,EAAG,OAAMA,EAAAE,EAAAX,EAClBY,oBAAAA,OAAsB,IAAHD,EAAG,OAAMA,EAC5BE,EAAMb,EAANa,OAIFC,EAAkCC,GAAkB,GAAMC,EAAAC,EAAAH,EAAA,GAAnDI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GACxBI,EAAWC,EAAYX,GAEvBY,EAAkC,SAAbF,GAAuBF,EAElD,OACEK,EACEC,cAAA,MAAA,CAAAvB,IAAKA,EACLC,GAAIA,EACJC,UAAWsB,EACTC,EAAOC,gBAAeC,EAAAA,EACnBF,CAAAA,EAAAA,EAAOG,WATKvB,GAA8B,SAAbc,GASMM,EAAOb,OAASA,GACtDV,GAEW,cAAAC,GAAc0B,EAAUC,EAAuBC,kBAAmB9B,GAC/E+B,KAAK,eACLC,YAAa,WAAA,OAAMf,GAAa,EAAK,EACrCgB,aAAc,WAAA,OAAMhB,GAAa,EAAM,EACvCiB,QAAS,WAAA,OAAMjB,GAAa,EAAK,EACjCkB,OAAQ,WAAA,OAAMlB,GAAa,EAAM,EACtB,YAAAb,EAAgBc,OAAWkB,EACtCC,SAAUjC,EAAgB,OAAIgC,GAE9Bf,EAAAC,cAACgB,EAAI,CACHC,UAAWD,EAAKE,WAAWC,IAC3BC,MAAOJ,EAAKI,MAAMC,OAClB1C,UAAWuB,EAAOoB,uBAClBC,IAAKP,EAAKQ,KAAKC,IAEdzC,GAAQe,EAACC,cAAA0B,EAAK,CAAA1C,KAAMA,EAAM2C,WAAW,EAAOhD,UAAWuB,EAAOlB,OAE7De,EAACC,cAAA4B,EAAK,CAAAC,KAAMD,EAAKE,MAAMC,MAAOC,OAAQJ,EAAKK,QAAQC,OAAQC,MAAOP,EAAKQ,OAAOC,WAC3ExD,GAGJE,GACCgB,EAACC,cAAAsC,GACCC,QAASxD,EACTyD,0BAA2BtC,EAAOuC,YAClCC,sCAAoC,GAEpC3C,EAAAC,cAAC0B,EAAK,CAAA1C,KAAM2D,EAAMC,UAAW7D,EAAa4C,WAAW,MAI1D7C,GACCiB,EAAAC,cAACgB,EAAI,CAACC,UAAWD,EAAKE,WAAWC,IAAKC,MAAOJ,EAAKI,MAAMC,OAAQ1C,UAAWuB,EAAO2C,qBAChF9C,EAACC,cAAA8C,GACC9D,KAAM+D,EAAY7D,GAClB8D,KAAMC,EAAWC,SACjBC,KAAML,EAAWM,MAAM3B,GACvB4B,UAAWjE,EACE,eAACU,EACdnB,UAAWsB,EAAGC,EAAOoD,KAAMC,EAASrD,EAAQhB,GAAUkB,EACnDF,CAAAA,EAAAA,EAAOsD,KAAO1D,IAEjB2D,QAAS,WAAA,OAAM3E,EAAc4E,EAAiBxE,GAAW,KAMrE"}