{"version":3,"file":"useMergeRef.js","sources":["../../../../src/hooks/useMergeRef.ts"],"sourcesContent":["import { ForwardedRef, MutableRefObject, RefObject, useLayoutEffect, useRef } from \"react\";\n\n/*\n * Example usage:\n * const Component = React.forwardRef((props, ref) => {\n *   const internalRef = React.useRef();\n *   const mergedRef = useMergeRef(ref, internalRef);\n *   return <div {...props} ref={mergedRef} />;\n * });\n */\n\n/**\n * Returns a single ref callback that merges multiple ref callbacks - internal replacement for `useMergeRefs` hook\n * @param refs\n */\nfunction useMergeRef<T>(...refs: (RefObject<T> | ForwardedRef<T> | null)[]): RefObject<T> {\n  const mergedRef = useRef<T>(null);\n\n  useLayoutEffect(() => {\n    refs.forEach(ref => {\n      if (!ref) return;\n\n      if (typeof ref === \"function\") {\n        ref(mergedRef.current);\n      } else {\n        (ref as MutableRefObject<T>).current = mergedRef.current;\n      }\n    });\n  }, [refs]);\n\n  return mergedRef;\n}\n\nexport default useMergeRef;\n"],"names":["useMergeRef","_len","arguments","length","refs","Array","_key","mergedRef","useRef","useLayoutEffect","forEach","ref","current"],"mappings":"oDAeA,SAASA,IAAiE,IAAA,IAAAC,EAAAC,UAAAC,OAA/CC,EAA+CC,MAAAJ,GAAAK,EAAA,EAAAL,EAAAK,EAAAA,IAA/CF,EAA+CE,GAAAJ,UAAAI,GACxE,IAAMC,EAAYC,EAAU,MAc5B,OAZAC,GAAgB,WACdL,EAAKM,SAAQ,SAAAC,GACNA,IAEc,mBAARA,EACTA,EAAIJ,EAAUK,SAEbD,EAA4BC,QAAUL,EAAUK,QAErD,GACF,GAAG,CAACR,IAEGG,CACT"}