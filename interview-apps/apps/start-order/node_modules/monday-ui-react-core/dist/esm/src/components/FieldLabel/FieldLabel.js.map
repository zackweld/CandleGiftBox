{"version":3,"file":"FieldLabel.js","sources":["../../../../../src/components/FieldLabel/FieldLabel.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { FC, ForwardedRef, forwardRef } from \"react\";\nimport Icon from \"../Icon/Icon\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport styles from \"./FieldLabel.module.scss\";\n\nexport interface FieldLabelProps extends VibeComponentProps {\n  icon?: string | React.FunctionComponent | null;\n  /// TODO Remove in next major as breaking change\n  iconLabel?: string;\n  labelText?: string;\n  labelFor?: string;\n  iconClassName?: string;\n  labelClassName?: string;\n  requiredAsterisk?: boolean;\n}\n\nconst FieldLabel: FC<FieldLabelProps> = forwardRef(\n  (\n    {\n      icon = \"\",\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      iconLabel = \"\",\n      labelText = \"\",\n      labelFor = \"\",\n      iconClassName = \"\",\n      labelClassName = \"\",\n      requiredAsterisk = false\n    },\n    ref: ForwardedRef<HTMLLabelElement>\n  ) => {\n    if (!labelText) {\n      return null;\n    }\n\n    return (\n      <section className={cx(styles.labelComponentWrapper)}>\n        <Icon\n          icon={icon}\n          className={cx(styles.labelComponentIcon, iconClassName)}\n          id={labelFor}\n          clickable={false}\n          iconType={Icon.type.ICON_FONT}\n        />\n        <label htmlFor={labelFor} ref={ref} className={cx(styles.labelComponentText, labelClassName)}>\n          {labelText}\n          {requiredAsterisk && <span className={styles.requiredAsterisk}> *</span>}{\" \"}\n          {/* Render asterisk based on the prop */}\n        </label>\n      </section>\n    );\n  }\n);\n\nexport default FieldLabel;\n"],"names":["FieldLabel","forwardRef","_ref","ref","_ref$icon","icon","_ref$labelText","labelText","_ref$labelFor","labelFor","_ref$iconClassName","iconClassName","_ref$labelClassName","labelClassName","_ref$requiredAsterisk","requiredAsterisk","React","className","cx","styles","labelComponentWrapper","createElement","Icon","labelComponentIcon","id","clickable","iconType","type","ICON_FONT","htmlFor","labelComponentText"],"mappings":"0IAiBMA,IAAAA,EAAkCC,GACtC,SAAAC,EAWEC,GACE,IAAAC,EAAAF,EAVAG,KAAAA,OAAO,IAAHD,EAAG,GAAEA,EAEKE,EAAAJ,EACdK,UAAAA,OAAY,IAAHD,EAAG,GAAEA,EAAAE,EAAAN,EACdO,SAAAA,OAAW,IAAHD,EAAG,GAAEA,EAAAE,EAAAR,EACbS,cAAAA,OAAgB,IAAHD,EAAG,GAAEA,EAAAE,EAAAV,EAClBW,eAAAA,OAAiB,IAAHD,EAAG,GAAEA,EAAAE,EAAAZ,EACnBa,iBAAAA,OAAmB,IAAHD,GAAQA,EAI1B,OAAKP,EAKHS,2BAASC,UAAWC,EAAGC,EAAOC,wBAC5BJ,EAAAK,cAACC,EAAI,CACHjB,KAAMA,EACNY,UAAWC,EAAGC,EAAOI,mBAAoBZ,GACzCa,GAAIf,EACJgB,WAAW,EACXC,SAAUJ,EAAKK,KAAKC,YAEtBZ,EAAAK,cAAA,QAAA,CAAOQ,QAASpB,EAAUN,IAAKA,EAAKc,UAAWC,EAAGC,EAAOW,mBAAoBjB,IAC1EN,EACAQ,GAAoBC,EAAMK,cAAA,OAAA,CAAAJ,UAAWE,EAAOJ,kBAA2B,MAAE,MAdvE,IAmBX"}