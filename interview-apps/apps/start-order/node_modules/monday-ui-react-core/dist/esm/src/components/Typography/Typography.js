import{__rest as o}from"../../../_virtual/_tslib.js";import t,{forwardRef as s,useContext as e,useRef as r}from"react";import i from"classnames";import a from"../../hooks/useMergeRef.js";import{getTestId as l}from"../../tests/testIds.js";import{ComponentDefaultTestId as m}from"../../tests/constants.js";import{TypographyColor as p,TypographyAlign as n}from"./TypographyConstants.js";import{useTooltipProps as d,useEllipsisClass as c}from"./TypographyHooks.js";import f from"../Tooltip/Tooltip.js";import{TypographyContext as T}from"./utils/TypographyContext.js";import j from"./Typography.module.scss.js";var v=s((function(s,v){var g=s.className,h=s.id,u=s.children,y=s.tooltipProps,x=s["data-testid"],R=void 0===x?l(m.TEXT,h):x,b=s.element,w=void 0===b?"span":b,E=s.color,N=void 0===E?p.PRIMARY:E,P=s.align,k=void 0===P?n.START:P,A=s.ellipsis,C=void 0===A||A,I=s.maxLines,L=void 0===I?1:I,M=s.withoutTooltip,O=void 0!==M&&M,_=s.role,H=o(s,["className","id","children","tooltipProps","data-testid","element","color","align","ellipsis","maxLines","withoutTooltip","role"]),S=e(T).overflowTolerance,X=r(null),Y=a(v,X),q=1===L,z=c(Y,C,L),B=z.ref,D=z.class,F=d(X,O,C,y,u,q,S);return t.createElement(f,Object.assign({},F),t.createElement(w,Object.assign({id:h,"data-testid":R,className:i(j.typography,j[N],j[k],D,g),ref:B,role:_},H),u))}));export{v as default};
//# sourceMappingURL=Typography.js.map
