{"version":3,"file":"MultiValueContainer.js","sources":["../../../../../../../src/components/Dropdown/components/MultiValueContainer/MultiValueContainer.jsx"],"sourcesContent":["/* eslint-disable react/no-unstable-nested-components */\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { components } from \"react-select\";\nimport cx from \"classnames\";\nimport { useHiddenOptionsData } from \"../../hooks/useHiddenOptionsData\";\nimport Counter from \"../../../Counter/Counter\";\nimport Dialog from \"../../../Dialog/Dialog\";\nimport DialogContentContainer from \"../../../DialogContentContainer/DialogContentContainer\";\nimport Chips from \"../../../Chips/Chips\";\nimport { DROPDOWN_CHIP_COLORS } from \"../../DropdownConstants\";\nimport classes from \"./MultiValueContainer.module.scss\";\n\nconst DIALOG_OFFSET_Y = 5;\n\nexport default function Container({ children, selectProps, ...otherProps }) {\n  const {\n    isDisabled,\n    placeholder,\n    inputValue,\n    selectProps: customProps = {},\n    withMandatoryDefaultOptions,\n    readOnly\n  } = selectProps;\n  const { selectedOptions, onSelectedDelete, isMultiline, popupsContainerSelector, size } = customProps;\n  const clickHandler = children[1];\n  const [ref, setRef] = useState();\n  const [isCounterShown, setIsCounterShown] = useState(false);\n  const showPlaceholder = selectedOptions.length === 0 && !inputValue;\n  const chipWrapperClassName = classes[\"chip-with-input-wrapper\"];\n  const chipClassName = cx(\n    isMultiline ? classes[\"multiselect-chip-multi-line\"] : classes[`multiselect-chip-single-line-${size}`],\n    { [classes[\"multiselect-chip-disabled\"]]: isDisabled }\n  );\n\n  const { overflowIndex, hiddenOptionsCount } = useHiddenOptionsData({\n    isMultiline,\n    ref,\n    chipClassName,\n    chipWrapperClassName,\n    selectedOptionsCount: selectedOptions.length,\n    isCounterShown\n  });\n\n  useEffect(() => {\n    setIsCounterShown(hiddenOptionsCount > 0);\n  }, [hiddenOptionsCount]);\n\n  const onDelete = useCallback(\n    option => {\n      onSelectedDelete(option.value, { action: \"remove-value\", removedValue: option });\n    },\n    [onSelectedDelete]\n  );\n\n  const renderOptions = useCallback(\n    (from = 0, to = selectedOptions.length) =>\n      selectedOptions.map((option, index) => {\n        const overrideChipColor = Object.keys(DROPDOWN_CHIP_COLORS).includes(option.chipColor)\n          ? Chips.colors[option.chipColor]\n          : Chips.colors.PRIMARY;\n        return index >= from && index < to ? (\n          <Chips\n            data-testid=\"value-container-chip\"\n            key={option.value}\n            className={cx(classes.chips, chipClassName)}\n            noAnimation\n            disabled={isDisabled}\n            id={option.value}\n            label={option.label}\n            onDelete={() => onDelete(option)}\n            disableClickableBehavior\n            onMouseDown={e => {\n              e.stopPropagation();\n            }}\n            readOnly={readOnly || (withMandatoryDefaultOptions && option.isMandatory)}\n            allowTextSelection={readOnly}\n            leftRenderer={option.leftRenderer}\n            leftAvatar={option.leftAvatar}\n            leftIcon={option.leftIcon}\n            color={overrideChipColor}\n          />\n        ) : null;\n      }),\n    [selectedOptions, chipClassName, isDisabled, readOnly, withMandatoryDefaultOptions, onDelete, size]\n  );\n\n  return (\n    <components.ValueContainer selectProps={selectProps} {...otherProps}>\n      <div className={classes[\"value-container\"]}>\n        {showPlaceholder && (\n          <div className={classes[\"placeholder-container\"]}>\n            <components.Placeholder {...otherProps}>{placeholder}</components.Placeholder>\n          </div>\n        )}\n        <div\n          className={cx(classes[\"value-container-chips\"], { [classes[\"without-placeholder\"]]: !showPlaceholder })}\n          ref={newRef => setRef(newRef)}\n          data-testid=\"value-container-chips\"\n        >\n          {isCounterShown ? (\n            <>\n              {renderOptions(0, overflowIndex - 1)}\n              <div className={chipWrapperClassName}>\n                {renderOptions(overflowIndex - 1, overflowIndex)}\n                {clickHandler}\n              </div>\n              {renderOptions(overflowIndex)}\n            </>\n          ) : (\n            <>\n              {renderOptions(0, selectedOptions.length - 1)}\n              <div className={chipWrapperClassName}>\n                {renderOptions(selectedOptions.length - 1)}\n                {clickHandler}\n              </div>\n            </>\n          )}\n        </div>\n        <div>\n          {isCounterShown && (\n            <Dialog\n              content={() => (\n                <DialogContentContainer className={classes.valueDialogContent}>\n                  {renderOptions(overflowIndex)}\n                </DialogContentContainer>\n              )}\n              containerSelector={popupsContainerSelector}\n              tooltip\n              showTrigger={Dialog.hideShowTriggers.CLICK}\n              hideTrigger={Dialog.hideShowTriggers.CLICK_OUTSIDE}\n              position=\"bottom\"\n              moveBy={{ main: DIALOG_OFFSET_Y }}\n            >\n              <Counter\n                kind={Counter.kinds.LINE}\n                prefix=\"+\"\n                count={hiddenOptionsCount}\n                onMouseDown={e => {\n                  e.stopPropagation();\n                }}\n                noAnimation\n              />\n            </Dialog>\n          )}\n        </div>\n      </div>\n    </components.ValueContainer>\n  );\n}\n"],"names":["Container","_ref","children","selectProps","otherProps","_objectWithoutProperties","_excluded","isDisabled","placeholder","inputValue","_selectProps$selectPr","customProps","withMandatoryDefaultOptions","readOnly","selectedOptions","onSelectedDelete","isMultiline","popupsContainerSelector","size","clickHandler","_useState","useState","_useState2","_slicedToArray","ref","setRef","_useState3","_useState4","isCounterShown","setIsCounterShown","showPlaceholder","length","chipWrapperClassName","classes","chipClassName","cx","concat","_defineProperty","_useHiddenOptionsData","useHiddenOptionsData","selectedOptionsCount","overflowIndex","hiddenOptionsCount","useEffect","onDelete","useCallback","option","value","action","removedValue","renderOptions","from","arguments","undefined","to","map","index","overrideChipColor","Object","keys","DROPDOWN_CHIP_COLORS","includes","chipColor","Chips","colors","PRIMARY","React","createElement","key","className","chips","noAnimation","disabled","id","label","disableClickableBehavior","onMouseDown","e","stopPropagation","isMandatory","allowTextSelection","leftRenderer","leftAvatar","leftIcon","color","components","ValueContainer","_extends","Placeholder","newRef","Fragment","Dialog","content","DialogContentContainer","valueDialogContent","containerSelector","tooltip","showTrigger","hideShowTriggers","CLICK","hideTrigger","CLICK_OUTSIDE","position","moveBy","main","Counter","kind","kinds","LINE","prefix","count"],"mappings":"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"}