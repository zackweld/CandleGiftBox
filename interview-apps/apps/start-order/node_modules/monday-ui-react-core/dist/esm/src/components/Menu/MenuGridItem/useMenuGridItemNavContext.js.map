{"version":3,"file":"useMenuGridItemNavContext.js","sources":["../../../../../../src/components/Menu/MenuGridItem/useMenuGridItemNavContext.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport { NavDirections } from \"../../../hooks/useFullKeyboardListeners\";\nimport { useGridKeyboardNavigationContext } from \"../../GridKeyboardNavigationContext/GridKeyboardNavigationContext\";\nimport { CloseMenuOption } from \"../Menu/MenuConstants\";\nimport { GridElementRef } from \"../../GridKeyboardNavigationContext/GridKeyboardNavigationContextConstants\";\n\nexport const useMenuGridItemNavContext = ({\n  wrapperRef,\n  setActiveItemIndex,\n  getPreviousSelectableIndex,\n  getNextSelectableIndex,\n  activeItemIndex,\n  isUnderSubMenu,\n  closeMenu\n}: {\n  wrapperRef?: GridElementRef;\n  setActiveItemIndex?: (index: number) => void;\n  getNextSelectableIndex?: (activeItemIndex: number) => number;\n  getPreviousSelectableIndex?: (activeItemIndex: number) => number;\n  activeItemIndex?: number;\n  isUnderSubMenu?: boolean;\n  closeMenu?: (option: CloseMenuOption) => void;\n}) => {\n  /*\n   * This is an \"adapter\" between the Grid Keyboard Navigation mechanism and the Menu navigation mechanism.\n   * Currently, the two mechanisms work a bit differently.\n   * In the future, when the Menu component will use a GridKeyboardNavigationContext, this adapter shouldn't be needed anymore.\n   */\n  const innerKeyboardContext = useGridKeyboardNavigationContext([], wrapperRef);\n  const keyboardContext = useMemo(\n    () => ({\n      onOutboundNavigation: (elementRef: React.RefObject<HTMLElement>, direction: NavDirections) => {\n        innerKeyboardContext.onOutboundNavigation(elementRef, direction);\n\n        switch (direction) {\n          case NavDirections.UP:\n            return setActiveItemIndex(getPreviousSelectableIndex(activeItemIndex));\n          case NavDirections.DOWN:\n            return setActiveItemIndex(getNextSelectableIndex(activeItemIndex));\n          case NavDirections.LEFT:\n            if (isUnderSubMenu) {\n              closeMenu({});\n            }\n        }\n      }\n    }),\n    [\n      innerKeyboardContext,\n      setActiveItemIndex,\n      getPreviousSelectableIndex,\n      activeItemIndex,\n      getNextSelectableIndex,\n      isUnderSubMenu,\n      closeMenu\n    ]\n  );\n\n  return keyboardContext;\n};\n"],"names":["useMenuGridItemNavContext","_ref","setActiveItemIndex","getPreviousSelectableIndex","getNextSelectableIndex","activeItemIndex","isUnderSubMenu","closeMenu","innerKeyboardContext","useGridKeyboardNavigationContext","wrapperRef","useMemo","onOutboundNavigation","elementRef","direction","NavDirections","UP","DOWN","LEFT"],"mappings":"uOAMaA,EAA4B,SAAHC,GAgBjC,IAdHC,EAAkBD,EAAlBC,mBACAC,EAA0BF,EAA1BE,2BACAC,EAAsBH,EAAtBG,uBACAC,EAAeJ,EAAfI,gBACAC,EAAcL,EAAdK,eACAC,EAASN,EAATM,UAeMC,EAAuBC,EAAiC,GArBpDR,EAAVS,YAkDA,OA5BwBC,GACtB,WAAA,MAAO,CACLC,qBAAsB,SAACC,EAA0CC,GAG/D,OAFAN,EAAqBI,qBAAqBC,EAAYC,GAE9CA,GACN,KAAKC,EAAcC,GACjB,OAAOd,EAAmBC,EAA2BE,IACvD,KAAKU,EAAcE,KACjB,OAAOf,EAAmBE,EAAuBC,IACnD,KAAKU,EAAcG,KACbZ,GACFC,EAAU,CAAE,GAGpB,EACD,GACD,CACEC,EACAN,EACAC,EACAE,EACAD,EACAE,EACAC,GAKN"}