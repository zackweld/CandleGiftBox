{"version":3,"file":"Link.js","sources":["../../../../../src/components/Link/Link.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { forwardRef, useCallback } from \"react\";\nimport { backwardCompatibilityForProperties } from \"../../helpers/backwardCompatibilityForProperties\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport Icon from \"../Icon/Icon\";\nimport { IconPosition, LinkTarget } from \"./LinkConsts\";\nimport { SubIcon, VibeComponent, VibeComponentProps, withStaticProps } from \"../../types\";\nimport styles from \"./Link.module.scss\";\n\nexport interface LinkProps extends VibeComponentProps {\n  /**\n   * @deprecated - use className instead\n   */\n  componentClassName?: string;\n  /**\n   * Class name for overriding link text styles\n   */\n  textClassName?: string;\n  /** Specifies the location (URL) of the external resource */\n  href?: string;\n  /** The link text */\n  text?: string;\n  /** Defines the relationship between a linked resource and the current document */\n  rel?: string;\n  /** onClick function - MouseEvent */\n  onClick?: (event: React.MouseEvent) => void;\n  /** Specifies where to open the linked document */\n  target?: LinkTarget;\n  /** Aria label description */\n  ariaLabelDescription?: string;\n  /** Identifies the element (or elements) that describes the element on which the attribute is set. */\n  ariaDescribedby?: string;\n  /** element id to describe the counter accordingly */\n  ariaLabeledBy?: string;\n  /** Icon to add to the link element */\n  icon?: SubIcon;\n  /** the position of the icon in relation to the etext */\n  iconPosition?: IconPosition;\n  /** disable navigation */\n  disableNavigation?: boolean;\n  /** inherit text size */\n  inheritFontSize?: boolean;\n  /** if the link is in part of other text content */\n  inlineText?: boolean;\n}\n\nconst Link: VibeComponent<LinkProps, HTMLAnchorElement> & {\n  targets?: typeof LinkTarget;\n  target?: typeof LinkTarget;\n  iconPositions?: typeof IconPosition;\n  position?: typeof IconPosition;\n} = forwardRef(\n  (\n    {\n      className,\n      componentClassName,\n      textClassName,\n      href = \"\",\n      text = \"\",\n      rel = \"noreferrer\",\n      onClick = NOOP,\n      target = Link.targets.NEW_WINDOW,\n      ariaLabelDescription = \"\",\n      ariaDescribedby = \"\",\n      icon = \"\",\n      iconPosition = Link.position.START,\n      id = \"\",\n      ariaLabeledBy = \"\",\n      disableNavigation = false,\n      inheritFontSize = false,\n      inlineText = false,\n      \"data-testid\": dataTestId\n    },\n    ref: React.ForwardedRef<HTMLAnchorElement>\n  ) => {\n    const overrideClassName = backwardCompatibilityForProperties([className, componentClassName]);\n    const isStart = iconPosition === IconPosition.START;\n\n    const onClickWrapper = useCallback(\n      (e: React.MouseEvent<HTMLElement>) => {\n        if (disableNavigation) {\n          e.preventDefault();\n        }\n        onClick && onClick(e);\n      },\n      [disableNavigation, onClick]\n    );\n\n    return (\n      <a\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.LINK, id)}\n        id={id}\n        href={href}\n        rel={rel}\n        ref={ref}\n        onClick={onClickWrapper}\n        target={target}\n        className={cx(styles.link, overrideClassName, {\n          [styles.inheritFontSize]: inheritFontSize,\n          [styles.inlineText]: inlineText\n        })}\n        aria-label={ariaLabelDescription}\n        aria-describedby={ariaDescribedby}\n        aria-labelledby={ariaLabeledBy}\n      >\n        {getIcon(isStart, icon, cx(styles.iconStart))}\n        <span className={cx(styles.text, textClassName)}>{text}</span>\n        {getIcon(!isStart, icon, cx(styles.iconEnd))}\n      </a>\n    );\n  }\n);\n\nfunction getIcon(shouldShow: boolean, icon: string | React.FunctionComponent | null, className: string) {\n  if (!shouldShow) return;\n  return <Icon className={className} clickable={false} icon={icon} iconType={Icon.type.ICON_FONT} />;\n}\n\nexport default withStaticProps(Link, {\n  position: IconPosition,\n  target: LinkTarget,\n  iconPositions: IconPosition,\n  targets: LinkTarget\n});\n"],"names":["Link","forwardRef","_ref","ref","textClassName","_ref$href","href","_ref$text","text","_ref$rel","rel","_ref$onClick","onClick","NOOP","_ref$target","target","targets","NEW_WINDOW","_ref$ariaLabelDescrip","ariaLabelDescription","_ref$ariaDescribedby","ariaDescribedby","_ref$icon","icon","_ref$iconPosition","iconPosition","position","START","_ref$id","id","_ref$ariaLabeledBy","ariaLabeledBy","_ref$disableNavigatio","disableNavigation","_ref$inheritFontSize","inheritFontSize","_ref$inlineText","inlineText","dataTestId","overrideClassName","backwardCompatibilityForProperties","className","componentClassName","isStart","IconPosition","onClickWrapper","useCallback","e","preventDefault","React","getTestId","ComponentDefaultTestId","LINK","cx","styles","link","_defineProperty","getIcon","iconStart","createElement","iconEnd","shouldShow","Icon","clickable","iconType","type","ICON_FONT","withStaticProps","LinkTarget","iconPositions"],"mappings":"klBA+CA,IAAMA,EAKFC,GACF,SAAAC,EAqBEC,GACE,IAlBAC,EAAaF,EAAbE,cAAaC,EAAAH,EACbI,KAAAA,OAAO,IAAHD,EAAG,GAAEA,EAAAE,EAAAL,EACTM,KAAAA,OAAO,IAAHD,EAAG,GAAEA,EAAAE,EAAAP,EACTQ,IAAAA,OAAM,IAAHD,EAAG,aAAYA,EAAAE,EAAAT,EAClBU,QAAAA,OAAUC,IAAHF,EAAGE,EAAIF,EAAAG,EAAAZ,EACda,OAAAA,OAASf,IAAHc,EAAGd,EAAKgB,QAAQC,WAAUH,EAAAI,EAAAhB,EAChCiB,qBAAAA,OAAuB,IAAHD,EAAG,GAAEA,EAAAE,EAAAlB,EACzBmB,gBAAAA,OAAkB,IAAHD,EAAG,GAAEA,EAAAE,EAAApB,EACpBqB,KAAAA,OAAO,IAAHD,EAAG,GAAEA,EAAAE,EAAAtB,EACTuB,aAAAA,OAAezB,IAAHwB,EAAGxB,EAAK0B,SAASC,MAAKH,EAAAI,EAAA1B,EAClC2B,GAAAA,OAAK,IAAHD,EAAG,GAAEA,EAAAE,EAAA5B,EACP6B,cAAAA,OAAgB,IAAHD,EAAG,GAAEA,EAAAE,EAAA9B,EAClB+B,kBAAAA,OAAoB,IAAHD,GAAQA,EAAAE,EAAAhC,EACzBiC,gBAAAA,OAAkB,IAAHD,GAAQA,EAAAE,EAAAlC,EACvBmC,WAAAA,OAAa,IAAHD,GAAQA,EACHE,EAAUpC,EAAzB,eAIIqC,EAAoBC,EAAmC,CArBlDtC,EAATuC,UACkBvC,EAAlBwC,qBAqBIC,EAAUlB,IAAiBmB,EAAajB,MAExCkB,EAAiBC,GACrB,SAACC,GACKd,GACFc,EAAEC,iBAEJpC,GAAWA,EAAQmC,EACrB,GACA,CAACd,EAAmBrB,IAGtB,OACEqC,mCACeX,GAAcY,EAAUC,EAAuBC,KAAMvB,GAClEA,GAAIA,EACJvB,KAAMA,EACNI,IAAKA,EACLP,IAAKA,EACLS,QAASiC,EACT9B,OAAQA,EACR0B,UAAWY,EAAGC,EAAOC,KAAMhB,EAAiBiB,EAAAA,KACzCF,EAAOnB,gBAAkBA,GACzBmB,EAAOjB,WAAaA,IAEX,aAAAlB,EACM,mBAAAE,oBACDU,GAEhB0B,EAAQd,EAASpB,EAAM8B,EAAGC,EAAOI,YAClCT,EAAAU,cAAA,OAAA,CAAMlB,UAAWY,EAAGC,EAAO9C,KAAMJ,IAAiBI,GACjDiD,GAASd,EAASpB,EAAM8B,EAAGC,EAAOM,UAGzC,IAGF,SAASH,EAAQI,EAAqBtC,EAA+CkB,GACnF,GAAKoB,EACL,OAAOZ,EAAAU,cAACG,EAAK,CAAArB,UAAWA,EAAWsB,WAAW,EAAOxC,KAAMA,EAAMyC,SAAUF,EAAKG,KAAKC,WACvF,CAEA,IAAeC,EAAAA,EAAgBnE,EAAM,CACnC0B,SAAUkB,EACV7B,OAAQqD,EACRC,cAAezB,EACf5B,QAASoD"}