{"version":3,"file":"useSubMenuIndex.js","sources":["../../../../../../../src/components/Menu/Menu/hooks/useSubMenuIndex.tsx"],"sourcesContent":["import { useCallback, useState } from \"react\";\n\nexport default function useSubMenuIndex() {\n  const [openSubMenuIndex, setOpenSubMenuIndex] = useState<number>(null);\n  const hasOpenSubMenu = typeof openSubMenuIndex === \"number\";\n\n  const setSubMenuIsOpenByIndex = useCallback(\n    (index: number, isOpen: boolean) => {\n      const isOpenIndexValue = isOpen ? index : null;\n      setOpenSubMenuIndex(isOpenIndexValue);\n    },\n    [setOpenSubMenuIndex]\n  );\n\n  const resetOpenSubMenuIndex = useCallback(() => {\n    setOpenSubMenuIndex(null);\n  }, [setOpenSubMenuIndex]);\n\n  return { setSubMenuIsOpenByIndex, hasOpenSubMenu, openSubMenuIndex, setOpenSubMenuIndex, resetOpenSubMenuIndex };\n}\n"],"names":["useSubMenuIndex","_useState","useState","_useState2","_slicedToArray","openSubMenuIndex","setOpenSubMenuIndex","hasOpenSubMenu","setSubMenuIsOpenByIndex","useCallback","index","isOpen","resetOpenSubMenuIndex"],"mappings":"uIAEc,SAAUA,IACtB,IAAAC,EAAgDC,EAAiB,MAAKC,EAAAC,EAAAH,EAAA,GAA/DI,EAAgBF,EAAA,GAAEG,EAAmBH,EAAA,GACtCI,EAA6C,iBAArBF,EAExBG,EAA0BC,GAC9B,SAACC,EAAeC,GAEdL,EADyBK,EAASD,EAAQ,KAE5C,GACA,CAACJ,IAGGM,EAAwBH,GAAY,WACxCH,EAAoB,KACtB,GAAG,CAACA,IAEJ,MAAO,CAAEE,wBAAAA,EAAyBD,eAAAA,EAAgBF,iBAAAA,EAAkBC,oBAAAA,EAAqBM,sBAAAA,EAC3F"}