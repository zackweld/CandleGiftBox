{"version":3,"file":"BreadcrumbItem.js","sources":["../../../../../../src/components/BreadcrumbsBar/BreadcrumbItem/BreadcrumbItem.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { useRef } from \"react\";\nimport useIsOverflowing from \"../../../hooks/useIsOverflowing/useIsOverflowing\";\nimport Tooltip from \"../../../components/Tooltip/Tooltip\";\nimport { backwardCompatibilityForProperties } from \"../../../helpers/backwardCompatibilityForProperties\";\nimport { BreadcrumbContent } from \"./BreadcrumbContent/BreadcrumbContent\";\nimport { HideShowEvent } from \"../../../constants\";\nimport { SubIcon, VibeComponentProps } from \"../../../types\";\nimport styles from \"./BreadcrumbItem.module.scss\";\n\nconst MOUSEENTER = [HideShowEvent.MOUSE_ENTER];\nconst MOUSELEAVE = [HideShowEvent.MOUSE_LEAVE];\n\nexport interface BreadcrumbItemProps extends VibeComponentProps {\n  /** The display text. */\n  text?: string;\n  /** Should item be disabled. */\n  disabled?: boolean;\n  /**\n   * @deprecated - use disabled instead\n   */\n  isDisabled?: boolean;\n  /** Should item be clickable - this should be recieved from the breadcrumbsBar ( Navigation/Indication bar ). */\n  isClickable?: boolean;\n  /** If the item is clickable and the type of navigation is a link, this is the link */\n  link?: string;\n  /** If the item is clickable and the type of navigation is a function, this is the function */\n  onClick?: () => void;\n  /** Should be the current Item - mainly effects the item`s style. */\n  isCurrent?: boolean;\n  /** An Icon - If no icon needed then should be left empty. */\n  icon?: SubIcon;\n  showText?: boolean;\n}\n\nconst BreadcrumbItem: React.FC<BreadcrumbItemProps> = ({\n  className,\n  text = \"\",\n  disabled,\n  // Backward compatibility for props naming\n  isDisabled,\n  isClickable = false,\n  link,\n  onClick,\n  isCurrent = false,\n  icon,\n  id,\n  showText = true,\n  \"data-testid\": dataTestId\n}) => {\n  const overrideDisabled = backwardCompatibilityForProperties([disabled, isDisabled], false) as boolean;\n  const componentRef = useRef<HTMLSpanElement>(null);\n  const isOverflowing = useIsOverflowing({ ref: componentRef });\n\n  return (\n    <Tooltip\n      disableDialogSlide={true}\n      withoutDialog={false}\n      content={(isOverflowing || !showText) && text}\n      showTrigger={MOUSEENTER}\n      hideTrigger={MOUSELEAVE}\n      addKeyboardHideShowTriggersByDefault={!showText}\n    >\n      <li\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.BREADCRUMB_ITEM, id)}\n        className={cx(styles.breadcrumbItemWrapper, className, {\n          [styles.disabled]: overrideDisabled\n        })}\n      >\n        <BreadcrumbContent\n          ref={componentRef}\n          isClickable={isClickable}\n          link={link}\n          onClick={onClick}\n          text={text}\n          icon={icon}\n          isCurrent={isCurrent}\n          disabled={overrideDisabled}\n          showText={showText}\n        />\n      </li>\n    </Tooltip>\n  );\n};\n\nexport default BreadcrumbItem;\n"],"names":["MOUSEENTER","HideShowEvent","MOUSE_ENTER","MOUSELEAVE","MOUSE_LEAVE","BreadcrumbItem","_ref","className","_ref$text","text","_ref$isClickable","isClickable","link","onClick","_ref$isCurrent","isCurrent","icon","id","_ref$showText","showText","dataTestId","overrideDisabled","backwardCompatibilityForProperties","disabled","isDisabled","componentRef","useRef","isOverflowing","useIsOverflowing","ref","React","createElement","Tooltip","disableDialogSlide","withoutDialog","content","showTrigger","hideTrigger","addKeyboardHideShowTriggersByDefault","getTestId","ComponentDefaultTestId","BREADCRUMB_ITEM","cx","styles","breadcrumbItemWrapper","_defineProperty","BreadcrumbContent"],"mappings":"6rBAWA,IAAMA,EAAa,CAACC,EAAcC,aAC5BC,EAAa,CAACF,EAAcG,aAwB5BC,EAAgD,SAAlCC,GAcf,IAbHC,EAASD,EAATC,UAASC,EAAAF,EACTG,KAAAA,OAAO,IAAHD,EAAG,GAAEA,EAGCE,EAAAJ,EACVK,YAAAA,OAAc,IAAHD,GAAQA,EACnBE,EAAIN,EAAJM,KACAC,EAAOP,EAAPO,QAAOC,EAAAR,EACPS,UAAAA,OAAY,IAAHD,GAAQA,EACjBE,EAAIV,EAAJU,KACAC,EAAEX,EAAFW,GAAEC,EAAAZ,EACFa,SAAAA,OAAW,IAAHD,GAAOA,EACAE,EAAUd,EAAzB,eAEMe,EAAmBC,EAAmC,CAZpDhB,EAARiB,SAEUjB,EAAVkB,aAUoF,GAC9EC,EAAeC,EAAwB,MACvCC,EAAgBC,EAAiB,CAAEC,IAAKJ,IAE9C,OACEK,EAAAC,cAACC,EAAO,CACNC,oBAAoB,EACpBC,eAAe,EACfC,SAAUR,IAAkBR,IAAaV,EACzC2B,YAAapC,EACbqC,YAAalC,EACbmC,sCAAuCnB,GAEvCW,EACEC,cAAA,KAAA,CAAAd,GAAIA,EACS,cAAAG,GAAcmB,EAAUC,EAAuBC,gBAAiBxB,GAC7EV,UAAWmC,EAAGC,EAAOC,sBAAuBrC,EAASsC,KAClDF,EAAOpB,SAAWF,KAGrBS,EAAAC,cAACe,EACC,CAAAjB,IAAKJ,EACLd,YAAaA,EACbC,KAAMA,EACNC,QAASA,EACTJ,KAAMA,EACNO,KAAMA,EACND,UAAWA,EACXQ,SAAUF,EACVF,SAAUA,KAKpB"}