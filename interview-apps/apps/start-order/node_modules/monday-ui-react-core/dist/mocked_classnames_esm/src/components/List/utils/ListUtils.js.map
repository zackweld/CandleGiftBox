{"version":3,"file":"ListUtils.js","sources":["../../../../../../src/components/List/utils/ListUtils.ts"],"sourcesContent":["import { MutableRefObject, useLayoutEffect, useState } from \"react\";\nimport { ListWrapperComponentStringType, ListWrapperComponentType } from \"../ListConstants\";\nimport { ListItemComponentType } from \"../../ListItem/ListItemConstants\";\n\nlet listIdCounter = 0;\nexport const generateListId = () => {\n  return `list-${listIdCounter++}`;\n};\n\nexport const useListId = (id: string) => {\n  const [listId, setListId] = useState<string>();\n  useLayoutEffect(() => {\n    setListId(id || generateListId());\n  }, [id]);\n  return listId;\n};\n\nexport const getListItemIdByIndex = (childrenRefs: MutableRefObject<HTMLElement[]>, index: number): string => {\n  return childrenRefs.current[index]?.id;\n};\n\nexport const getListItemIndexById = (childrenRefs: MutableRefObject<HTMLElement[]>, id: string): number => {\n  return childrenRefs.current.findIndex(child => child?.id === id);\n};\n\nexport const getListItemComponentType = (listComponent: ListWrapperComponentType | ListWrapperComponentStringType) => {\n  switch (listComponent) {\n    case ListWrapperComponentType.UL:\n    case ListWrapperComponentType.OL:\n      return ListItemComponentType.LI;\n    case ListWrapperComponentType.NAV:\n      return ListItemComponentType.A;\n    default:\n      return ListItemComponentType.DIV;\n  }\n};\n\nconst isListItem = (element: HTMLElement) => {\n  return element && element.getAttribute(\"role\") === \"option\";\n};\n\nexport const getNextListItemIndex = (currentIndex: number, childrenRefs: MutableRefObject<HTMLElement[]>) => {\n  while (currentIndex < childrenRefs.current.length - 1) {\n    const child = childrenRefs.current[++currentIndex];\n    if (isListItem(child)) {\n      return currentIndex;\n    }\n  }\n  return undefined;\n};\n\nexport const getPrevListItemIndex = (currentIndex: number, childrenRefs: MutableRefObject<HTMLElement[]>) => {\n  while (currentIndex > 0) {\n    const child = childrenRefs.current[--currentIndex];\n    if (isListItem(child)) {\n      return currentIndex;\n    }\n  }\n  return undefined;\n};\n"],"names":["listIdCounter","generateListId","concat","useListId","id","_useState","useState","_useState2","_slicedToArray","listId","setListId","useLayoutEffect","getListItemIdByIndex","childrenRefs","index","_a","current","getListItemIndexById","findIndex","child","getListItemComponentType","listComponent","ListWrapperComponentType","UL","OL","ListItemComponentType","LI","NAV","A","DIV","isListItem","element","getAttribute","getNextListItemIndex","currentIndex","length","getPrevListItemIndex"],"mappings":"mRAIA,IAAIA,EAAgB,EACPC,EAAiB,WAC5B,MAAAC,QAAAA,OAAeF,IACjB,EAEaG,EAAY,SAACC,GACxB,IAAAC,EAA4BC,IAAkBC,EAAAC,EAAAH,EAAA,GAAvCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAIxB,OAHAI,GAAgB,WACdD,EAAUN,GAAMH,IAClB,GAAG,CAACG,IACGK,CACT,EAEaG,EAAuB,SAACC,EAA+CC,SAClF,OAAoC,QAA7BC,EAAAF,EAAaG,QAAQF,UAAQ,IAAAC,OAAA,EAAAA,EAAAX,EACtC,EAEaa,EAAuB,SAACJ,EAA+CT,GAClF,OAAOS,EAAaG,QAAQE,WAAU,SAAAC,GAAK,OAAIA,aAAA,EAAAA,EAAOf,MAAOA,IAC/D,EAEagB,EAA2B,SAACC,GACvC,OAAQA,GACN,KAAKC,EAAyBC,GAC9B,KAAKD,EAAyBE,GAC5B,OAAOC,EAAsBC,GAC/B,KAAKJ,EAAyBK,IAC5B,OAAOF,EAAsBG,EAC/B,QACE,OAAOH,EAAsBI,IAEnC,EAEMC,EAAa,SAACC,GAClB,OAAOA,GAA4C,WAAjCA,EAAQC,aAAa,OACzC,EAEaC,EAAuB,SAACC,EAAsBrB,GACzD,KAAsBA,EAAaG,QAAQmB,OAAS,EAA7CD,GAAgD,CACrD,IAAMf,EAAQN,EAAaG,UAAUkB,GACrC,GAAIJ,EAAWX,GACb,OAAOe,CAEV,CAEH,EAEaE,EAAuB,SAACF,EAAsBrB,GACzD,KAAOqB,EAAe,GAAG,CACvB,IAAMf,EAAQN,EAAaG,UAAUkB,GACrC,GAAIJ,EAAWX,GACb,OAAOe,CAEV,CAEH"}