{"version":3,"file":"Dropdown.js","sources":["../../../../../src/components/Dropdown/Dropdown.tsx"],"sourcesContent":["/* eslint-disable react/require-default-props,react/forbid-prop-types */\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport { SIZES, SIZES_VALUES } from \"../../constants\";\nimport React, { forwardRef, useCallback, useMemo, useRef, useState } from \"react\";\nimport Select, { InputProps, components, createFilter, ActionMeta } from \"react-select\";\nimport AsyncSelect from \"react-select/async\";\nimport { noop as NOOP } from \"lodash-es\";\nimport { WindowedMenuList } from \"react-windowed-select\";\nimport MenuComponent from \"./components/menu/menu\";\nimport DropdownIndicatorComponent from \"./components/DropdownIndicator/DropdownIndicator\";\nimport OptionComponent from \"./components/option/option\";\nimport SingleValueComponent from \"./components/singleValue/singleValue\";\nimport ClearIndicatorComponent from \"./components/ClearIndicator/ClearIndicator\";\nimport MultiValueContainer from \"./components/MultiValueContainer/MultiValueContainer\";\nimport {\n  ADD_AUTO_HEIGHT_COMPONENTS,\n  defaultCustomStyles,\n  DROPDOWN_CHIP_COLORS,\n  DROPDOWN_ID,\n  DROPDOWN_MENU_ARIA_LABEL,\n  DROPDOWN_MENU_ID,\n  DROPDOWN_MENU_PLACEMENT,\n  DROPDOWN_MENU_POSITION\n} from \"./DropdownConstants\";\nimport generateBaseStyles, { customTheme } from \"./Dropdown.styles\";\nimport Control from \"./components/Control/Control\";\nimport menuStyles from \"./components/menu/menu.module.scss\";\nimport styles from \"./Dropdown.module.scss\";\nimport {\n  DropdownOption,\n  DropdownState,\n  CustomMenuProps,\n  CustomOptionProps,\n  CustomSingleValueProps,\n  DropdownComponentProps\n} from \"./Dropdown.types\";\nimport { VibeComponent, withStaticProps } from \"../../types\";\n\nconst Dropdown: VibeComponent<DropdownComponentProps, HTMLElement> & {\n  size?: typeof SIZES;\n  sizes?: typeof SIZES;\n  chipColors?: typeof DROPDOWN_CHIP_COLORS;\n  menuPlacements?: typeof DROPDOWN_MENU_PLACEMENT;\n  menuPositions?: typeof DROPDOWN_MENU_POSITION;\n  createFilter?: typeof createFilter;\n} = forwardRef(\n  (\n    {\n      className,\n      optionWrapperClassName,\n      singleValueWrapperClassName,\n      dropdownMenuWrapperClassName,\n      placeholder = \"\",\n      disabled = false,\n      readOnly = false,\n      withReadOnlyStyle,\n      onMenuOpen = NOOP,\n      onMenuClose = NOOP,\n      onFocus = NOOP,\n      onBlur = NOOP,\n      onChange: customOnChange = NOOP,\n      searchable = true,\n      options = [],\n      defaultValue,\n      value: customValue,\n      noOptionsMessage,\n      openMenuOnFocus,\n      openMenuOnClick,\n      clearable = true,\n      OptionRenderer,\n      optionRenderer,\n      ValueRenderer,\n      valueRenderer,\n      menuRenderer,\n      menuPlacement = Dropdown.menuPlacements.BOTTOM,\n      rtl,\n      size = Dropdown.sizes.MEDIUM,\n      asyncOptions,\n      cacheOptions,\n      defaultOptions,\n      isVirtualized,\n      menuPortalTarget,\n      extraStyles = defaultCustomStyles,\n      maxMenuHeight,\n      menuIsOpen,\n      tabIndex = \"0\",\n      id = DROPDOWN_ID,\n      menuId = DROPDOWN_MENU_ID,\n      menuAriaLabel = DROPDOWN_MENU_ARIA_LABEL,\n      autoFocus = false,\n      multi = false,\n      multiline = false,\n      onOptionRemove: customOnOptionRemove,\n      onOptionSelect,\n      onClear,\n      onInputChange = NOOP,\n      closeMenuOnSelect = !multi,\n      closeMenuOnScroll: customCloseMenuOnScroll = false,\n      withMandatoryDefaultOptions = false,\n      isOptionSelected,\n      insideOverflowContainer = false,\n      insideOverflowWithTransformContainer = false,\n      tooltipContent = \"\",\n      onKeyDown = NOOP,\n      isLoading = false,\n      loadingMessage,\n      ariaLabel,\n      tabSelectsValue = true,\n      popupsContainerSelector,\n      filterOption,\n      menuPosition = Dropdown.menuPositions.ABSOLUTE,\n      \"data-testid\": dataTestId\n    }: DropdownComponentProps,\n    ref: React.ForwardedRef<HTMLElement>\n  ) => {\n    const controlRef = useRef();\n    const overrideMenuPortalTarget =\n      menuPortalTarget || (popupsContainerSelector && document.querySelector(popupsContainerSelector));\n    const overrideDefaultValue = useMemo(() => {\n      if (defaultValue) {\n        return Array.isArray(defaultValue)\n          ? (defaultValue as DropdownOption[]).map(df => ({ ...df, isMandatory: true }))\n          : { ...(defaultValue as DropdownOption), isMandatory: true };\n      }\n\n      return defaultValue;\n    }, [defaultValue]);\n\n    const [selected, setSelected] = useState(overrideDefaultValue || []);\n    const finalOptionRenderer = optionRenderer || OptionRenderer;\n    const finalValueRenderer = valueRenderer || ValueRenderer;\n    const isControlled = !!customValue;\n    const selectedOptions = customValue ?? selected;\n    const selectedOptionsMap = useMemo(() => {\n      if (Array.isArray(selectedOptions)) {\n        return selectedOptions.reduce((acc, option) => ({ ...acc, [option.value]: option }), {});\n      }\n      return {};\n    }, [selectedOptions]);\n\n    const overrideAriaLabel = useMemo(() => {\n      return (\n        ariaLabel ||\n        `${readOnly ? \"Readonly \" : \"\"} ${tooltipContent} ${\n          Array.isArray(selectedOptions) ? `Selected: ${selectedOptions.map(o => o.label).join(\", \")}` : \"Select\"\n        }`\n      );\n    }, [ariaLabel, readOnly, selectedOptions, tooltipContent]);\n    const value = multi ? selectedOptions : customValue;\n\n    const inlineStyles = useMemo(() => {\n      // We first want to get the default stylized groups (e.g. \"container\", \"menu\").\n      const baseStyles = generateBaseStyles({\n        size,\n        rtl,\n        insideOverflowContainer,\n        controlRef,\n        insideOverflowWithTransformContainer\n      });\n\n      type BaseStyles = typeof baseStyles;\n\n      // Then we want to run the consumer's root-level custom styles with our \"base\" override groups.\n      const customStyles = extraStyles(baseStyles);\n\n      // Lastly, we create a style groups object that makes sure we run each custom group with our basic overrides.\n      const mergedStyles: any = Object.entries(customStyles).reduce((accumulator, [stylesGroup, stylesFn]) => {\n        return {\n          ...accumulator,\n          [stylesGroup]: (defaultStyles: BaseStyles, state: DropdownState) => {\n            const providedFn = baseStyles[stylesGroup as keyof BaseStyles];\n            const provided = providedFn ? providedFn(defaultStyles, state) : defaultStyles;\n\n            return stylesFn(provided, state);\n          }\n        };\n      }, {} as BaseStyles);\n\n      if (multi) {\n        if (multiline) {\n          ADD_AUTO_HEIGHT_COMPONENTS.forEach((component: string) => {\n            const original = mergedStyles[component];\n            mergedStyles[component] = (provided: BaseStyles, state: DropdownState) => ({\n              ...original(provided, state),\n              height: \"auto\"\n            });\n          });\n        }\n\n        const originalValueContainer = mergedStyles.valueContainer;\n        mergedStyles.valueContainer = (provided: BaseStyles, state: DropdownState) => ({\n          ...originalValueContainer(provided, state),\n          paddingLeft: 6\n        });\n      }\n\n      return mergedStyles;\n    }, [size, rtl, insideOverflowContainer, insideOverflowWithTransformContainer, extraStyles, multi, multiline]);\n\n    const Menu = useCallback(\n      (props: CustomMenuProps) => (\n        <MenuComponent\n          {...props}\n          id={menuId}\n          ariaLabel={menuAriaLabel}\n          Renderer={menuRenderer}\n          dropdownMenuWrapperClassName={dropdownMenuWrapperClassName}\n        />\n      ),\n      [dropdownMenuWrapperClassName, menuRenderer, menuId, menuAriaLabel]\n    );\n\n    const DropdownIndicator = useCallback(\n      (props: React.HTMLAttributes<HTMLElement> & { size?: SIZES_VALUES }) => (\n        <DropdownIndicatorComponent {...props} size={size} />\n      ),\n      [size]\n    );\n\n    const Option = useCallback(\n      (props: CustomOptionProps) => (\n        <OptionComponent {...props} Renderer={finalOptionRenderer} optionWrapperClassName={optionWrapperClassName} />\n      ),\n      [finalOptionRenderer, optionWrapperClassName]\n    );\n\n    const Input = useCallback(\n      (props: InputProps) => <components.Input {...props} aria-label=\"Dropdown input\" aria-controls={menuId} />,\n      [menuId]\n    );\n\n    const SingleValue = useCallback(\n      (props: CustomSingleValueProps) => (\n        <SingleValueComponent\n          {...props}\n          readOnly={readOnly}\n          Renderer={finalValueRenderer}\n          selectedOption={selectedOptions[0]}\n          singleValueWrapperClassName={singleValueWrapperClassName}\n        />\n      ),\n      [finalValueRenderer, readOnly, selectedOptions, singleValueWrapperClassName]\n    );\n\n    const ClearIndicator = useCallback(\n      (props: React.HTMLAttributes<HTMLElement> & { size?: SIZES_VALUES }) => (\n        <ClearIndicatorComponent {...props} size={size} />\n      ),\n      [size]\n    );\n\n    const onOptionRemove = useMemo(() => {\n      return function (optionValue: number, e: React.MouseEvent | React.KeyboardEvent) {\n        if (customOnOptionRemove) {\n          customOnOptionRemove(selectedOptionsMap[optionValue]);\n        }\n        const newSelectedOptions = Array.isArray(selectedOptions)\n          ? selectedOptions.filter(option => option.value !== optionValue)\n          : selectedOptions;\n\n        if (customOnChange) {\n          customOnChange(newSelectedOptions, e);\n        }\n        setSelected(newSelectedOptions);\n      };\n    }, [customOnChange, customOnOptionRemove, selectedOptions, selectedOptionsMap]);\n\n    const customProps = useMemo(\n      () => ({\n        selectedOptions,\n        onSelectedDelete: onOptionRemove,\n        isMultiline: multiline,\n        insideOverflowContainer,\n        insideOverflowWithTransformContainer,\n        controlRef,\n        tooltipContent,\n        popupsContainerSelector,\n        size\n      }),\n      [\n        selectedOptions,\n        onOptionRemove,\n        multiline,\n        insideOverflowContainer,\n        insideOverflowWithTransformContainer,\n        tooltipContent,\n        popupsContainerSelector,\n        size\n      ]\n    );\n    const onChange = (option: DropdownOption | DropdownOption[], meta: ActionMeta<DropdownOption>) => {\n      if (customOnChange) {\n        customOnChange(option, meta);\n      }\n\n      switch (meta.action) {\n        case \"select-option\": {\n          const selectedOption = multi ? meta.option : option;\n\n          if (onOptionSelect) {\n            onOptionSelect(selectedOption);\n          }\n\n          if (!isControlled) {\n            setSelected([...selectedOptions, selectedOption]);\n          }\n          break;\n        }\n\n        case \"clear\":\n          if (onClear) {\n            onClear();\n          }\n\n          if (!isControlled) {\n            if (withMandatoryDefaultOptions) setSelected(overrideDefaultValue);\n            else setSelected([]);\n          }\n          break;\n      }\n    };\n\n    const DropDownComponent: React.ElementType = asyncOptions ? AsyncSelect : Select;\n\n    const asyncAdditions = {\n      ...(asyncOptions && {\n        loadOptions: asyncOptions,\n        cacheOptions,\n        ...(defaultOptions && { defaultOptions })\n      })\n    };\n\n    const additions = {\n      ...(!asyncOptions && { options }),\n      ...(multi && {\n        isMulti: true\n      })\n    };\n\n    const closeMenuOnScroll = useCallback(\n      (event: React.FocusEvent) => {\n        const scrolledElement = event.target;\n        if (scrolledElement?.parentElement?.classList.contains(menuStyles.dropdownMenuWrapper)) {\n          return false;\n        }\n        return customCloseMenuOnScroll || insideOverflowContainer || insideOverflowWithTransformContainer;\n      },\n      [insideOverflowContainer, insideOverflowWithTransformContainer, customCloseMenuOnScroll]\n    );\n\n    return (\n      <DropDownComponent\n        className={cx(styles.dropdown, className)}\n        selectProps={customProps}\n        components={{\n          DropdownIndicator,\n          Menu,\n          ClearIndicator,\n          Input,\n          Option,\n          Control,\n          SingleValue,\n          ...(multi && {\n            MultiValue: NOOP, // We need it for react-select to behave nice with \"multi\"\n            ValueContainer: MultiValueContainer\n          }),\n          ...(isVirtualized && { MenuList: WindowedMenuList })\n        }}\n        // When inside scroll we set the menu position by js and we can't follow the drop down location while use scrolling\n        closeMenuOnScroll={closeMenuOnScroll}\n        size={size}\n        noOptionsMessage={noOptionsMessage}\n        placeholder={placeholder}\n        isDisabled={disabled}\n        isClearable={!readOnly && clearable}\n        isSearchable={!readOnly && searchable}\n        readOnly={readOnly}\n        withReadOnlyStyle={withReadOnlyStyle}\n        aria-readonly={readOnly}\n        aria-label={overrideAriaLabel}\n        aria-details={tooltipContent}\n        aria-expanded={!readOnly && menuIsOpen}\n        aria-haspopup=\"listbox\"\n        aria-activedescendant\n        role=\"combobox\"\n        defaultValue={defaultValue}\n        value={value}\n        onMenuOpen={onMenuOpen}\n        onMenuClose={onMenuClose}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n        onInputChange={onInputChange}\n        openMenuOnFocus={openMenuOnFocus}\n        openMenuOnClick={openMenuOnClick}\n        isRtl={rtl}\n        styles={inlineStyles}\n        theme={customTheme}\n        maxMenuHeight={maxMenuHeight}\n        menuPortalTarget={overrideMenuPortalTarget}\n        menuPlacement={menuPlacement}\n        menuPosition={menuPosition}\n        menuIsOpen={!readOnly && menuIsOpen}\n        tabIndex={tabIndex}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.DROPDOWN, id)}\n        autoFocus={autoFocus}\n        closeMenuOnSelect={closeMenuOnSelect}\n        ref={ref as React.Ref<any>}\n        withMandatoryDefaultOptions={withMandatoryDefaultOptions}\n        isOptionSelected={isOptionSelected}\n        isLoading={isLoading}\n        loadingMessage={loadingMessage}\n        tabSelectsValue={tabSelectsValue}\n        filterOption={filterOption}\n        {...asyncAdditions}\n        {...additions}\n      />\n    );\n  }\n);\n\nexport default withStaticProps(Dropdown, {\n  // TODO Deprecate Dropdown.size in the next major version - use Dropdown.sizes instead\n  size: SIZES,\n  sizes: SIZES,\n  chipColors: DROPDOWN_CHIP_COLORS,\n  menuPlacements: DROPDOWN_MENU_PLACEMENT,\n  menuPositions: DROPDOWN_MENU_POSITION,\n  createFilter: createFilter\n});\n"],"names":["Dropdown","forwardRef","_ref","ref","className","optionWrapperClassName","singleValueWrapperClassName","dropdownMenuWrapperClassName","_ref$placeholder","placeholder","_ref$disabled","disabled","_ref$readOnly","readOnly","withReadOnlyStyle","_ref$onMenuOpen","onMenuOpen","NOOP","_ref$onMenuClose","onMenuClose","_ref$onFocus","onFocus","_ref$onBlur","onBlur","_ref$onChange","onChange","customOnChange","_ref$searchable","searchable","_ref$options","options","defaultValue","customValue","value","noOptionsMessage","openMenuOnFocus","openMenuOnClick","_ref$clearable","clearable","OptionRenderer","optionRenderer","ValueRenderer","valueRenderer","menuRenderer","_ref$menuPlacement","menuPlacement","menuPlacements","BOTTOM","rtl","_ref$size","size","sizes","MEDIUM","asyncOptions","cacheOptions","defaultOptions","isVirtualized","menuPortalTarget","_ref$extraStyles","extraStyles","defaultCustomStyles","maxMenuHeight","menuIsOpen","_ref$tabIndex","tabIndex","_ref$id","id","DROPDOWN_ID","_ref$menuId","menuId","DROPDOWN_MENU_ID","_ref$menuAriaLabel","menuAriaLabel","DROPDOWN_MENU_ARIA_LABEL","_ref$autoFocus","autoFocus","_ref$multi","multi","_ref$multiline","multiline","customOnOptionRemove","onOptionRemove","onOptionSelect","onClear","_ref$onInputChange","onInputChange","_ref$closeMenuOnSelec","closeMenuOnSelect","_ref$closeMenuOnScrol","closeMenuOnScroll","customCloseMenuOnScroll","_ref$withMandatoryDef","withMandatoryDefaultOptions","isOptionSelected","_ref$insideOverflowCo","insideOverflowContainer","_ref$insideOverflowWi","insideOverflowWithTransformContainer","_ref$tooltipContent","tooltipContent","_ref$onKeyDown","onKeyDown","_ref$isLoading","isLoading","loadingMessage","ariaLabel","_ref$tabSelectsValue","tabSelectsValue","popupsContainerSelector","filterOption","_ref$menuPosition","menuPosition","menuPositions","ABSOLUTE","dataTestId","controlRef","useRef","overrideMenuPortalTarget","document","querySelector","overrideDefaultValue","useMemo","Array","isArray","map","df","Object","assign","isMandatory","_useState","useState","_useState2","_slicedToArray","setSelected","finalOptionRenderer","finalValueRenderer","isControlled","selectedOptions","selectedOptionsMap","reduce","acc","option","_defineProperty","overrideAriaLabel","concat","o","label","join","inlineStyles","baseStyles","generateBaseStyles","customStyles","mergedStyles","entries","accumulator","_ref2","_ref3","stylesGroup","stylesFn","defaultStyles","state","providedFn","provided","ADD_AUTO_HEIGHT_COMPONENTS","forEach","component","original","height","originalValueContainer","valueContainer","paddingLeft","Menu","useCallback","props","React","createElement","MenuComponent","Renderer","DropdownIndicator","DropdownIndicatorComponent","Option","OptionComponent","Input","components","SingleValue","SingleValueComponent","selectedOption","ClearIndicator","ClearIndicatorComponent","optionValue","e","newSelectedOptions","filter","customProps","onSelectedDelete","isMultiline","DropDownComponent","AsyncSelect","Select","asyncAdditions","loadOptions","additions","isMulti","event","scrolledElement","target","parentElement","_a","classList","contains","menuStyles","dropdownMenuWrapper","cx","styles","dropdown","selectProps","Control","MultiValue","ValueContainer","MultiValueContainer","MenuList","WindowedMenuList","isDisabled","isClearable","isSearchable","role","meta","action","_toConsumableArray","isRtl","theme","customTheme","getTestId","ComponentDefaultTestId","DROPDOWN","withStaticProps","SIZES","chipColors","DROPDOWN_CHIP_COLORS","DROPDOWN_MENU_PLACEMENT","DROPDOWN_MENU_POSITION","createFilter"],"mappings":"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"}