import{typeof as e}from"../../../_virtual/_rollupPluginBabelHelpers.js";import{__rest as t}from"../../../_virtual/_tslib.js";import i from"react";import r from"../Icon/Icon.js";import{InfixKind as n}from"./SliderConstants.js";import{useSliderInfix as o,useSliderSelection as c}from"./SliderContext.js";import l from"./SelectionIndicator.js";var a={clickable:!1,iconSize:18,ignoreFocusStyle:!0};function s(s){var m=s===n.POSTFIX,f=o(),p=f.prefix,u=f.postfix,d=f.indicateSelection,j=f.selectionIndicatorWidth,g=c(),v=g.value,b=g.valueText,x=m?u:p;if(d&&(m||g.ranged))return[!0,[],i.createElement(l,{key:s,kind:s}),{width:j}];if("object"===e(x)&&x.icon){var S=x.icon,y=t(x,["icon"]),I=Object.assign(Object.assign({},a),y);return[!0,[],i.createElement(r,Object.assign({key:"infix-icon",icon:S},I)),{}]}return"function"==typeof x?[!0,[],x(v,b),{}]:"string"==typeof x?[!0,["txt"],i.createElement(i.Fragment,null,x),{}]:void 0===x?[!1,[],null,{}]:[!0,[],i.createElement(i.Fragment,null,x),{}]}export{s as useSliderInfixComponent};
//# sourceMappingURL=SliderInfixHooks.js.map
