{"version":3,"file":"useIsMouseOver.js","sources":["../../../../src/hooks/useIsMouseOver.ts"],"sourcesContent":["import { RefObject, useCallback, useState } from \"react\";\nimport useEventListener from \"./useEventListener\";\nimport { GeneralEventType } from \"../types/events\";\n\nexport default function useIsMouseOver({ ref }: { ref: RefObject<HTMLElement> }): boolean {\n  const [isHovered, setIsHover] = useState<boolean>(false);\n\n  const element = ref && ref.current;\n  const setHovered = useCallback(\n    (event: GeneralEventType) => {\n      const isEventHover = event.target === element;\n      setIsHover(isEventHover);\n    },\n    [setIsHover, element]\n  );\n  const setNotHovered = useCallback((_event: GeneralEventType) => setIsHover(false), [setIsHover]);\n\n  useEventListener({ eventName: \"mouseover\", callback: setHovered, ref });\n  useEventListener({ eventName: \"mouseout\", callback: setNotHovered, ref });\n\n  return isHovered;\n}\n"],"names":["useIsMouseOver","_ref","ref","_useState","useState","_useState2","_slicedToArray","isHovered","setIsHover","element","current","setHovered","useCallback","event","target","setNotHovered","_event","useEventListener","eventName","callback"],"mappings":"yKAIc,SAAUA,EAAcC,GAAyC,IAAtCC,EAAGD,EAAHC,IACvCC,EAAgCC,GAAkB,GAAMC,EAAAC,EAAAH,EAAA,GAAjDI,EAASF,EAAA,GAAEG,EAAUH,EAAA,GAEtBI,EAAUP,GAAOA,EAAIQ,QACrBC,EAAaC,GACjB,SAACC,GAECL,EADqBK,EAAMC,SAAWL,EAExC,GACA,CAACD,EAAYC,IAETM,EAAgBH,GAAY,SAACI,GAAwB,OAAKR,GAAW,KAAQ,CAACA,IAKpF,OAHAS,EAAiB,CAAEC,UAAW,YAAaC,SAAUR,EAAYT,IAAAA,IACjEe,EAAiB,CAAEC,UAAW,WAAYC,SAAUJ,EAAeb,IAAAA,IAE5DK,CACT"}