{"version":3,"file":"virtualized-service.js","sources":["../../../../src/services/virtualized-service.js"],"sourcesContent":["const LAST_ITEM_ID = \"~~~lastItem~~~\";\nconst EMPTY_OBJECT = {};\nexport const getNormalizedItems = (items, idGetter, sizeGetter) => {\n  const normalizedItems = {};\n  let offset = 0;\n\n  const lastIndex = items.length - 1;\n  items.forEach((item, index) => {\n    const size = sizeGetter(item, index);\n    const uniqueId = idGetter(item, index);\n    // keep height/offsetTop for backward compatibility\n    normalizedItems[uniqueId] = { item, index, height: size, size, offsetTop: offset, offset };\n    if (lastIndex === index) {\n      normalizedItems[LAST_ITEM_ID] = normalizedItems[uniqueId];\n    }\n    offset += size;\n  });\n\n  return normalizedItems;\n};\n\nexport const isItemInView = (item, scrollTop, offsetHeight) => {\n  const isItemUnderTheViewableArea = item.offsetTop > scrollTop + offsetHeight;\n  const isItemAboveTheViewableArea = item.offsetTop < scrollTop;\n\n  return !isItemUnderTheViewableArea && !isItemAboveTheViewableArea;\n};\n\nexport const getMaxOffset = (offsetSize, normalizedItems) => {\n  const lastItem = normalizedItems[LAST_ITEM_ID];\n  if (!lastItem) return 0;\n  const { size, offset } = lastItem;\n  return offset + size - offsetSize; // max offset\n};\n\nexport const easeInOutQuint = time => {\n  let t = time;\n  return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n};\n\nfunction findItemAtOffset(items, normalizedItems, idGetter, fromIndex, offset) {\n  for (let i = fromIndex; i < items.length; i++) {\n    const itemId = idGetter(items[i], i);\n    const normalizedItem = normalizedItems[itemId];\n    const { height, offsetTop } = normalizedItem || EMPTY_OBJECT;\n    if (height + offsetTop > offset) {\n      return itemId;\n    }\n  }\n  return null;\n}\n\n// for vertical layout - this returns true when vertical scrollbar visible\n// for horizontal layout - this returns true when horizontal scrollbar visible\nexport const isLayoutDirectionScrollbarVisible = (items, normalizedItems, idGetter, componentSize) => {\n  if (!componentSize) return false;\n  const lastExistingItem = items[items.length - 1] || EMPTY_OBJECT;\n  const lastExistingItemId = idGetter(lastExistingItem, items.length - 1);\n  const normalizedItem = normalizedItems[lastExistingItemId];\n  if (!normalizedItem) return false;\n  const { offset: lastExistingItemIdOffset, size: lastExistingItemSize } = normalizedItems[lastExistingItemId];\n  const maxOffset = lastExistingItemIdOffset + lastExistingItemSize;\n  const isVisible = maxOffset > componentSize;\n  return isVisible;\n};\n\nfunction isEmptyObject(obj) {\n  return obj === EMPTY_OBJECT;\n}\n\nexport const getOnItemsRenderedData = (\n  items,\n  normalizedItems,\n  idGetter,\n  visibleStartIndex,\n  visibleStopIndex,\n  listSize,\n  currentOffsetTop\n) => {\n  const firstVisibleItem = items[visibleStartIndex] || EMPTY_OBJECT;\n  const secondVisibleItem = items[visibleStartIndex + 1] || EMPTY_OBJECT;\n  const lastVisibleItem = items[visibleStopIndex] || EMPTY_OBJECT;\n  const firstItemId = isEmptyObject(firstVisibleItem) ? undefined : idGetter(firstVisibleItem, visibleStartIndex);\n  const secondItemId = isEmptyObject(secondVisibleItem)\n    ? undefined\n    : idGetter(secondVisibleItem, visibleStartIndex + 1);\n  const lastItemId = isEmptyObject(lastVisibleItem) ? undefined : idGetter(lastVisibleItem, visibleStopIndex);\n  const centerOffset = currentOffsetTop + listSize / 2;\n  const { offsetTop: firstItemOffsetTop, height: firstItemHeight } = normalizedItems[firstItemId] || EMPTY_OBJECT;\n  const firstItemOffsetEnd = firstItemOffsetTop + firstItemHeight;\n  const centerItemId = findItemAtOffset(items, normalizedItems, idGetter, visibleStartIndex, centerOffset);\n\n  return {\n    firstItemId,\n    secondItemId,\n    lastItemId,\n    centerItemId,\n    firstItemOffsetEnd,\n    currentOffsetTop\n  };\n};\n"],"names":["LAST_ITEM_ID","EMPTY_OBJECT","getNormalizedItems","items","idGetter","sizeGetter","normalizedItems","offset","lastIndex","length","forEach","item","index","size","uniqueId","height","offsetTop","getMaxOffset","offsetSize","lastItem","easeInOutQuint","time","t","isLayoutDirectionScrollbarVisible","componentSize","lastExistingItemId","_normalizedItems$last","isEmptyObject","obj","getOnItemsRenderedData","visibleStartIndex","visibleStopIndex","listSize","currentOffsetTop","firstVisibleItem","secondVisibleItem","lastVisibleItem","firstItemId","undefined","secondItemId","lastItemId","_ref2","firstItemOffsetEnd","centerItemId","fromIndex","i","itemId","_ref","findItemAtOffset"],"mappings":"AAAA,IAAMA,EAAe,iBACfC,EAAe,CAAA,EACRC,EAAqB,SAACC,EAAOC,EAAUC,GAClD,IAAMC,EAAkB,CAAA,EACpBC,EAAS,EAEPC,EAAYL,EAAMM,OAAS,EAYjC,OAXAN,EAAMO,SAAQ,SAACC,EAAMC,GACnB,IAAMC,EAAOR,EAAWM,EAAMC,GACxBE,EAAWV,EAASO,EAAMC,GAEhCN,EAAgBQ,GAAY,CAAEH,KAAAA,EAAMC,MAAAA,EAAOG,OAAQF,EAAMA,KAAAA,EAAMG,UAAWT,EAAQA,OAAAA,GAC9EC,IAAcI,IAChBN,EAAgBN,GAAgBM,EAAgBQ,IAElDP,GAAUM,CACZ,IAEOP,CACT,EASaW,EAAe,SAACC,EAAYZ,GACvC,IAAMa,EAAWb,EAAgBN,GACjC,OAAKmB,EACoBA,EAAXZ,OAAWY,EAAjBN,KACeK,EAFD,CAGxB,EAEaE,EAAiB,SAAAC,GAC5B,IAAIC,EAAID,EACR,MAAW,GAAJC,EAAU,GAAKA,EAAIA,EAAIA,EAAIA,EAAIA,EAAI,EAAI,KAAOA,EAAIA,EAAIA,EAAIA,EAAIA,CACvE,EAgBaC,IAAAA,EAAoC,SAACpB,EAAOG,EAAiBF,EAAUoB,GAClF,IAAKA,EAAe,OAAO,EAC3B,IACMC,EAAqBrB,EADFD,EAAMA,EAAMM,OAAS,IAAMR,EACEE,EAAMM,OAAS,GAErE,IADuBH,EAAgBmB,GAClB,OAAO,EAC5B,IAAAC,EAAyEpB,EAAgBmB,GAGzF,OAHwCC,EAAhCnB,OAA4DmB,EAA1Bb,KAEZW,CAEhC,EAEA,SAASG,EAAcC,GACrB,OAAOA,IAAQ3B,CACjB,KAEa4B,EAAyB,SACpC1B,EACAG,EACAF,EACA0B,EACAC,EACAC,EACAC,GAEA,IAAMC,EAAmB/B,EAAM2B,IAAsB7B,EAC/CkC,EAAoBhC,EAAM2B,EAAoB,IAAM7B,EACpDmC,EAAkBjC,EAAM4B,IAAqB9B,EAC7CoC,EAAcV,EAAcO,QAAoBI,EAAYlC,EAAS8B,EAAkBJ,GACvFS,EAAeZ,EAAcQ,QAC/BG,EACAlC,EAAS+B,EAAmBL,EAAoB,GAC9CU,EAAab,EAAcS,QAAmBE,EAAYlC,EAASgC,EAAiBL,GAE1FU,EAAmEnC,EAAgB+B,IAAgBpC,EAC7FyC,EAD+BD,EAA7BzB,UAAsDyB,EAAvB1B,OAEjC4B,EAlDR,SAA0BxC,EAAOG,EAAiBF,EAAUwC,EAAWrC,GACrE,IAAK,IAAIsC,EAAID,EAAezC,EAAMM,OAAVoC,EAAkBA,IAAK,CAC7C,IAAMC,EAAS1C,EAASD,EAAM0C,GAAIA,GAElCE,EADuBzC,EAAgBwC,IACS7C,EAChD,GADc8C,EAANhC,OAAiBgC,EAAT/B,UACST,EACvB,OAAOuC,CAEX,CACA,OAAO,IACT,CAwCuBE,CAAiB7C,EAAOG,EAAiBF,EAAU0B,EAHnDG,EAAmBD,EAAW,GAKnD,MAAO,CACLK,YAAAA,EACAE,aAAAA,EACAC,WAAAA,EACAG,aAAAA,EACAD,mBAAAA,EACAT,iBAAAA,EAEJ"}