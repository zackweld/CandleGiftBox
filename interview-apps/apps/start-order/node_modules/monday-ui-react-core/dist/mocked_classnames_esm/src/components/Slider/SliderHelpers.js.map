{"version":3,"file":"SliderHelpers.js","sources":["../../../../../src/components/Slider/SliderHelpers.ts"],"sourcesContent":["export function _calcDimension(max: number, min: number, value: number): [number, number] {\n  const valuePoints = max - min;\n  const dimension = Math.round(((value - min) * 100) / valuePoints);\n  return [dimension, dimension];\n}\n\nfunction _ensureSingleValueText(valueText: string, value: number, formatter: (value: number) => string): string {\n  if (valueText) {\n    return valueText;\n  }\n  if (typeof value === \"undefined\") {\n    return undefined;\n  }\n  if (typeof formatter !== \"function\") {\n    return value.toString();\n  }\n  return formatter(value);\n}\n\nfunction _ensureStepModulo(pageStep: number, step: number) {\n  const moduloToStep = pageStep % step;\n  if (moduloToStep === 0) {\n    return pageStep;\n  }\n  return pageStep - moduloToStep;\n}\n\nexport function calcDimensions(max: number, min: number, ranged: boolean, value: number | number[]) {\n  if (!ranged) {\n    const [dimension, position] = _calcDimension(max, min, value as number);\n    return { dimension, offset: 0, positions: [position], thumbKeys: [\"start\"] };\n  }\n  const [val1, val2] = value as number[];\n  const [offset, position] = _calcDimension(max, min, val1);\n  const [dimension, position2] = _calcDimension(max, min, val2);\n  return { dimension, offset, positions: [position, position2], thumbKeys: [\"start\", \"end\"] };\n}\n\nexport function calculatePageStep(max: number, min: number, step: number) {\n  const pageStep = (max - min) / 10;\n  if (pageStep < step) {\n    // too small pageSize --> return step\n    return step;\n  }\n  const fixedPageStep = _ensureStepModulo(Math.round(pageStep), step);\n  if ((max - min) / fixedPageStep > 10) {\n    // too many steps with fixedPageStep - multiply it\n    return 2 * fixedPageStep;\n  }\n  // basic page size is ok\n  return fixedPageStep;\n}\n\nexport function ensureDefaultValue(\n  defaultValue: number | number[],\n  min: number,\n  max: number,\n  ranged: boolean\n): number | number[] {\n  if (ranged && !Array.isArray(defaultValue)) {\n    return [min, max];\n  }\n  if (defaultValue < min) {\n    return min;\n  }\n  if (defaultValue > max) {\n    return max;\n  }\n  return defaultValue;\n}\n\nexport function ensureValueText(\n  valueText: string,\n  value: number | number[],\n  formatter: (value: number) => string\n): string | string[] {\n  if (!Array.isArray(value)) {\n    return _ensureSingleValueText(valueText, value, formatter);\n  }\n  return value.map((valueSingle, index) => {\n    const valueTextSingle = Array.isArray(valueText) ? valueText[index] : undefined;\n    return _ensureSingleValueText(valueTextSingle, valueSingle, formatter);\n  });\n}\n\nexport function getNearest(newValue: number, ranged: boolean, value: number | number[]) {\n  if (!ranged) {\n    return 0;\n  }\n  const diff0 = Math.abs((value as number[])[0] - newValue);\n  const diff1 = Math.abs((value as number[])[1] - newValue);\n  return diff0 > diff1 ? 1 : 0;\n}\n\nexport function moveToPx(offsetInPx: number, min: number, max: number, railCoords: { width: number }, step: number) {\n  const valuePoints = max - min;\n  const pxToValuePoints = railCoords.width / valuePoints;\n  const offsetInValuePoints = Math.round(offsetInPx / pxToValuePoints) + min;\n  const newValue = Math.round(offsetInValuePoints / step) * step;\n  if (newValue < min) {\n    return min;\n  }\n  if (newValue > max) {\n    return max;\n  }\n  return newValue;\n}\n"],"names":["_calcDimension","max","min","value","dimension","Math","round","_ensureSingleValueText","valueText","formatter","calcDimensions","ranged","_calcDimension2","_calcDimension3","_slicedToArray","offset","positions","thumbKeys","_value","val2","_calcDimension4","_calcDimension5","position","_calcDimension6","_calcDimension7","calculatePageStep","step","pageStep","fixedPageStep","moduloToStep","_ensureStepModulo","ensureDefaultValue","defaultValue","Array","isArray","ensureValueText","map","valueSingle","index","undefined","getNearest","newValue","abs","moveToPx","offsetInPx","railCoords","width"],"mappings":"wFAAgBA,EAAeC,EAAaC,EAAaC,GACvD,IACMC,EAAYC,KAAKC,MAAuB,KAAfH,EAAQD,IADnBD,EAAMC,IAE1B,MAAO,CAACE,EAAWA,EACrB,CAEA,SAASG,EAAuBC,EAAmBL,EAAeM,GAChE,OAAID,SAGiB,IAAVL,EAGc,mBAAdM,EACFN,KAEFM,EAAUN,QANjB,EAOF,CAUM,SAAUO,EAAeT,EAAaC,EAAaS,EAAiBR,GACxE,IAAKQ,EAAQ,CACX,IAAAC,EAA8BZ,EAAeC,EAAKC,EAAKC,GAAgBU,EAAAC,EAAAF,EAAA,GACvE,MAAO,CAAER,UADOS,EAAA,GACIE,OAAQ,EAAGC,UAAW,CADhBH,EAAA,IAC4BI,UAAW,CAAC,SACnE,CACD,IAAAC,EAAAJ,EAAqBX,EAAiB,GAAzBgB,EAAID,EAAA,GACjBE,EAA2BpB,EAAeC,EAAKC,EADpCgB,EAAA,IAC8CG,EAAAP,EAAAM,EAAA,GAAlDL,EAAMM,EAAA,GAAEC,EAAQD,EAAA,GACvBE,EAA+BvB,EAAeC,EAAKC,EAAKiB,GAAKK,EAAAV,EAAAS,EAAA,GAC7D,MAAO,CAAEnB,UADOoB,EAAA,GACIT,OAAAA,EAAQC,UAAW,CAACM,EADbE,EAAA,IACmCP,UAAW,CAAC,QAAS,OACrF,UAEgBQ,EAAkBxB,EAAaC,EAAawB,GAC1D,IAAMC,GAAY1B,EAAMC,GAAO,GAC/B,GAAewB,EAAXC,EAEF,OAAOD,EAET,IAAME,EAzBR,SAA2BD,EAAkBD,GAC3C,IAAMG,EAAeF,EAAWD,EAChC,OAAqB,IAAjBG,EACKF,EAEFA,EAAWE,CACpB,CAmBwBC,CAAkBzB,KAAKC,MAAMqB,GAAWD,GAC9D,OAAKzB,EAAMC,GAAO0B,EAAgB,GAEzB,EAAIA,EAGNA,CACT,CAEM,SAAUG,EACdC,EACA9B,EACAD,EACAU,GAEA,OAAIA,IAAWsB,MAAMC,QAAQF,GACpB,CAAC9B,EAAKD,GAEIC,EAAf8B,EACK9B,EAEL8B,EAAe/B,EACVA,EAEF+B,CACT,UAEgBG,EACd3B,EACAL,EACAM,GAEA,OAAKwB,MAAMC,QAAQ/B,GAGZA,EAAMiC,KAAI,SAACC,EAAaC,GAE7B,OAAO/B,EADiB0B,MAAMC,QAAQ1B,GAAaA,EAAU8B,QAASC,EACvBF,EAAa5B,EAC9D,IALSF,EAAuBC,EAAWL,EAAOM,EAMpD,UAEgB+B,EAAWC,EAAkB9B,EAAiBR,GAC5D,OAAKQ,GAGSN,KAAKqC,IAAKvC,EAAmB,GAAKsC,GAClCpC,KAAKqC,IAAKvC,EAAmB,GAAKsC,GACzB,EAJd,CAKX,CAEM,SAAUE,EAASC,EAAoB1C,EAAaD,EAAa4C,EAA+BnB,GACpG,IAGMe,EAAWpC,KAAKC,OADMD,KAAKC,MAAMsC,GADfC,EAAWC,OADf7C,EAAMC,KAE6CA,GACrBwB,GAAQA,EAC1D,OAAexB,EAAXuC,EACKvC,EAELuC,EAAWxC,EACNA,EAEFwC,CACT"}