{"version":3,"file":"useIsMouseEnter.js","sources":["../../../../src/hooks/useIsMouseEnter.ts"],"sourcesContent":["import { useCallback, useState, RefObject } from \"react\";\nimport useEventListener from \"./useEventListener\";\n\n// TODO can be replaced with useIsMouseOver\nexport default function useIsMouseEnter({ ref }: { ref: RefObject<HTMLElement> }) {\n  const [isHovered, setIsHover] = useState<boolean>(false);\n\n  const setHovered = useCallback(\n    (event: MouseEvent) => {\n      const element = ref && ref.current;\n      const isEventHover = event.target === element;\n      setIsHover(isEventHover);\n    },\n    [setIsHover, ref]\n  );\n  const setNotHovered = useCallback(() => setIsHover(false), [setIsHover]);\n\n  useEventListener({ eventName: \"mouseenter\", callback: setHovered, ref });\n  useEventListener({ eventName: \"mouseleave\", callback: setNotHovered, ref });\n\n  return isHovered;\n}\n"],"names":["useIsMouseEnter","_ref","ref","_useState","useState","_useState2","_slicedToArray","isHovered","setIsHover","setHovered","useCallback","event","target","current","setNotHovered","useEventListener","eventName","callback"],"mappings":"yKAIc,SAAUA,EAAeC,GAAyC,IAAtCC,EAAGD,EAAHC,IACxCC,EAAgCC,GAAkB,GAAMC,EAAAC,EAAAH,EAAA,GAAjDI,EAASF,EAAA,GAAEG,EAAUH,EAAA,GAEtBI,EAAaC,GACjB,SAACC,GAGCH,EADqBG,EAAMC,UADXV,GAAOA,EAAIW,SAG7B,GACA,CAACL,EAAYN,IAETY,EAAgBJ,GAAY,WAAA,OAAMF,GAAW,KAAQ,CAACA,IAK5D,OAHAO,EAAiB,CAAEC,UAAW,aAAcC,SAAUR,EAAYP,IAAAA,IAClEa,EAAiB,CAAEC,UAAW,aAAcC,SAAUH,EAAeZ,IAAAA,IAE9DK,CACT"}