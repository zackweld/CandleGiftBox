{"version":3,"file":"dom-event-utils.js","sources":["../../../../src/utils/dom-event-utils.ts"],"sourcesContent":["import React from \"react\";\n\nconst ENTER_KEY_CODE = 13;\nconst ESCAPE_KEY_CODE = 27;\nconst BACKSPACE = 8;\nconst TAB = 9;\nconst SPACE = 32;\nconst PAGE_UP = 33;\nconst PAGE_DOWN = 34;\nconst END = 35;\nconst HOME = 36;\nconst ARROW_LEFT_KEY_CODE = 37;\nconst ARROW_UP_KEY_CODE = 38;\nconst ARROW_RIGHT_KEY_CODE = 39;\nconst ARROW_DOWN_KEY_CODE = 40;\n\nfunction validateEvent(\n  event: React.KeyboardEvent,\n  keyCode: React.KeyboardEvent[\"keyCode\"] | React.KeyboardEvent[\"which\"],\n  key?: React.KeyboardEvent[\"key\"]\n) {\n  if (!event) return false;\n  return event.keyCode === keyCode || event.which === keyCode || (key && event.key === key);\n}\n\nexport function isEnterEvent(event: React.KeyboardEvent) {\n  return validateEvent(event, ENTER_KEY_CODE);\n}\n\nexport function isShiftEnterEvent(event: React.KeyboardEvent) {\n  return event.shiftKey && isEnterEvent(event);\n}\n\nexport function isEscapeEvent(event: React.KeyboardEvent) {\n  return validateEvent(event, ESCAPE_KEY_CODE);\n}\n\nexport function isArrowUpEvent(event: React.KeyboardEvent) {\n  return validateEvent(event, ARROW_UP_KEY_CODE);\n}\n\nexport function isArrowDownEvent(event: React.KeyboardEvent) {\n  return validateEvent(event, ARROW_DOWN_KEY_CODE);\n}\n\nexport function isArrowRightEvent(event: React.KeyboardEvent) {\n  return validateEvent(event, ARROW_RIGHT_KEY_CODE);\n}\n\nexport function isArrowLeftEvent(event: React.KeyboardEvent) {\n  return validateEvent(event, ARROW_LEFT_KEY_CODE);\n}\n\nexport function isBackspaceEvent(event: React.KeyboardEvent) {\n  return validateEvent(event, BACKSPACE);\n}\n\nexport function isSpaceEvent(event: React.KeyboardEvent) {\n  return validateEvent(event, SPACE);\n}\n\nexport function isTabEvent(event: React.KeyboardEvent) {\n  return validateEvent(event, TAB);\n}\n\nexport function isPageUpEvent(event: React.KeyboardEvent) {\n  return validateEvent(event, PAGE_UP);\n}\n\nexport function isPageDownEvent(event: React.KeyboardEvent) {\n  return validateEvent(event, PAGE_DOWN);\n}\n\nexport function isEndEvent(event: React.KeyboardEvent) {\n  return validateEvent(event, END);\n}\n\nexport function isHomeEvent(event: React.KeyboardEvent) {\n  return validateEvent(event, HOME);\n}\n\nexport function isShiftTabEvent(event: React.KeyboardEvent) {\n  return event.shiftKey && isTabEvent(event);\n}\n"],"names":["validateEvent","event","keyCode","key","which","isEnterEvent","isEscapeEvent","isArrowUpEvent","isArrowDownEvent","isArrowRightEvent","isArrowLeftEvent","isTabEvent","isPageUpEvent","isPageDownEvent","isEndEvent","isHomeEvent"],"mappings":"AAgBA,SAASA,EACPC,EACAC,EACAC,GAEA,QAAKF,IACEA,EAAMC,UAAYA,GAAWD,EAAMG,QAAUF,GAAYC,GAAOF,EAAME,MAAQA,EACvF,CAEM,SAAUE,EAAaJ,GAC3B,OAAOD,EAAcC,EAxBA,GAyBvB,CAMM,SAAUK,EAAcL,GAC5B,OAAOD,EAAcC,EA/BC,GAgCxB,CAEM,SAAUM,EAAeN,GAC7B,OAAOD,EAAcC,EA1BG,GA2B1B,CAEM,SAAUO,EAAiBP,GAC/B,OAAOD,EAAcC,EA5BK,GA6B5B,CAEM,SAAUQ,EAAkBR,GAChC,OAAOD,EAAcC,EAjCM,GAkC7B,CAEM,SAAUS,EAAiBT,GAC/B,OAAOD,EAAcC,EAvCK,GAwC5B,CAUM,SAAUU,EAAWV,GACzB,OAAOD,EAAcC,EAzDX,EA0DZ,CAEM,SAAUW,EAAcX,GAC5B,OAAOD,EAAcC,EA3DP,GA4DhB,CAEM,SAAUY,EAAgBZ,GAC9B,OAAOD,EAAcC,EA9DL,GA+DlB,CAEM,SAAUa,EAAWb,GACzB,OAAOD,EAAcC,EAjEX,GAkEZ,CAEM,SAAUc,EAAYd,GAC1B,OAAOD,EAAcC,EApEV,GAqEb"}