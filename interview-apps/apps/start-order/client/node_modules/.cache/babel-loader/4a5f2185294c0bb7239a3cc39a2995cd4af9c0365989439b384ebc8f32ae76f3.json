{"ast":null,"code":"var i,\n  t,\n  I = 200,\n  e = 300;\n!function (i) {\n  i.PREFIX = \"prefix\", i.POSTFIX = \"postfix\";\n}(i || (i = {})), function (i) {\n  i.PRIMARY = \"primary\", i.NEGATIVE = \"negative\", i.POSITIVE = \"positive\";\n}(t || (t = {}));\nexport { i as InfixKind, t as SliderColor, e as TOOLTIP_SHOW_DELAY, I as UPDATE_SLIDER_SIZE_DEBOUNCE };","map":{"version":3,"names":["i","t","I","e","PREFIX","POSTFIX","PRIMARY","NEGATIVE","POSITIVE","InfixKind","SliderColor","TOOLTIP_SHOW_DELAY","UPDATE_SLIDER_SIZE_DEBOUNCE"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/Slider/SliderConstants.ts"],"sourcesContent":["import { Slider } from \"../index\";\nimport { IconType } from \"../Icon/IconConstants\";\nimport { ReactElement } from \"react\";\n\nexport const BEM_PREFIX = \"monday\";\n\nexport const COMPONENT_ID = \"slider\";\n\nexport const UPDATE_SLIDER_SIZE_DEBOUNCE = 200;\n\nexport const TOOLTIP_SHOW_DELAY = 300;\n\nexport enum InfixKind {\n  PREFIX = \"prefix\",\n  POSTFIX = \"postfix\"\n}\n\nexport enum SliderColor {\n  PRIMARY = \"primary\",\n  NEGATIVE = \"negative\",\n  POSITIVE = \"positive\"\n}\nexport type SliderSize = (typeof Slider.sizes)[keyof typeof Slider.sizes];\n\nexport type SliderContextSelection = {\n  max: number;\n  min: number;\n  ranged: boolean;\n  step: number;\n  value: number | number[];\n  valueText: string | string[];\n};\n\nexport type SliderContextUI = {\n  active: number;\n  ariaLabel: string;\n  ariaLabelledby: string;\n  color: SliderColor;\n  disabled: boolean;\n  dragging: number;\n  focused: number;\n  size: SliderSize;\n  shapeTestId: (subElement: string) => string;\n  showValue: boolean;\n};\n\nexport type SliderContextActions = {\n  setActive: (value: number) => void;\n  setFocused: (value: number) => void;\n  setDragging: (value: number) => void;\n  changeThumbValue: (newValue: number | string, thumbIndex?: number, cancelFocus?: boolean) => void;\n  drugThumb: (newValue: number | number[]) => void;\n  decreaseValue: (consumerStep?: number) => void;\n  increaseValue: (consumerStep?: number) => void;\n};\n\nexport type SliderContextInfix = {\n  /**\n   * Show selected from Slider range value\n   */\n  indicateSelection?: boolean;\n  /**\n   * Options for initial/start/prefix element, it can be one of:\n   *  - Any Component (react component, node, text, number etc.)\n   *  - Or it can be an object of options for Icons component (see Icon components props)\n   *  - Or it can be an object for Label (Icon, Heading - and other components)\n   *  - Or it can be Render Props Function witch are getting value and valueText\n   */\n  prefix?:\n    | { icon: IconType }\n    | string\n    | ((value: number | number[], valueText: string | string[]) => ReactElement)\n    | ReactElement;\n  /**\n   * Options for postfix/end/finishing element. Same as prefix element.\n   */\n  postfix?:\n    | { icon: IconType }\n    | string\n    | ((value: number | number[], valueText: string | string[]) => ReactElement)\n    | ReactElement;\n  /**\n   * Width of SelectionIndicator (i.e. TextField)\n   */\n  selectionIndicatorWidth?: string;\n};\n"],"mappings":"AAQO,IAIKA,CAAA;EAKAC,CAAA;EATCC,CAAA,GAA8B;EAE9BC,CAAA,GAAqB;AAAA,CAElC,UAAYH,CAAA;EACVA,CAAA,CAAAI,MAAA,aACAJ,CAAA,CAAAK,OAAA,YACD;AAAA,CAHD,CAAYL,CAAA,KAAAA,CAAA,GAGX,MAED,UAAYA,CAAA;EACVA,CAAA,CAAAM,OAAA,cACAN,CAAA,CAAAO,QAAA,eACAP,CAAA,CAAAQ,QAAA,aACD;AAAA,CAJD,CAAYP,CAAA,KAAAA,CAAA,GAIX;AAAA,SAAAD,CAAA,IAAAS,SAAA,EAAAR,CAAA,IAAAS,WAAA,EAAAP,CAAA,IAAAQ,kBAAA,EAAAT,CAAA,IAAAU,2BAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}