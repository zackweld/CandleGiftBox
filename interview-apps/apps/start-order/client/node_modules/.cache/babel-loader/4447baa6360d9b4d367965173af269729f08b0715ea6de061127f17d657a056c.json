{"ast":null,"code":"import { defineProperty as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { getStyle as t } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport r from \"classnames\";\nimport o, { forwardRef as n, useMemo as s } from \"react\";\nimport a from \"../Button/Button.js\";\nimport l from \"../IconButton/IconButton.js\";\nimport i from \"../Icon/Icons/components/CloseSmall.js\";\nimport { AlertBannerBackgroundColor as c } from \"./AlertBannerConstants.js\";\nimport { NOOP as m } from \"../../utils/function-utils.js\";\nimport { ComponentDefaultTestId as p } from \"../../tests/constants.js\";\nimport { getTestId as u } from \"../../tests/testIds.js\";\nimport { withStaticProps as d } from \"../../types/withStaticProps.js\";\nimport f from \"./AlertBanner.module.scss.js\";\nimport A from \"../Text/Text.js\";\nimport { AlertBannerContext as B } from \"./AlertBannerContext.js\";\nvar N = n(function (n, c) {\n    var d = n.children,\n      C = n.className,\n      E = n.backgroundColor,\n      b = void 0 === E ? N.backgroundColors.PRIMARY : E,\n      R = n.onClose,\n      v = void 0 === R ? m : R,\n      I = n.ariaLabel,\n      j = void 0 === I ? \"\" : I,\n      T = n.closeButtonAriaLabel,\n      k = void 0 === T ? \"Close\" : T,\n      y = n.isCloseHidden,\n      g = void 0 !== y && y,\n      _ = n.id,\n      L = n[\"data-testid\"],\n      O = s(function () {\n        return r(C, f.alertBanner, t(f, b));\n      }, [C, b]),\n      x = b === N.backgroundColors.DARK,\n      D = b === N.backgroundColors.WARNING,\n      P = s(function () {\n        return D ? A.colors.FIXED_DARK : x ? A.colors.ON_INVERTED : A.colors.ON_PRIMARY;\n      }, [x, D]),\n      h = s(function () {\n        return o.Children.toArray(d).filter(function (e) {\n          return !(!e.type.isAlertBannerItem && \"MDXCreateElement\" !== e.type.displayName) || (console.error(\"Alert banner child is not supported. Please use AlertBannerText, AlertBannerLink or AlertBannerButton.\", e), !1);\n        }).map(function (e, t) {\n          return o.cloneElement(e, Object.assign(Object.assign({}, null == e ? void 0 : e.props), {\n            marginLeft: t > 0,\n            isDarkBackground: x\n          }));\n        });\n      }, [d, x]);\n    return o.createElement(A, {\n      type: A.types.TEXT2,\n      color: P,\n      ref: c,\n      className: O,\n      role: \"banner\",\n      \"aria-label\": j || \"banner\",\n      id: _,\n      \"data-testid\": L || u(p.ALERT_BANNER, _)\n    }, o.createElement(B.Provider, {\n      value: {\n        textColor: P\n      }\n    }, o.createElement(\"div\", {\n      className: r(f.content)\n    }, h.map(function (t, n) {\n      var s = t.type.isAlertBannerText;\n      return o.createElement(\"div\", {\n        key: n,\n        className: r(f.contentItem, e({}, f.contentItemText, s))\n      }, s ? o.createElement(\"div\", {\n        className: r(f.ellipsis)\n      }, t) : t);\n    }))), o.createElement(\"div\", {\n      className: r(f.closeButtonWrapper)\n    }, g ? null : o.createElement(l, {\n      \"data-testid\": \"alert-banner-close-button\",\n      icon: i,\n      className: r(f.closeBtn),\n      hideTooltip: !0,\n      onClick: v,\n      size: a.sizes.SMALL,\n      kind: l.kinds.TERTIARY,\n      color: x ? a.colors.ON_INVERTED_BACKGROUND : a.colors.ON_PRIMARY_COLOR,\n      ariaLabel: k\n    })));\n  }),\n  C = d(N, {\n    backgroundColors: c\n  });\nexport { C as default };","map":{"version":3,"names":["N","n","c","d","children","C","className","E","backgroundColor","b","backgroundColors","PRIMARY","R","onClose","v","m","I","ariaLabel","j","T","closeButtonAriaLabel","k","y","isCloseHidden","g","_","id","L","O","s","r","f","alertBanner","t","x","DARK","D","WARNING","P","A","colors","FIXED_DARK","ON_INVERTED","ON_PRIMARY","h","o","Children","toArray","filter","e","type","isAlertBannerItem","displayName","console","error","map","cloneElement","Object","assign","props","marginLeft","isDarkBackground","createElement","types","TEXT2","color","ref","role","u","p","ALERT_BANNER","B","Provider","value","textColor","content","isAlertBannerText","key","contentItem","contentItemText","ellipsis","closeButtonWrapper","l","icon","i","closeBtn","hideTooltip","onClick","size","a","sizes","SMALL","kind","kinds","TERTIARY","ON_INVERTED_BACKGROUND","ON_PRIMARY_COLOR","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/AlertBanner/AlertBanner.tsx"],"sourcesContent":["import { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport cx from \"classnames\";\nimport React, { ForwardedRef, forwardRef, ReactElement, useMemo } from \"react\";\nimport Button from \"../../components/Button/Button\";\nimport IconButton from \"../../components/IconButton/IconButton\";\nimport CloseSmall from \"../../components/Icon/Icons/components/CloseSmall\";\nimport { AlertBannerBackgroundColor } from \"./AlertBannerConstants\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport { AlertBannerLinkProps } from \"./AlertBannerLink/AlertBannerLink\";\nimport { AlertBannerButtonProps } from \"./AlertBannerButton/AlertBannerButton\";\nimport { AlertBannerTextProps } from \"./AlertBannerText/AlertBannerText\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { VibeComponent, withStaticProps } from \"../../types\";\nimport styles from \"./AlertBanner.module.scss\";\nimport Text from \"../Text/Text\";\nimport { AlertBannerContext } from \"./AlertBannerContext\";\n\n// TODO: [breaking] type it to adopt a structure of a text and one (optional) cta (either link/button)\ntype ChildrenType = ReactElement<AlertBannerButtonProps | AlertBannerLinkProps | AlertBannerTextProps>;\n\nexport interface AlertBannerProps extends VibeComponentProps {\n  /**\n   * Set external styling to the progress bar.\n   */\n  className?: string;\n  backgroundColor?: AlertBannerBackgroundColor;\n  isCloseHidden?: boolean;\n  /** ARIA description for the progress bar */\n  ariaLabel?: string;\n  closeButtonAriaLabel?: string;\n  onClose?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  children?: ChildrenType | ChildrenType[];\n}\n\nconst AlertBanner: VibeComponent<AlertBannerProps> & {\n  backgroundColors?: typeof AlertBannerBackgroundColor;\n} = forwardRef(\n  (\n    {\n      children: originalChildren,\n      className,\n      backgroundColor = AlertBanner.backgroundColors.PRIMARY,\n      onClose = NOOP,\n      ariaLabel = \"\",\n      closeButtonAriaLabel = \"Close\",\n      isCloseHidden = false,\n      id,\n      \"data-testid\": dataTestId\n    },\n    ref: ForwardedRef<HTMLDivElement>\n  ) => {\n    const classNames = useMemo(() => {\n      return cx(className, styles.alertBanner, getStyle(styles, backgroundColor));\n    }, [className, backgroundColor]);\n\n    const isDarkBackground = backgroundColor === AlertBanner.backgroundColors.DARK;\n    const isFixedColor = backgroundColor === AlertBanner.backgroundColors.WARNING;\n    const textColor = useMemo(() => {\n      if (isFixedColor) {\n        return Text.colors.FIXED_DARK;\n      }\n      return isDarkBackground ? Text.colors.ON_INVERTED : Text.colors.ON_PRIMARY;\n    }, [isDarkBackground, isFixedColor]);\n    const children = useMemo(() => {\n      const allChildren = React.Children.toArray(originalChildren) as ReactElement[];\n      const filteredChildren = allChildren.filter(\n        (\n          child: ReactElement & {\n            type: Record<string, unknown>;\n          }\n        ) => {\n          if (child.type.isAlertBannerItem || child.type.displayName === \"MDXCreateElement\") return true;\n          console.error(\n            \"Alert banner child is not supported. Please use AlertBannerText, AlertBannerLink or AlertBannerButton.\",\n            child\n          );\n          return false;\n        }\n      );\n\n      return filteredChildren.map((child, index) => {\n        return React.cloneElement(child, {\n          ...child?.props,\n          marginLeft: index > 0,\n          isDarkBackground\n        });\n      });\n    }, [originalChildren, isDarkBackground]);\n\n    return (\n      <Text\n        type={Text.types.TEXT2}\n        color={textColor}\n        ref={ref}\n        className={classNames}\n        role=\"banner\"\n        aria-label={ariaLabel || \"banner\"}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.ALERT_BANNER, id)}\n      >\n        <AlertBannerContext.Provider value={{ textColor }}>\n          <div className={cx(styles.content)}>\n            {children.map(\n              (\n                child: ReactElement & {\n                  type: Record<string, unknown>;\n                },\n                index\n              ) => {\n                const childTypeIsAlertBannerText = child.type.isAlertBannerText;\n                return (\n                  <div\n                    key={index}\n                    className={cx(styles.contentItem, {\n                      [styles.contentItemText]: childTypeIsAlertBannerText\n                    })}\n                  >\n                    {childTypeIsAlertBannerText ? <div className={cx(styles.ellipsis)}>{child}</div> : child}\n                  </div>\n                );\n              }\n            )}\n          </div>\n        </AlertBannerContext.Provider>\n        <div className={cx(styles.closeButtonWrapper)}>\n          {isCloseHidden ? null : (\n            <IconButton\n              data-testid=\"alert-banner-close-button\"\n              icon={CloseSmall}\n              className={cx(styles.closeBtn)}\n              hideTooltip\n              onClick={onClose}\n              size={Button.sizes.SMALL}\n              kind={IconButton.kinds.TERTIARY}\n              color={isDarkBackground ? Button.colors.ON_INVERTED_BACKGROUND : Button.colors.ON_PRIMARY_COLOR}\n              ariaLabel={closeButtonAriaLabel}\n            />\n          )}\n        </div>\n      </Text>\n    );\n  }\n);\n\nexport default withStaticProps(AlertBanner, { backgroundColors: AlertBannerBackgroundColor });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}