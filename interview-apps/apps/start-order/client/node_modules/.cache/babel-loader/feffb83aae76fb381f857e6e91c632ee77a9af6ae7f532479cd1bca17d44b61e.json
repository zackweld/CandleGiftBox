{"ast":null,"code":"import t, { useCallback as o, useMemo as r } from \"react\";\nimport e from \"classnames\";\nimport a from \"../Flex/Flex.js\";\nimport n from \"./AvatarGroupCounterTooltipContentVirtualizedList.js\";\nimport { avatarRenderer as i } from \"./AvatarGroupCounterTooltipHelper.js\";\nimport l from \"./AvatarGroupCounterTooltipContent.module.scss.js\";\nvar p = function (p) {\n  var s = p.avatars,\n    u = void 0 === s ? [] : s,\n    m = p.type,\n    c = p.className,\n    v = p.isVirtualizedList,\n    d = void 0 !== v && v,\n    C = p.tooltipContentContainerRef,\n    f = o(function (t) {\n      var o;\n      return (null === (o = null == t ? void 0 : t.tooltipProps) || void 0 === o ? void 0 : o.content) || (null == t ? void 0 : t.ariaLabel);\n    }, []),\n    b = r(function () {\n      var t = u.map(function (t) {\n          return {\n            value: Object.assign(Object.assign({}, t.props), {\n              tooltipContent: f(t.props)\n            })\n          };\n        }),\n        o = !t.some(function (t) {\n          return t.value.tooltipContent;\n        }),\n        r = o ? void 0 : t.map(function (t) {\n          return t.value.tooltipContent;\n        }).join(\",\");\n      return {\n        avatarItems: t,\n        displayAsGrid: o,\n        tooltipContainerAriaLabel: r\n      };\n    }, [u, f]),\n    L = b.avatarItems,\n    A = b.displayAsGrid,\n    j = b.tooltipContainerAriaLabel,\n    g = r(function () {\n      return L.map(function (t, o) {\n        return i(t, o, void 0, m, A);\n      });\n    }, [L, A, m]);\n  if (d) return t.createElement(n, {\n    avatarRenderer: i,\n    tooltipContentContainerRef: C,\n    tooltipContainerAriaLabel: j,\n    avatarItems: L,\n    type: m\n  });\n  var G = {\n    ref: C,\n    tabIndex: -1,\n    role: \"treegrid\",\n    ariaLabel: j,\n    className: A ? e(l.scrollableContainer, l.tooltipContainer, l.tooltipGridContainer, c) : e(l.scrollableContainer, l.tooltipContainer, c),\n    direction: A ? a.directions.ROW : a.directions.COLUMN,\n    gap: A ? a.gaps.XS : a.gaps.SMALL,\n    wrap: A\n  };\n  return t.createElement(a, Object.assign({}, G), g);\n};\nexport { p as default };","map":{"version":3,"names":["p","AvatarGroupCounterTooltipContent","s","avatars","u","m","type","c","className","v","isVirtualizedList","d","C","tooltipContentContainerRef","f","o","t","tooltipProps","content","ariaLabel","b","r","map","value","Object","assign","props","tooltipContent","some","join","avatarItems","displayAsGrid","tooltipContainerAriaLabel","L","A","j","g","i","createElement","n","avatarRenderer","G","ref","tabIndex","role","e","l","scrollableContainer","tooltipContainer","tooltipGridContainer","direction","a","directions","ROW","COLUMN","gap","gaps","XS","SMALL","wrap","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/AvatarGroup/AvatarGroupCounterTooltipContent.tsx"],"sourcesContent":["import React, { ReactElement, Ref, useCallback, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport Flex from \"../Flex/Flex\";\nimport { AvatarProps } from \"../Avatar/Avatar\";\nimport AvatarGroupCounterTooltipContentVirtualizedList from \"./AvatarGroupCounterTooltipContentVirtualizedList\";\nimport { avatarRenderer } from \"./AvatarGroupCounterTooltipHelper\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport { AvatarType } from \"../Avatar/AvatarConstants\";\nimport styles from \"./AvatarGroupCounterTooltipContent.module.scss\";\n\nexport interface AvatarGroupCounterTooltipContentProps extends VibeComponentProps {\n  className?: string;\n  type?: AvatarType;\n  /**\n   * Array of Avatar components\n   */\n  avatars?: ReactElement<AvatarProps>[];\n  isVirtualizedList?: boolean;\n  tooltipContentContainerRef?: Ref<HTMLDivElement>;\n}\n\nconst AvatarGroupCounterTooltipContent: React.FC<AvatarGroupCounterTooltipContentProps> = ({\n  avatars = [],\n  type,\n  className,\n  isVirtualizedList = false,\n  tooltipContentContainerRef\n}) => {\n  const getTooltipContent = useCallback((avatarProps: AvatarProps) => {\n    return avatarProps?.tooltipProps?.content || avatarProps?.ariaLabel;\n  }, []);\n\n  const { avatarItems, displayAsGrid, tooltipContainerAriaLabel } = useMemo(() => {\n    const avatarItems = avatars.map(avatar => ({\n      value: { ...avatar.props, tooltipContent: getTooltipContent(avatar.props) }\n    }));\n    const displayAsGrid = !avatarItems.some(item => item.value.tooltipContent);\n    const tooltipContainerAriaLabel = !displayAsGrid\n      ? avatarItems.map(item => item.value.tooltipContent).join(\",\")\n      : undefined;\n    return { avatarItems, displayAsGrid, tooltipContainerAriaLabel };\n  }, [avatars, getTooltipContent]);\n\n  const renderedItems = useMemo(\n    () => avatarItems.map((item, index) => avatarRenderer(item, index, undefined, type, displayAsGrid)),\n    [avatarItems, displayAsGrid, type]\n  );\n\n  if (isVirtualizedList) {\n    return (\n      <AvatarGroupCounterTooltipContentVirtualizedList\n        avatarRenderer={avatarRenderer}\n        tooltipContentContainerRef={tooltipContentContainerRef}\n        tooltipContainerAriaLabel={tooltipContainerAriaLabel}\n        avatarItems={avatarItems}\n        type={type}\n      />\n    );\n  }\n\n  const flexProps = {\n    ref: tooltipContentContainerRef,\n    tabIndex: -1,\n    role: \"treegrid\",\n    ariaLabel: tooltipContainerAriaLabel,\n    className: displayAsGrid\n      ? cx(styles.scrollableContainer, styles.tooltipContainer, styles.tooltipGridContainer, className)\n      : cx(styles.scrollableContainer, styles.tooltipContainer, className),\n    direction: displayAsGrid ? Flex.directions.ROW : Flex.directions.COLUMN,\n    gap: displayAsGrid ? Flex.gaps.XS : Flex.gaps.SMALL,\n    wrap: displayAsGrid\n  };\n\n  return <Flex {...flexProps}>{renderedItems}</Flex>;\n};\n\nexport default AvatarGroupCounterTooltipContent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}