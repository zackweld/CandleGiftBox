{"ast":null,"code":"import e, { forwardRef as t, useRef as i, useCallback as n } from \"react\";\nimport s from \"../../../hooks/useMergeRef.js\";\nimport { GridKeyboardNavigationContext as o } from \"../../GridKeyboardNavigationContext/GridKeyboardNavigationContext.js\";\nimport { useMenuGridItemNavContext as r } from \"./useMenuGridItemNavContext.js\";\nimport { useFocusGridItemByActiveStatus as a } from \"./useFocusGridItemByActiveStatus.js\";\nimport { useFocusWithin as d } from \"../../../hooks/useFocusWithin.js\";\nimport { getTestId as l, ComponentDefaultTestId as c } from \"../../../tests/testIds.js\";\nvar u = t(function (t, u) {\n  var m = t.className,\n    v = t.id,\n    I = t.children,\n    x = t.index,\n    f = t.activeItemIndex,\n    b = void 0 === f ? -1 : f,\n    p = t.closeMenu,\n    g = t.getNextSelectableIndex,\n    h = t.getPreviousSelectableIndex,\n    M = t.setActiveItemIndex,\n    j = t.setSubMenuIsOpenByIndex,\n    S = t.isUnderSubMenu,\n    N = void 0 !== S && S,\n    E = t.disabled,\n    y = void 0 !== E && E,\n    C = t.useDocumentEventListeners,\n    G = void 0 !== C && C,\n    O = t[\"data-testid\"],\n    R = i(null),\n    P = s(u, R),\n    A = i(),\n    D = I && e.Children.only(I);\n  D || console.error(\"MenuGridItem can accept only a single element as first level child, this element is not valid: \", D);\n  var F = n(function (e) {\n      j(x, e), e && M(x);\n    }, [x, M, j]),\n    U = d({\n      onFocusWithinChange: F\n    }).focusWithinProps;\n  a({\n    wrapperRef: R,\n    childRef: A,\n    activeItemIndex: b,\n    index: x,\n    useDocumentEventListeners: G\n  });\n  var W = r({\n    wrapperRef: R,\n    setActiveItemIndex: M,\n    getPreviousSelectableIndex: h,\n    getNextSelectableIndex: g,\n    activeItemIndex: b,\n    isUnderSubMenu: N,\n    closeMenu: p\n  });\n  return e.createElement(\"section\", Object.assign({\n    ref: P,\n    className: m,\n    id: v,\n    \"data-testid\": O || l(c.MENU_GRID_ITEM, v),\n    tabIndex: -1,\n    role: \"grid\"\n  }, U), e.createElement(o.Provider, {\n    value: W\n  }, e.cloneElement(D, Object.assign(Object.assign({}, null == D ? void 0 : D.props), {\n    disabled: y,\n    ref: A\n  }))));\n});\nObject.assign(u, {\n  isMenuChild: !0,\n  isSelectable: !0\n});\nexport { u as default };","map":{"version":3,"names":["u","t","m","className","v","id","I","children","x","index","f","activeItemIndex","b","p","closeMenu","g","getNextSelectableIndex","h","getPreviousSelectableIndex","M","setActiveItemIndex","j","setSubMenuIsOpenByIndex","S","isUnderSubMenu","N","E","disabled","y","C","useDocumentEventListeners","G","O","R","i","P","s","A","D","e","Children","only","console","error","F","n","U","d","onFocusWithinChange","focusWithinProps","a","wrapperRef","childRef","W","r","createElement","Object","assign","ref","l","c","MENU_GRID_ITEM","tabIndex","role","o","Provider","value","cloneElement","props","isMenuChild","isSelectable","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/Menu/MenuGridItem/MenuGridItem.tsx"],"sourcesContent":["import React, { forwardRef, ReactElement, useCallback, useRef } from \"react\";\nimport useMergeRef from \"../../../hooks/useMergeRef\";\nimport { GridKeyboardNavigationContext } from \"../../GridKeyboardNavigationContext/GridKeyboardNavigationContext\";\nimport { useMenuGridItemNavContext } from \"./useMenuGridItemNavContext\";\nimport { useFocusGridItemByActiveStatus } from \"./useFocusGridItemByActiveStatus\";\nimport { useFocusWithin } from \"../../../hooks/useFocusWithin\";\nimport { VibeComponent, VibeComponentProps } from \"../../../types\";\nimport { CloseMenuOption } from \"../Menu/MenuConstants\";\nimport { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\n\nexport interface MenuGridItemProps extends VibeComponentProps {\n  children?: ReactElement | ReactElement[];\n  /** if true, keyboard navigation will skip on this item. Also, this prop will be passed on to the child **/\n  disabled?: boolean;\n  /** a callback to close the wrapping menu **/\n  closeMenu?: (option: CloseMenuOption) => void;\n  /** the currently active index of the wrapping menu **/\n  activeItemIndex?: number;\n  setActiveItemIndex?: (index: number) => void;\n  getNextSelectableIndex?: (activeItemIndex: number) => number;\n  getPreviousSelectableIndex?: (activeItemIndex: number) => number;\n  /** the index of this item **/\n  index?: number;\n  /** true if this item is under a submenu, and not a top-level menu **/\n  isUnderSubMenu?: boolean;\n  setSubMenuIsOpenByIndex?: (index: number, isOpen: boolean) => void;\n  useDocumentEventListeners?: boolean;\n}\n\nconst MenuGridItem: VibeComponent<MenuGridItemProps> & {\n  isMenuChild?: boolean;\n  isSelectable?: boolean;\n} = forwardRef(\n  (\n    {\n      className,\n      id,\n      children,\n      index,\n      activeItemIndex = -1,\n      closeMenu,\n      getNextSelectableIndex,\n      getPreviousSelectableIndex,\n      setActiveItemIndex,\n      setSubMenuIsOpenByIndex,\n      isUnderSubMenu = false,\n      disabled = false,\n      useDocumentEventListeners = false,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const childRef = useRef();\n\n    const child = children && React.Children.only(children);\n    if (!child) {\n      console.error(\n        \"MenuGridItem can accept only a single element as first level child, this element is not valid: \",\n        child\n      );\n    }\n\n    const onFocusWithinChange = useCallback(\n      (isFocusWithin: boolean) => {\n        setSubMenuIsOpenByIndex(index, isFocusWithin);\n        if (isFocusWithin) {\n          setActiveItemIndex(index);\n        }\n      },\n      [index, setActiveItemIndex, setSubMenuIsOpenByIndex]\n    );\n    const { focusWithinProps } = useFocusWithin({ onFocusWithinChange });\n\n    useFocusGridItemByActiveStatus({\n      wrapperRef: componentRef,\n      childRef,\n      activeItemIndex,\n      index,\n      useDocumentEventListeners\n    });\n\n    const keyboardContext = useMenuGridItemNavContext({\n      wrapperRef: componentRef,\n      setActiveItemIndex,\n      getPreviousSelectableIndex,\n      getNextSelectableIndex,\n      activeItemIndex,\n      isUnderSubMenu,\n      closeMenu\n    });\n\n    return (\n      <section\n        ref={mergedRef}\n        className={className}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.MENU_GRID_ITEM, id)}\n        tabIndex={-1}\n        role=\"grid\"\n        {...focusWithinProps}\n      >\n        <GridKeyboardNavigationContext.Provider value={keyboardContext}>\n          {React.cloneElement(child, {\n            ...child?.props,\n            disabled,\n            ref: childRef\n          })}\n        </GridKeyboardNavigationContext.Provider>\n      </section>\n    );\n  }\n);\n\nObject.assign(MenuGridItem, {\n  isMenuChild: true,\n  isSelectable: true\n});\n\nexport default MenuGridItem;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}