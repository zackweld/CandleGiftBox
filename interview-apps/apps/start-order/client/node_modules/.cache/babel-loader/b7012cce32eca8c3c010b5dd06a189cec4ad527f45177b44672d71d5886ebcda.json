{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getScrollParent = getScrollParent;\nexports.getScrollAncestorsOverflowY = getScrollAncestorsOverflowY;\nexports[\"default\"] = disableScroll;\nvar getScrollingRoot = function getScrollingRoot() {\n  return document.scrollingElement || document.documentElement;\n};\n/**\n * Recursively finds the scroll parent of a node. The scroll parrent of a node\n * is the closest node that is scrollable. A node is scrollable if:\n *  - it is allowed to scroll via CSS ('overflow-y' not visible or hidden);\n *  - and its children/content are \"bigger\" than the node's box height.\n *\n * The root of the document always scrolls by default.\n *\n * @param {HTMLElement} node Any DOM element.\n * @return {HTMLElement} The scroll parent element.\n */\n\nfunction getScrollParent(node) {\n  var parent = node.parentElement;\n  if (parent == null) return getScrollingRoot();\n  var _window$getComputedSt = window.getComputedStyle(parent),\n    overflowY = _window$getComputedSt.overflowY;\n  var canScroll = overflowY !== 'visible' && overflowY !== 'hidden';\n  if (canScroll && parent.scrollHeight > parent.clientHeight) {\n    return parent;\n  }\n  return getScrollParent(parent);\n}\n/**\n * Recursively traverses the tree upwards from the given node, capturing all\n * ancestor nodes that scroll along with their current 'overflow-y' CSS\n * property.\n *\n * @param {HTMLElement} node Any DOM element.\n * @param {Map<HTMLElement,string>} [acc] Accumulator map.\n * @return {Map<HTMLElement,string>} Map of ancestors with their 'overflow-y' value.\n */\n\nfunction getScrollAncestorsOverflowY(node) {\n  var acc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Map();\n  var scrollingRoot = getScrollingRoot();\n  var scrollParent = getScrollParent(node);\n  acc.set(scrollParent, scrollParent.style.overflowY);\n  if (scrollParent === scrollingRoot) return acc;\n  return getScrollAncestorsOverflowY(scrollParent, acc);\n}\n/**\n * Disabling the scroll on a node involves finding all the scrollable ancestors\n * and set their 'overflow-y' CSS property to 'hidden'. When all ancestors have\n * 'overflow-y: hidden' (up to the document element) there is no scroll\n * container, thus all the scroll outside of the node is disabled. In order to\n * enable scroll again, we store the previous value of the 'overflow-y' for\n * every ancestor in a closure and reset it back.\n *\n * @param {HTMLElement} node Any DOM element.\n */\n\nfunction disableScroll(node) {\n  var scrollAncestorsOverflowY = getScrollAncestorsOverflowY(node);\n  var toggle = function toggle(on) {\n    return scrollAncestorsOverflowY.forEach(function (overflowY, ancestor) {\n      ancestor.style.setProperty('overflow-y', on ? 'hidden' : overflowY);\n    });\n  };\n  toggle(true);\n  return function () {\n    return toggle(false);\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getScrollParent","getScrollAncestorsOverflowY","disableScroll","getScrollingRoot","document","scrollingElement","documentElement","node","parent","parentElement","_window$getComputedSt","window","getComputedStyle","overflowY","canScroll","scrollHeight","clientHeight","acc","arguments","length","undefined","Map","scrollingRoot","scrollParent","set","style","scrollAncestorsOverflowY","toggle","on","forEach","ancestor","setProperty"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/node_modules/react-dates/lib/utils/disableScroll.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getScrollParent = getScrollParent;\nexports.getScrollAncestorsOverflowY = getScrollAncestorsOverflowY;\nexports[\"default\"] = disableScroll;\n\nvar getScrollingRoot = function getScrollingRoot() {\n  return document.scrollingElement || document.documentElement;\n};\n/**\n * Recursively finds the scroll parent of a node. The scroll parrent of a node\n * is the closest node that is scrollable. A node is scrollable if:\n *  - it is allowed to scroll via CSS ('overflow-y' not visible or hidden);\n *  - and its children/content are \"bigger\" than the node's box height.\n *\n * The root of the document always scrolls by default.\n *\n * @param {HTMLElement} node Any DOM element.\n * @return {HTMLElement} The scroll parent element.\n */\n\n\nfunction getScrollParent(node) {\n  var parent = node.parentElement;\n  if (parent == null) return getScrollingRoot();\n\n  var _window$getComputedSt = window.getComputedStyle(parent),\n      overflowY = _window$getComputedSt.overflowY;\n\n  var canScroll = overflowY !== 'visible' && overflowY !== 'hidden';\n\n  if (canScroll && parent.scrollHeight > parent.clientHeight) {\n    return parent;\n  }\n\n  return getScrollParent(parent);\n}\n/**\n * Recursively traverses the tree upwards from the given node, capturing all\n * ancestor nodes that scroll along with their current 'overflow-y' CSS\n * property.\n *\n * @param {HTMLElement} node Any DOM element.\n * @param {Map<HTMLElement,string>} [acc] Accumulator map.\n * @return {Map<HTMLElement,string>} Map of ancestors with their 'overflow-y' value.\n */\n\n\nfunction getScrollAncestorsOverflowY(node) {\n  var acc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Map();\n  var scrollingRoot = getScrollingRoot();\n  var scrollParent = getScrollParent(node);\n  acc.set(scrollParent, scrollParent.style.overflowY);\n  if (scrollParent === scrollingRoot) return acc;\n  return getScrollAncestorsOverflowY(scrollParent, acc);\n}\n/**\n * Disabling the scroll on a node involves finding all the scrollable ancestors\n * and set their 'overflow-y' CSS property to 'hidden'. When all ancestors have\n * 'overflow-y: hidden' (up to the document element) there is no scroll\n * container, thus all the scroll outside of the node is disabled. In order to\n * enable scroll again, we store the previous value of the 'overflow-y' for\n * every ancestor in a closure and reset it back.\n *\n * @param {HTMLElement} node Any DOM element.\n */\n\n\nfunction disableScroll(node) {\n  var scrollAncestorsOverflowY = getScrollAncestorsOverflowY(node);\n\n  var toggle = function toggle(on) {\n    return scrollAncestorsOverflowY.forEach(function (overflowY, ancestor) {\n      ancestor.style.setProperty('overflow-y', on ? 'hidden' : overflowY);\n    });\n  };\n\n  toggle(true);\n  return function () {\n    return toggle(false);\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,eAAe,GAAGA,eAAe;AACzCF,OAAO,CAACG,2BAA2B,GAAGA,2BAA2B;AACjEH,OAAO,CAAC,SAAS,CAAC,GAAGI,aAAa;AAElC,IAAIC,gBAAgB,GAAG,SAASA,gBAAgBA,CAAA,EAAG;EACjD,OAAOC,QAAQ,CAACC,gBAAgB,IAAID,QAAQ,CAACE,eAAe;AAC9D,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASN,eAAeA,CAACO,IAAI,EAAE;EAC7B,IAAIC,MAAM,GAAGD,IAAI,CAACE,aAAa;EAC/B,IAAID,MAAM,IAAI,IAAI,EAAE,OAAOL,gBAAgB,CAAC,CAAC;EAE7C,IAAIO,qBAAqB,GAAGC,MAAM,CAACC,gBAAgB,CAACJ,MAAM,CAAC;IACvDK,SAAS,GAAGH,qBAAqB,CAACG,SAAS;EAE/C,IAAIC,SAAS,GAAGD,SAAS,KAAK,SAAS,IAAIA,SAAS,KAAK,QAAQ;EAEjE,IAAIC,SAAS,IAAIN,MAAM,CAACO,YAAY,GAAGP,MAAM,CAACQ,YAAY,EAAE;IAC1D,OAAOR,MAAM;EACf;EAEA,OAAOR,eAAe,CAACQ,MAAM,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASP,2BAA2BA,CAACM,IAAI,EAAE;EACzC,IAAIU,GAAG,GAAGC,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKE,SAAS,GAAGF,SAAS,CAAC,CAAC,CAAC,GAAG,IAAIG,GAAG,CAAC,CAAC;EACvF,IAAIC,aAAa,GAAGnB,gBAAgB,CAAC,CAAC;EACtC,IAAIoB,YAAY,GAAGvB,eAAe,CAACO,IAAI,CAAC;EACxCU,GAAG,CAACO,GAAG,CAACD,YAAY,EAAEA,YAAY,CAACE,KAAK,CAACZ,SAAS,CAAC;EACnD,IAAIU,YAAY,KAAKD,aAAa,EAAE,OAAOL,GAAG;EAC9C,OAAOhB,2BAA2B,CAACsB,YAAY,EAAEN,GAAG,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASf,aAAaA,CAACK,IAAI,EAAE;EAC3B,IAAImB,wBAAwB,GAAGzB,2BAA2B,CAACM,IAAI,CAAC;EAEhE,IAAIoB,MAAM,GAAG,SAASA,MAAMA,CAACC,EAAE,EAAE;IAC/B,OAAOF,wBAAwB,CAACG,OAAO,CAAC,UAAUhB,SAAS,EAAEiB,QAAQ,EAAE;MACrEA,QAAQ,CAACL,KAAK,CAACM,WAAW,CAAC,YAAY,EAAEH,EAAE,GAAG,QAAQ,GAAGf,SAAS,CAAC;IACrE,CAAC,CAAC;EACJ,CAAC;EAEDc,MAAM,CAAC,IAAI,CAAC;EACZ,OAAO,YAAY;IACjB,OAAOA,MAAM,CAAC,KAAK,CAAC;EACtB,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}