{"ast":null,"code":"import { defineProperty as r } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport o, { useMemo as t } from \"react\";\nimport e from \"classnames\";\nimport a from \"./AvatarGroupCounter.js\";\nimport { avatarOnClick as i } from \"./AvatarGroupHelper.js\";\nimport s from \"./AvatarGroup.module.scss.js\";\nvar l = function (l) {\n  var n = l.className,\n    p = l.avatarClassName,\n    u = l.id,\n    d = l.children,\n    c = l.size,\n    v = l.type,\n    m = l.max,\n    f = void 0 === m ? 5 : m,\n    y = l.counterProps,\n    A = l.counterTooltipCustomProps,\n    P = l.counterTooltipIsVirtualizedList,\n    C = void 0 !== P && P,\n    T = l.removePadding,\n    b = void 0 !== T && T,\n    j = l.disabled,\n    z = t(function () {\n      if (!d) return {};\n      var r = Array.isArray(d) ? d : [d];\n      return {\n        displayAvatars: r.slice(0, f).map(function (r, t) {\n          var a, l;\n          return o.cloneElement(r, Object.assign(Object.assign({\n            key: t\n          }, null == r ? void 0 : r.props), {\n            size: c || (null === (a = null == r ? void 0 : r.props) || void 0 === a ? void 0 : a.size),\n            type: v || (null === (l = null == r ? void 0 : r.props) || void 0 === l ? void 0 : l.type),\n            className: e(s.avatarContainer, p),\n            onClick: function (o) {\n              return i(o, r.props);\n            },\n            disabled: j\n          }));\n        }),\n        counterTooltipAvatars: r.slice(f)\n      };\n    }, [p, d, j, f, c, v]),\n    g = z.displayAvatars,\n    G = z.counterTooltipAvatars;\n  return d ? o.createElement(\"div\", {\n    className: e(s.avatarGroupContainer, n, r({}, s.noPadding, b)),\n    id: u\n  }, g, o.createElement(a, {\n    counterTooltipAvatars: G,\n    counterProps: y,\n    counterTooltipCustomProps: A,\n    counterTooltipIsVirtualizedList: C,\n    size: c,\n    type: v,\n    disabled: j\n  })) : null;\n};\nexport { l as default };","map":{"version":3,"names":["l","AvatarGroup","n","className","p","avatarClassName","u","id","d","children","c","size","v","type","m","max","f","y","counterProps","A","counterTooltipCustomProps","P","counterTooltipIsVirtualizedList","C","T","removePadding","b","j","disabled","z","t","r","Array","isArray","displayAvatars","slice","map","a","o","cloneElement","Object","assign","key","props","e","s","avatarContainer","onClick","i","counterTooltipAvatars","g","G","createElement","avatarGroupContainer","noPadding","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/AvatarGroup/AvatarGroup.tsx"],"sourcesContent":["import React, { ReactElement, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport { AvatarProps } from \"../Avatar/Avatar\";\nimport AvatarGroupCounter from \"./AvatarGroupCounter\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport { AvatarSize, AvatarType } from \"../Avatar/AvatarConstants\";\nimport { CounterColor } from \"../Counter/CounterConstants\";\nimport { avatarOnClick } from \"./AvatarGroupHelper\";\nimport { TooltipProps } from \"../Tooltip/Tooltip\";\nimport styles from \"./AvatarGroup.module.scss\";\n\nexport type AvatarGroupCounterVisualProps = {\n  color?: CounterColor.LIGHT | CounterColor.DARK;\n  count?: number;\n  prefix?: string;\n  maxDigits?: number;\n  ariaLabelItemsName?: string;\n  noAnimation?: boolean;\n};\n\nexport interface AvatarGroupProps extends VibeComponentProps {\n  avatarClassName?: string;\n  /**\n   * Array of `Avatar` components\n   */\n  children?: ReactElement<AvatarProps> | ReactElement<AvatarProps>[];\n  size?: AvatarSize;\n  type?: AvatarType;\n  max?: number;\n  /**\n   * 4 `Counter.props` for customization + ariaLabelItemsName for specifying the \"items\" name in aria label\n   */\n  counterProps?: AvatarGroupCounterVisualProps;\n  /**\n   * `Tooltip.props`: props for custom counter tooltip\n   */\n  counterTooltipCustomProps?: Partial<TooltipProps>;\n  /**\n   * Using counter default tooltip virtualized list for rendering only visible items (performance optimization)\n   */\n  counterTooltipIsVirtualizedList?: boolean;\n  /**\n   * If true, padding will be removed from the container\n   */\n  // TODO remove this prop in the next major release, should be no padding by default\n  removePadding?: boolean;\n  /**\n   * If true, the component will be disabled and non interactive\n   */\n  disabled?: boolean;\n}\n\nconst AvatarGroup: React.FC<AvatarGroupProps> = ({\n  className,\n  avatarClassName,\n  id,\n  children,\n  size,\n  type,\n  max = 5,\n  counterProps,\n  counterTooltipCustomProps,\n  counterTooltipIsVirtualizedList = false,\n  removePadding = false,\n  disabled\n}) => {\n  const { displayAvatars, counterTooltipAvatars } = useMemo(() => {\n    if (!children) {\n      return {};\n    }\n    const childrenArray = Array.isArray(children) ? children : [children];\n    return {\n      displayAvatars: childrenArray.slice(0, max).map((avatar, index) => {\n        return React.cloneElement(avatar, {\n          key: index,\n          ...avatar?.props,\n          size: size || avatar?.props?.size,\n          type: type || avatar?.props?.type,\n          className: cx(styles.avatarContainer, avatarClassName),\n          onClick: (event: React.MouseEvent | React.KeyboardEvent) => avatarOnClick(event, avatar.props),\n          disabled\n        });\n      }),\n      counterTooltipAvatars: childrenArray.slice(max)\n    };\n  }, [avatarClassName, children, disabled, max, size, type]);\n\n  if (!children) {\n    return null;\n  }\n\n  return (\n    <div className={cx(styles.avatarGroupContainer, className, { [styles.noPadding]: removePadding })} id={id}>\n      {displayAvatars}\n      <AvatarGroupCounter\n        counterTooltipAvatars={counterTooltipAvatars}\n        counterProps={counterProps}\n        counterTooltipCustomProps={counterTooltipCustomProps}\n        counterTooltipIsVirtualizedList={counterTooltipIsVirtualizedList}\n        size={size}\n        type={type}\n        disabled={disabled}\n      />\n    </div>\n  );\n};\n\nexport default AvatarGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}