{"ast":null,"code":"import e, { forwardRef as a, useMemo as i } from \"react\";\nimport l from \"classnames\";\nimport r from \"../../hooks/useSwitch/index.js\";\nimport s from \"./Switch.module.scss.js\";\nvar t = a(function (a, t) {\n  var c = a.id,\n    n = a.name,\n    d = a.value,\n    o = a.role,\n    h = a.disabled,\n    m = a.ariaLabel,\n    u = a.ariaLabelledBy,\n    b = a.inputClassName,\n    p = a.ariaControls,\n    C = a.children,\n    k = a.wrapperClassName,\n    f = a[\"data-testid\"],\n    g = r({\n      isDisabled: h,\n      isChecked: a.checked,\n      defaultChecked: a.defaultChecked,\n      onChange: a.onChange\n    }),\n    v = g.onChange,\n    w = g.isChecked,\n    j = i(function () {\n      return e.cloneElement(C, Object.assign(Object.assign({}, null == C ? void 0 : C.props), {\n        checked: w\n      }));\n    }, [C, w]);\n  return e.createElement(\"label\", {\n    htmlFor: c,\n    className: k\n  }, e.createElement(\"input\", {\n    ref: t,\n    id: c,\n    \"aria-controls\": p,\n    value: d,\n    name: n,\n    type: \"checkbox\",\n    className: l(s[\"hidden-switch\"], b),\n    checked: w,\n    role: o || \"switch\",\n    onChange: v,\n    disabled: h,\n    \"aria-label\": m,\n    \"aria-labelledby\": u,\n    \"aria-checked\": w,\n    \"data-testid\": f\n  }), j);\n});\nexport { t as Switch };","map":{"version":3,"names":["t","a","c","id","n","name","d","value","o","role","h","disabled","m","ariaLabel","u","ariaLabelledBy","b","inputClassName","p","ariaControls","C","children","k","wrapperClassName","f","g","r","isDisabled","isChecked","checked","defaultChecked","onChange","v","w","j","i","e","cloneElement","Object","assign","props","createElement","htmlFor","className","ref","type","l","s","Switch"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/Switch/Switch.tsx"],"sourcesContent":["import React, { ChangeEvent, forwardRef, ReactElement, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport useSwitch from \"../../hooks/useSwitch\";\nimport { VibeComponent, VibeComponentProps } from \"../../types\";\nimport { MockToggleProps } from \"../Toggle/MockToggle\";\nimport styles from \"./Switch.module.scss\";\n\nexport interface SwitchProps extends VibeComponentProps {\n  name?: string;\n  value?: string;\n  role?: string;\n  disabled?: boolean;\n  ariaLabel?: string;\n  ariaLabelledBy?: string;\n  checked?: boolean;\n  inputClassName?: string;\n  onChange?: (value: boolean, event: ChangeEvent<HTMLInputElement>) => void;\n  ariaControls?: string;\n  defaultChecked?: boolean;\n  children?: ReactElement<MockToggleProps>;\n  wrapperClassName?: string;\n}\n\n// TODO no story\nexport const Switch: VibeComponent<SwitchProps, HTMLInputElement> = forwardRef(\n  (\n    {\n      id,\n      name,\n      value,\n      role,\n      disabled,\n      ariaLabel,\n      ariaLabelledBy,\n      checked,\n      inputClassName,\n      onChange,\n      ariaControls,\n      defaultChecked,\n      children: originalChildren,\n      wrapperClassName,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const { onChange: overrideOnChange, isChecked: overrideChecked } = useSwitch({\n      isDisabled: disabled,\n      isChecked: checked,\n      defaultChecked,\n      onChange\n    });\n\n    const children = useMemo(\n      () =>\n        React.cloneElement(originalChildren, {\n          ...originalChildren?.props,\n          checked: overrideChecked\n        }),\n      [originalChildren, overrideChecked]\n    );\n\n    return (\n      <label htmlFor={id} className={wrapperClassName}>\n        <input\n          ref={ref}\n          id={id}\n          aria-controls={ariaControls}\n          value={value}\n          name={name}\n          type=\"checkbox\"\n          className={cx(styles[\"hidden-switch\"], inputClassName)}\n          checked={overrideChecked}\n          role={role ? role : \"switch\"}\n          onChange={overrideOnChange}\n          disabled={disabled}\n          aria-label={ariaLabel}\n          aria-labelledby={ariaLabelledBy}\n          aria-checked={overrideChecked}\n          data-testid={dataTestId}\n        />\n        {children}\n      </label>\n    );\n  }\n);\n"],"mappings":";;;;AAwBO,IAAMA,CAAA,GAAuDC,CAAA,CAClE,UAAAA,CAAA,EAkBED,CAAA;EACE,IAjBAE,CAAA,GAAED,CAAA,CAAFE,EAAA;IACAC,CAAA,GAAIH,CAAA,CAAJI,IAAA;IACAC,CAAA,GAAKL,CAAA,CAALM,KAAA;IACAC,CAAA,GAAIP,CAAA,CAAJQ,IAAA;IACAC,CAAA,GAAQT,CAAA,CAARU,QAAA;IACAC,CAAA,GAASX,CAAA,CAATY,SAAA;IACAC,CAAA,GAAcb,CAAA,CAAdc,cAAA;IAEAC,CAAA,GAAcf,CAAA,CAAdgB,cAAA;IAEAC,CAAA,GAAYjB,CAAA,CAAZkB,YAAA;IAEUC,CAAA,GAAgBnB,CAAA,CAA1BoB,QAAA;IACAC,CAAA,GAAgBrB,CAAA,CAAhBsB,gBAAA;IACeC,CAAA,GAAUvB,CAAA,CAAzB;IAIFwB,CAAA,GAAmEC,CAAA,CAAU;MAC3EC,UAAA,EAAYjB,CAAA;MACZkB,SAAA,EAbO3B,CAAA,CAAP4B,OAAA;MAcAC,cAAA,EAVc7B,CAAA,CAAd6B,cAAA;MAWAC,QAAA,EAbQ9B,CAAA,CAAR8B;IAAA;IASgBC,CAAA,GAAgBP,CAAA,CAA1BM,QAAA;IAAuCE,CAAA,GAAeR,CAAA,CAA1BG,SAAA;IAO9BM,CAAA,GAAWC,CAAA,CACf;MAAA,OACEC,CAAA,CAAMC,YAAA,CAAajB,CAAA,EAAgBkB,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAC9B,QAAAnB,CAAA,YAAAA,CAAA,CAAkBoB,KAAA,GACrB;QAAAX,OAAA,EAASI;MAAA,GACT;IAAA,GACJ,CAACb,CAAA,EAAkBa,CAAA;EAGrB,OACEG,CAAA,CAAAK,aAAA;IAAOC,OAAA,EAASxC,CAAA;IAAIyC,SAAA,EAAWrB;EAAA,GAC7Bc,CAAA,CAAAK,aAAA;IACEG,GAAA,EAAK5C,CAAA;IACLG,EAAA,EAAID,CAAA;IAAE,iBACSgB,CAAA;IACfX,KAAA,EAAOD,CAAA;IACPD,IAAA,EAAMD,CAAA;IACNyC,IAAA,EAAK;IACLF,SAAA,EAAWG,CAAA,CAAGC,CAAA,CAAO,kBAAkB/B,CAAA;IACvCa,OAAA,EAASI,CAAA;IACTxB,IAAA,EAAMD,CAAA,IAAc;IACpBuB,QAAA,EAAUC,CAAA;IACVrB,QAAA,EAAUD,CAAA;IAAQ,cACNE,CAAA;IAAS,mBACJE,CAAA;IAAc,gBACjBmB,CAAA;IAAe,eAChBT;EAAA,IAEdU,CAAA,CAGP;AAAA;AAAA,SAAAlC,CAAA,IAAAgD,MAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}