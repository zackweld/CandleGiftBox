{"ast":null,"code":"import { toConsumableArray as o } from \"../../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { difference as r, intersection as e } from \"lodash-es\";\nimport t, { forwardRef as i, useRef as l, useCallback as n, useMemo as s } from \"react\";\nimport \"../../../../constants/dialog.js\";\nimport { BaseSizes as c } from \"../../../../constants/sizes.js\";\nimport \"../../../../constants/positions.js\";\nimport { ColorStyle as a, contentColors as d } from \"../../../../utils/colors-vars-map.js\";\nimport m from \"../../../Icon/Icons/components/NoColor.js\";\nimport { ColorShapes as u, DEFAULT_NUMBER_OF_COLORS_IN_LINE as p } from \"../../ColorPickerConstants.js\";\nimport { calculateColorPickerWidth as f } from \"../../services/ColorPickerStyleService.js\";\nimport { useGridKeyboardNavigationContext as C, GridKeyboardNavigationContext as v } from \"../../../GridKeyboardNavigationContext/GridKeyboardNavigationContext.js\";\nimport { ColorPickerClearButton as I } from \"./ColorPickerClearButton.js\";\nimport { ColorPickerColorsGrid as S } from \"./ColorPickerColorsGrid.js\";\nimport { withStaticProps as h } from \"../../../../types/withStaticProps.js\";\nimport j from \"../../../../hooks/useMergeRef.js\";\nvar y = h(i(function (i, h) {\n  var y = i.className,\n    k = i.onValueChange,\n    E = i.value,\n    R = i.noColorText,\n    b = i.colorStyle,\n    g = void 0 === b ? a.REGULAR : b,\n    L = i.ColorIndicatorIcon,\n    N = i.SelectedIndicatorIcon,\n    x = i.shouldRenderIndicatorWithoutBackground,\n    B = i.NoColorIcon,\n    M = void 0 === B ? m : B,\n    O = i.isBlackListMode,\n    P = void 0 === O || O,\n    w = i.colorsList,\n    z = i.isMultiselect,\n    T = i.colorSize,\n    G = void 0 === T ? c.MEDIUM : T,\n    U = i.numberOfColorsInLine,\n    A = void 0 === U ? p : U,\n    _ = i.tooltipContentByColor,\n    K = void 0 === _ ? {} : _,\n    W = i.focusOnMount,\n    D = i.colorShape,\n    H = void 0 === D ? u.SQUARE : D,\n    Q = i.forceUseRawColorList,\n    V = i.showColorNameTooltip,\n    Y = i.id,\n    q = i[\"data-testid\"],\n    F = l(null),\n    J = j(h, F),\n    X = l(null),\n    Z = l(null),\n    $ = n(function () {\n      k(null);\n    }, [k]),\n    oo = s(function () {\n      return Q ? w : P ? r(d, w) : e(d, w);\n    }, [Q, P, w]),\n    ro = n(function (r) {\n      if (z) {\n        var e = o(E);\n        if (e.includes(r)) {\n          var t = e.indexOf(r);\n          t > -1 && e.splice(t, 1);\n        } else e.push(r);\n        k(e);\n      } else k([r]);\n    }, [z, k, E]),\n    eo = s(function () {\n      return [{\n        topElement: X,\n        bottomElement: Z\n      }];\n    }, []),\n    to = C(eo, F),\n    io = f(G, A);\n  return t.createElement(\"div\", {\n    className: y,\n    style: {\n      width: io\n    },\n    ref: J,\n    tabIndex: -1\n  }, t.createElement(v.Provider, {\n    value: to\n  }, t.createElement(S, {\n    ref: X,\n    onColorClicked: ro,\n    colorsToRender: oo,\n    numberOfColorsInLine: A,\n    focusOnMount: W,\n    value: E,\n    colorStyle: g,\n    ColorIndicatorIcon: L,\n    shouldRenderIndicatorWithoutBackground: x,\n    SelectedIndicatorIcon: N,\n    colorSize: G,\n    tooltipContentByColor: K,\n    colorShape: H,\n    showColorNameTooltip: V && !Q,\n    id: Y,\n    \"data-testid\": q\n  }), R && t.createElement(I, {\n    Icon: M,\n    onClick: $,\n    text: R,\n    ref: Z\n  })));\n}), {\n  COLOR_STYLES: a,\n  sizes: c,\n  colorStyles: a,\n  colorSizes: c,\n  colorShapes: u\n});\nexport { y as default };","map":{"version":3,"names":["y","h","i","className","k","onValueChange","E","value","R","noColorText","b","colorStyle","g","a","REGULAR","L","ColorIndicatorIcon","N","SelectedIndicatorIcon","x","shouldRenderIndicatorWithoutBackground","B","NoColorIcon","M","m","O","isBlackListMode","P","w","colorsList","z","isMultiselect","T","colorSize","G","c","MEDIUM","U","numberOfColorsInLine","A","p","_","tooltipContentByColor","K","W","focusOnMount","D","colorShape","H","u","SQUARE","Q","forceUseRawColorList","V","showColorNameTooltip","Y","id","q","F","l","J","j","X","Z","$","n","oo","s","r","d","e","ro","o","includes","t","indexOf","splice","push","eo","topElement","bottomElement","to","C","io","f","createElement","style","width","ref","tabIndex","v","Provider","S","onColorClicked","colorsToRender","I","Icon","onClick","text","COLOR_STYLES","sizes","colorStyles","colorSizes","colorShapes","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/ColorPicker/components/ColorPickerContent/ColorPickerContent.tsx"],"sourcesContent":["import { difference as _difference, intersection as _intersection } from \"lodash-es\";\nimport React, { forwardRef, useCallback, useMemo, useRef } from \"react\";\nimport { BaseSizes } from \"../../../../constants\";\nimport { ColorStyle, CONTENT_COLORS_VALUES, contentColors } from \"../../../../utils/colors-vars-map\";\nimport NoColor from \"../../../Icon/Icons/components/NoColor\";\nimport {\n  ColorShapes,\n  DEFAULT_NUMBER_OF_COLORS_IN_LINE,\n  ColorPickerValue,\n  ColorPickerArrayValueOnly\n} from \"../../ColorPickerConstants\";\nimport { calculateColorPickerWidth } from \"../../services/ColorPickerStyleService\";\nimport {\n  GridKeyboardNavigationContext,\n  useGridKeyboardNavigationContext\n} from \"../../../GridKeyboardNavigationContext/GridKeyboardNavigationContext\";\nimport { ColorPickerClearButton } from \"./ColorPickerClearButton\";\nimport { ColorPickerColorsGrid } from \"./ColorPickerColorsGrid\";\nimport { VibeComponentProps, VibeComponent, SubIcon, withStaticProps } from \"../../../../types\";\nimport useMergeRef from \"../../../../hooks/useMergeRef\";\n\nexport interface ColorPickerContentProps extends VibeComponentProps {\n  value: ColorPickerValue;\n  onValueChange: (value: ColorPickerArrayValueOnly) => void;\n  colorsList: ColorPickerArrayValueOnly;\n  ColorIndicatorIcon?: SubIcon;\n  SelectedIndicatorIcon?: SubIcon;\n  NoColorIcon?: SubIcon;\n  colorStyle?: ColorStyle;\n  colorSize?: BaseSizes;\n  colorShape?: ColorShapes;\n  tooltipContentByColor?: Partial<Record<CONTENT_COLORS_VALUES, string>>;\n  noColorText?: string;\n  shouldRenderIndicatorWithoutBackground?: boolean;\n  isBlackListMode?: boolean;\n  numberOfColorsInLine?: number;\n  focusOnMount?: boolean;\n  isMultiselect?: boolean;\n  /**\n   * Used to force the component render the colorList prop as is. Usually, this flag should not be used. It's intended only for edge cases.\n   * Usually, only \"monday colors\" will be rendered (unless blacklist mode is used). This flag will override this behavior.\n   */\n  forceUseRawColorList?: boolean;\n  /**\n   * Used to enable color name tooltip on each color in the component. it's incompatible with forceUseRawColorList flag.\n   * When \"tooltipContentByColor\" is supplied, it will override the color name tooltip.\n   */\n  showColorNameTooltip?: boolean;\n}\n\nconst ColorPickerContent: VibeComponent<ColorPickerContentProps, HTMLDivElement> & {\n  // Backward compatibility for enum naming\n  COLOR_STYLES?: typeof ColorStyle;\n  sizes?: typeof BaseSizes;\n  colorStyles?: typeof ColorStyle;\n  colorSizes?: typeof BaseSizes;\n  colorShapes?: typeof ColorShapes;\n} = forwardRef(\n  (\n    {\n      className,\n      onValueChange,\n      value,\n      noColorText,\n      colorStyle = ColorStyle.REGULAR,\n      ColorIndicatorIcon,\n      SelectedIndicatorIcon,\n      shouldRenderIndicatorWithoutBackground,\n      NoColorIcon = NoColor,\n      isBlackListMode = true,\n      colorsList,\n      isMultiselect,\n      colorSize = BaseSizes.MEDIUM,\n      numberOfColorsInLine = DEFAULT_NUMBER_OF_COLORS_IN_LINE,\n      tooltipContentByColor = {},\n      focusOnMount,\n      colorShape = ColorShapes.SQUARE,\n      forceUseRawColorList,\n      showColorNameTooltip,\n      id,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const gridRef = useRef(null);\n    const mergedRef = useMergeRef(ref, gridRef);\n    const colorsRef = useRef(null);\n    const buttonRef = useRef(null);\n\n    const onClearButton = useCallback(() => {\n      onValueChange(null);\n    }, [onValueChange]);\n\n    const colorsToRender = useMemo(() => {\n      if (forceUseRawColorList) {\n        return colorsList;\n      }\n      return isBlackListMode ? _difference(contentColors, colorsList) : _intersection(contentColors, colorsList);\n    }, [forceUseRawColorList, isBlackListMode, colorsList]);\n\n    const onColorClicked = useCallback(\n      (color: CONTENT_COLORS_VALUES) => {\n        if (!isMultiselect) {\n          onValueChange([color]);\n          return;\n        }\n        const colors = [...value];\n        if (colors.includes(color)) {\n          const indexInSelected = colors.indexOf(color);\n          if (indexInSelected > -1) {\n            colors.splice(indexInSelected, 1);\n          }\n        } else {\n          colors.push(color);\n        }\n        onValueChange(colors);\n      },\n      [isMultiselect, onValueChange, value]\n    );\n\n    const positions = useMemo(() => [{ topElement: colorsRef, bottomElement: buttonRef }], []);\n    const keyboardContext = useGridKeyboardNavigationContext(positions, gridRef);\n    const width = calculateColorPickerWidth(colorSize, numberOfColorsInLine);\n\n    return (\n      <div className={className} style={{ width }} ref={mergedRef} tabIndex={-1}>\n        <GridKeyboardNavigationContext.Provider value={keyboardContext}>\n          <ColorPickerColorsGrid\n            ref={colorsRef}\n            onColorClicked={onColorClicked}\n            colorsToRender={colorsToRender}\n            numberOfColorsInLine={numberOfColorsInLine}\n            focusOnMount={focusOnMount}\n            value={value}\n            colorStyle={colorStyle}\n            ColorIndicatorIcon={ColorIndicatorIcon}\n            shouldRenderIndicatorWithoutBackground={shouldRenderIndicatorWithoutBackground}\n            SelectedIndicatorIcon={SelectedIndicatorIcon}\n            colorSize={colorSize}\n            tooltipContentByColor={tooltipContentByColor}\n            colorShape={colorShape}\n            showColorNameTooltip={showColorNameTooltip && !forceUseRawColorList}\n            id={id}\n            data-testid={dataTestId}\n          />\n          {noColorText && (\n            <ColorPickerClearButton Icon={NoColorIcon} onClick={onClearButton} text={noColorText} ref={buttonRef} />\n          )}\n        </GridKeyboardNavigationContext.Provider>\n      </div>\n    );\n  }\n);\n\nexport default withStaticProps(ColorPickerContent, {\n  // Backward compatibility for enum naming\n  COLOR_STYLES: ColorStyle,\n  sizes: BaseSizes,\n  colorStyles: ColorStyle,\n  colorSizes: BaseSizes,\n  colorShapes: ColorShapes\n});\n"],"mappings":";;;;;;;;;;;;;;;AAkDA,IAwGeA,CAAA,GAAAC,CAAA,CAjGXC,CAAA,CACF,UAAAA,CAAA,EAwBED,CAAA;EACE,IAvBAD,CAAA,GAASE,CAAA,CAATC,SAAA;IACAC,CAAA,GAAaF,CAAA,CAAbG,aAAA;IACAC,CAAA,GAAKJ,CAAA,CAALK,KAAA;IACAC,CAAA,GAAWN,CAAA,CAAXO,WAAA;IAAWC,CAAA,GAAAR,CAAA,CACXS,UAAA;IAAAC,CAAA,QAAU,MAAAF,CAAA,GAAGG,CAAA,CAAWC,OAAA,GAAOJ,CAAA;IAC/BK,CAAA,GAAkBb,CAAA,CAAlBc,kBAAA;IACAC,CAAA,GAAqBf,CAAA,CAArBgB,qBAAA;IACAC,CAAA,GAAsCjB,CAAA,CAAtCkB,sCAAA;IAAsCC,CAAA,GAAAnB,CAAA,CACtCoB,WAAA;IAAAC,CAAA,QAAc,MAAHF,CAAA,GAAGG,CAAA,GAAOH,CAAA;IAAAI,CAAA,GAAAvB,CAAA,CACrBwB,eAAA;IAAAC,CAAA,QAAkB,MAAHF,CAAA,IAAOA,CAAA;IACtBG,CAAA,GAAU1B,CAAA,CAAV2B,UAAA;IACAC,CAAA,GAAa5B,CAAA,CAAb6B,aAAA;IAAaC,CAAA,GAAA9B,CAAA,CACb+B,SAAA;IAAAC,CAAA,QAAS,MAAAF,CAAA,GAAGG,CAAA,CAAUC,MAAA,GAAMJ,CAAA;IAAAK,CAAA,GAAAnC,CAAA,CAC5BoC,oBAAA;IAAAC,CAAA,QAAuB,MAAHF,CAAA,GAAGG,CAAA,GAAgCH,CAAA;IAAAI,CAAA,GAAAvC,CAAA,CACvDwC,qBAAA;IAAAC,CAAA,QAAqB,MAAAF,CAAA,GAAG,CAAE,IAAAA,CAAA;IAC1BG,CAAA,GAAY1C,CAAA,CAAZ2C,YAAA;IAAYC,CAAA,GAAA5C,CAAA,CACZ6C,UAAA;IAAAC,CAAA,QAAU,MAAAF,CAAA,GAAGG,CAAA,CAAYC,MAAA,GAAMJ,CAAA;IAC/BK,CAAA,GAAoBjD,CAAA,CAApBkD,oBAAA;IACAC,CAAA,GAAoBnD,CAAA,CAApBoD,oBAAA;IACAC,CAAA,GAAErD,CAAA,CAAFsD,EAAA;IACeC,CAAA,GAAUvD,CAAA,CAAzB;IAIIwD,CAAA,GAAUC,CAAA,CAAO;IACjBC,CAAA,GAAYC,CAAA,CAAY5D,CAAA,EAAKyD,CAAA;IAC7BI,CAAA,GAAYH,CAAA,CAAO;IACnBI,CAAA,GAAYJ,CAAA,CAAO;IAEnBK,CAAA,GAAgBC,CAAA,CAAY;MAChC7D,CAAA,CAAc,KAChB;IAAA,GAAG,CAACA,CAAA;IAEE8D,EAAA,GAAiBC,CAAA,CAAQ;MAC7B,OAAIhB,CAAA,GACKvB,CAAA,GAEFD,CAAA,GAAkByC,CAAA,CAAYC,CAAA,EAAezC,CAAA,IAAc0C,CAAA,CAAcD,CAAA,EAAezC,CAAA,CAChG;IAAA,GAAE,CAACuB,CAAA,EAAsBxB,CAAA,EAAiBC,CAAA;IAErC2C,EAAA,GAAiBN,CAAA,CACrB,UAACG,CAAA;MACC,IAAKtC,CAAA,EAAL;QAIA,IAAMwC,CAAA,GAAME,CAAA,CAAOlE,CAAA;QACnB,IAAIgE,CAAA,CAAOG,QAAA,CAASL,CAAA,GAAQ;UAC1B,IAAMM,CAAA,GAAkBJ,CAAA,CAAOK,OAAA,CAAQP,CAAA;UACnCM,CAAA,IAAmB,KACrBJ,CAAA,CAAOM,MAAA,CAAOF,CAAA,EAAiB,EAElC;QAAA,OACCJ,CAAA,CAAOO,IAAA,CAAKT,CAAA;QAEdhE,CAAA,CAAckE,CAAA,CAVb;MAAA,OAFClE,CAAA,CAAc,CAACgE,CAAA,EAalB;IAAA,GACD,CAACtC,CAAA,EAAe1B,CAAA,EAAeE,CAAA;IAG3BwE,EAAA,GAAYX,CAAA,CAAQ;MAAA,OAAM,CAAC;QAAEY,UAAA,EAAYjB,CAAA;QAAWkB,aAAA,EAAejB;MAAA,EAAY;IAAA,GAAE;IACjFkB,EAAA,GAAkBC,CAAA,CAAiCJ,EAAA,EAAWpB,CAAA;IAC9DyB,EAAA,GAAQC,CAAA,CAA0BlD,CAAA,EAAWK,CAAA;EAEnD,OACEmC,CAAA,CAAKW,aAAA;IAAAlF,SAAA,EAAWH,CAAA;IAAWsF,KAAA,EAAO;MAAEC,KAAA,EAAAJ;IAAA;IAASK,GAAA,EAAK5B,CAAA;IAAW6B,QAAA,GAAW;EAAA,GACtEf,CAAA,CAAAW,aAAA,CAACK,CAAA,CAA8BC,QAAA,EAAS;IAAApF,KAAA,EAAO0E;EAAA,GAC7CP,CAAA,CAAAW,aAAA,CAACO,CAAA,EAAqB;IACpBJ,GAAA,EAAK1B,CAAA;IACL+B,cAAA,EAAgBtB,EAAA;IAChBuB,cAAA,EAAgB5B,EAAA;IAChB5B,oBAAA,EAAsBC,CAAA;IACtBM,YAAA,EAAcD,CAAA;IACdrC,KAAA,EAAOD,CAAA;IACPK,UAAA,EAAYC,CAAA;IACZI,kBAAA,EAAoBD,CAAA;IACpBK,sCAAA,EAAwCD,CAAA;IACxCD,qBAAA,EAAuBD,CAAA;IACvBgB,SAAA,EAAWC,CAAA;IACXQ,qBAAA,EAAuBC,CAAA;IACvBI,UAAA,EAAYC,CAAA;IACZM,oBAAA,EAAsBD,CAAA,KAAyBF,CAAA;IAC/CK,EAAA,EAAID,CAAA;IAAE,eACOE;EAAA,IAEdjD,CAAA,IACCkE,CAAA,CAAAW,aAAA,CAACU,CAAA,EAAsB;IAACC,IAAA,EAAMzE,CAAA;IAAa0E,OAAA,EAASjC,CAAA;IAAekC,IAAA,EAAM1F,CAAA;IAAagF,GAAA,EAAKzB;EAAA,IAKrG;AAAA,IAGiD;EAEjDoC,YAAA,EAActF,CAAA;EACduF,KAAA,EAAOjE,CAAA;EACPkE,WAAA,EAAaxF,CAAA;EACbyF,UAAA,EAAYnE,CAAA;EACZoE,WAAA,EAAatD;AAAA;AAAA,SAAAjD,CAAA,IAAAwG,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}