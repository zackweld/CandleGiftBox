{"ast":null,"code":"import e from \"../../hooks/useIsOverflowing/useIsOverflowing.js\";\nimport s from \"./Typography.module.scss.js\";\nfunction n(e, n, r) {\n  var t;\n  return n && (t = r > 1 ? s.multiLineEllipsis : s.singleLineEllipsis), {\n    ref: function (s) {\n      null == s || s.style.setProperty(\"--text-clamp-lines\", \"\" + r), e.current = s;\n    },\n    class: t\n  };\n}\nfunction r(s, n, r, t, i, o, l) {\n  var u = e({\n    ref: r ? s : null,\n    ignoreHeightOverflow: o,\n    tolerance: l\n  });\n  return !n && r && u && \"string\" == typeof i ? Object.assign(Object.assign({}, t), {\n    content: i\n  }) : {};\n}\nexport { n as useEllipsisClass, r as useTooltipProps };","map":{"version":3,"names":["n","e","r","t","s","multiLineEllipsis","singleLineEllipsis","ref","style","setProperty","current","class","i","o","l","u","ignoreHeightOverflow","tolerance","Object","assign","content","useEllipsisClass","useTooltipProps"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/Typography/TypographyHooks.tsx"],"sourcesContent":["import { MutableRefObject } from \"react\";\nimport { ElementContent } from \"../../types\";\nimport useIsOverflowing from \"../../hooks/useIsOverflowing/useIsOverflowing\";\nimport { TooltipProps } from \"../Tooltip/Tooltip\";\nimport styles from \"./Typography.module.scss\";\n\nexport function useEllipsisClass(ref: MutableRefObject<HTMLElement>, ellipsis: boolean, maxLines: number) {\n  let ellipsisClass;\n  const overrideRef = (node: HTMLElement) => {\n    node?.style.setProperty(\"--text-clamp-lines\", maxLines.toString());\n    ref.current = node;\n  };\n\n  // If component contains ellipsis return the fit ellipsis class\n  if (ellipsis) {\n    ellipsisClass = maxLines > 1 ? styles.multiLineEllipsis : styles.singleLineEllipsis;\n  }\n\n  return { ref: overrideRef, class: ellipsisClass };\n}\n\nexport function useTooltipProps(\n  ref: MutableRefObject<HTMLElement>,\n  withoutTooltip: boolean,\n  ellipsis: boolean,\n  tooltipProps: Partial<TooltipProps>,\n  children: ElementContent,\n  ignoreHeightOverflow: boolean,\n  overflowTolerance: number\n) {\n  const isOverflowing = useIsOverflowing({\n    ref: ellipsis ? ref : null,\n    ignoreHeightOverflow,\n    tolerance: overflowTolerance\n  });\n  const isTooltipRendered = !withoutTooltip && ellipsis && isOverflowing && typeof children === \"string\";\n  return isTooltipRendered ? { ...tooltipProps, content: children } : {};\n}\n"],"mappings":";;SAMgBA,EAAiBC,CAAA,EAAoCD,CAAA,EAAmBE,CAAA;EACtF,IAAIC,CAAA;EAWJ,OAJIH,CAAA,KACFG,CAAA,GAAgBD,CAAA,GAAW,IAAIE,CAAA,CAAOC,iBAAA,GAAoBD,CAAA,CAAOE,kBAAA,GAG5D;IAAEC,GAAA,EAVW,SAAAA,CAACH,CAAA;MACnB,QAAAA,CAAA,IAAAA,CAAA,CAAMI,KAAA,CAAMC,WAAA,CAAY,sBAAsB,KAAAP,CAAA,GAC9CD,CAAA,CAAIS,OAAA,GAAUN,CAAA;IAAA;IAQWO,KAAA,EAAOR;EAAA,CACpC;AAAA;AAEgB,SAAAD,EACdE,CAAA,EACAJ,CAAA,EACAE,CAAA,EACAC,CAAA,EACAS,CAAA,EACAC,CAAA,EACAC,CAAA;EAEA,IAAMC,CAAA,GAAgBd,CAAA,CAAiB;IACrCM,GAAA,EAAKL,CAAA,GAAWE,CAAA,GAAM;IACtBY,oBAAA,EAAAH,CAAA;IACAI,SAAA,EAAWH;EAAA;EAGb,QAD2Bd,CAAA,IAAkBE,CAAA,IAAYa,CAAA,IAAqC,mBAAbH,CAAA,GACvDM,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAMhB,CAAA,GAAY;IAAEiB,OAAA,EAASR;EAAA,KAAa,EACtE;AAAA;AAAA,SAAAZ,CAAA,IAAAqB,gBAAA,EAAAnB,CAAA,IAAAoB,eAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}