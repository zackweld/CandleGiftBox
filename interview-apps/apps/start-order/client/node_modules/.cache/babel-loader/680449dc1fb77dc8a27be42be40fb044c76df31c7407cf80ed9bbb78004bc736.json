{"ast":null,"code":"import { defineProperty as e } from \"../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { getTestId as r, ComponentDefaultTestId as t } from \"../../../tests/testIds.js\";\nimport i from \"classnames\";\nimport o, { useRef as s } from \"react\";\nimport a from \"../../../hooks/useIsOverflowing/useIsOverflowing.js\";\nimport l from \"../../Tooltip/Tooltip.js\";\nimport { backwardCompatibilityForProperties as m } from \"../../../helpers/backwardCompatibilityForProperties.js\";\nimport { BreadcrumbContent as d } from \"./BreadcrumbContent/BreadcrumbContent.js\";\nimport { HideShowEvent as n } from \"../../../constants/dialog.js\";\nimport \"../../../constants/sizes.js\";\nimport \"../../../constants/positions.js\";\nimport c from \"./BreadcrumbItem.module.scss.js\";\nvar p = [n.MOUSE_ENTER],\n  f = [n.MOUSE_LEAVE],\n  u = function (n) {\n    var u = n.className,\n      b = n.text,\n      g = void 0 === b ? \"\" : b,\n      E = n.isClickable,\n      j = void 0 !== E && E,\n      C = n.link,\n      v = n.onClick,\n      T = n.isCurrent,\n      h = void 0 !== T && T,\n      k = n.icon,\n      w = n.id,\n      B = n.showText,\n      I = void 0 === B || B,\n      x = n[\"data-testid\"],\n      D = m([n.disabled, n.isDisabled], !1),\n      _ = s(null),\n      y = a({\n        ref: _\n      });\n    return o.createElement(l, {\n      disableDialogSlide: !0,\n      withoutDialog: !1,\n      content: (y || !I) && g,\n      showTrigger: p,\n      hideTrigger: f,\n      addKeyboardHideShowTriggersByDefault: !I\n    }, o.createElement(\"li\", {\n      id: w,\n      \"data-testid\": x || r(t.BREADCRUMB_ITEM, w),\n      className: i(c.breadcrumbItemWrapper, u, e({}, c.disabled, D))\n    }, o.createElement(d, {\n      ref: _,\n      isClickable: j,\n      link: C,\n      onClick: v,\n      text: g,\n      icon: k,\n      isCurrent: h,\n      disabled: D,\n      showText: I\n    })));\n  };\nexport { u as default };","map":{"version":3,"names":["p","n","MOUSE_ENTER","f","MOUSE_LEAVE","u","BreadcrumbItem","className","b","text","g","E","isClickable","j","C","link","v","onClick","T","isCurrent","h","k","icon","w","id","B","showText","I","x","D","m","disabled","isDisabled","_","s","y","a","ref","o","createElement","l","disableDialogSlide","withoutDialog","content","showTrigger","hideTrigger","addKeyboardHideShowTriggersByDefault","r","t","BREADCRUMB_ITEM","i","c","breadcrumbItemWrapper","e","d","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/BreadcrumbsBar/BreadcrumbItem/BreadcrumbItem.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { useRef } from \"react\";\nimport useIsOverflowing from \"../../../hooks/useIsOverflowing/useIsOverflowing\";\nimport Tooltip from \"../../../components/Tooltip/Tooltip\";\nimport { backwardCompatibilityForProperties } from \"../../../helpers/backwardCompatibilityForProperties\";\nimport { BreadcrumbContent } from \"./BreadcrumbContent/BreadcrumbContent\";\nimport { HideShowEvent } from \"../../../constants\";\nimport { SubIcon, VibeComponentProps } from \"../../../types\";\nimport styles from \"./BreadcrumbItem.module.scss\";\n\nconst MOUSEENTER = [HideShowEvent.MOUSE_ENTER];\nconst MOUSELEAVE = [HideShowEvent.MOUSE_LEAVE];\n\nexport interface BreadcrumbItemProps extends VibeComponentProps {\n  /** The display text. */\n  text?: string;\n  /** Should item be disabled. */\n  disabled?: boolean;\n  /**\n   * @deprecated - use disabled instead\n   */\n  isDisabled?: boolean;\n  /** Should item be clickable - this should be recieved from the breadcrumbsBar ( Navigation/Indication bar ). */\n  isClickable?: boolean;\n  /** If the item is clickable and the type of navigation is a link, this is the link */\n  link?: string;\n  /** If the item is clickable and the type of navigation is a function, this is the function */\n  onClick?: () => void;\n  /** Should be the current Item - mainly effects the item`s style. */\n  isCurrent?: boolean;\n  /** An Icon - If no icon needed then should be left empty. */\n  icon?: SubIcon;\n  showText?: boolean;\n}\n\nconst BreadcrumbItem: React.FC<BreadcrumbItemProps> = ({\n  className,\n  text = \"\",\n  disabled,\n  // Backward compatibility for props naming\n  isDisabled,\n  isClickable = false,\n  link,\n  onClick,\n  isCurrent = false,\n  icon,\n  id,\n  showText = true,\n  \"data-testid\": dataTestId\n}) => {\n  const overrideDisabled = backwardCompatibilityForProperties([disabled, isDisabled], false) as boolean;\n  const componentRef = useRef<HTMLSpanElement>(null);\n  const isOverflowing = useIsOverflowing({ ref: componentRef });\n\n  return (\n    <Tooltip\n      disableDialogSlide={true}\n      withoutDialog={false}\n      content={(isOverflowing || !showText) && text}\n      showTrigger={MOUSEENTER}\n      hideTrigger={MOUSELEAVE}\n      addKeyboardHideShowTriggersByDefault={!showText}\n    >\n      <li\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.BREADCRUMB_ITEM, id)}\n        className={cx(styles.breadcrumbItemWrapper, className, {\n          [styles.disabled]: overrideDisabled\n        })}\n      >\n        <BreadcrumbContent\n          ref={componentRef}\n          isClickable={isClickable}\n          link={link}\n          onClick={onClick}\n          text={text}\n          icon={icon}\n          isCurrent={isCurrent}\n          disabled={overrideDisabled}\n          showText={showText}\n        />\n      </li>\n    </Tooltip>\n  );\n};\n\nexport default BreadcrumbItem;\n"],"mappings":";;;;;;;;;;;;AAWA,IAAMA,CAAA,GAAa,CAACC,CAAA,CAAcC,WAAA;EAC5BC,CAAA,GAAa,CAACF,CAAA,CAAcG,WAAA;EAwB5BC,CAAA,GAAgD,SAAAC,CAAlCL,CAAA;IAcf,IAbHI,CAAA,GAASJ,CAAA,CAATM,SAAA;MAASC,CAAA,GAAAP,CAAA,CACTQ,IAAA;MAAAC,CAAA,QAAO,MAAHF,CAAA,GAAG,KAAEA,CAAA;MAGCG,CAAA,GAAAV,CAAA,CACVW,WAAA;MAAAC,CAAA,QAAc,MAAHF,CAAA,IAAQA,CAAA;MACnBG,CAAA,GAAIb,CAAA,CAAJc,IAAA;MACAC,CAAA,GAAOf,CAAA,CAAPgB,OAAA;MAAOC,CAAA,GAAAjB,CAAA,CACPkB,SAAA;MAAAC,CAAA,QAAY,MAAHF,CAAA,IAAQA,CAAA;MACjBG,CAAA,GAAIpB,CAAA,CAAJqB,IAAA;MACAC,CAAA,GAAEtB,CAAA,CAAFuB,EAAA;MAAEC,CAAA,GAAAxB,CAAA,CACFyB,QAAA;MAAAC,CAAA,QAAW,MAAHF,CAAA,IAAOA,CAAA;MACAG,CAAA,GAAU3B,CAAA,CAAzB;MAEM4B,CAAA,GAAmBC,CAAA,CAAmC,CAZpD7B,CAAA,CAAR8B,QAAA,EAEU9B,CAAA,CAAV+B,UAAA,IAUoF;MAC9EC,CAAA,GAAeC,CAAA,CAAwB;MACvCC,CAAA,GAAgBC,CAAA,CAAiB;QAAEC,GAAA,EAAKJ;MAAA;IAE9C,OACEK,CAAA,CAAAC,aAAA,CAACC,CAAA,EAAO;MACNC,kBAAA,GAAoB;MACpBC,aAAA,GAAe;MACfC,OAAA,GAAUR,CAAA,KAAkBR,CAAA,KAAajB,CAAA;MACzCkC,WAAA,EAAa5C,CAAA;MACb6C,WAAA,EAAa1C,CAAA;MACb2C,oCAAA,GAAuCnB;IAAA,GAEvCW,CAAA,CACEC,aAAA;MAAAf,EAAA,EAAID,CAAA;MACS,eAAAK,CAAA,IAAcmB,CAAA,CAAUC,CAAA,CAAuBC,eAAA,EAAiB1B,CAAA;MAC7EhB,SAAA,EAAW2C,CAAA,CAAGC,CAAA,CAAOC,qBAAA,EAAuB/C,CAAA,EAASgD,CAAA,KAClDF,CAAA,CAAOpB,QAAA,EAAWF,CAAA;IAAA,GAGrBS,CAAA,CAAAC,aAAA,CAACe,CAAA,EACC;MAAAjB,GAAA,EAAKJ,CAAA;MACLrB,WAAA,EAAaC,CAAA;MACbE,IAAA,EAAMD,CAAA;MACNG,OAAA,EAASD,CAAA;MACTP,IAAA,EAAMC,CAAA;MACNY,IAAA,EAAMD,CAAA;MACNF,SAAA,EAAWC,CAAA;MACXW,QAAA,EAAUF,CAAA;MACVH,QAAA,EAAUC;IAAA,IAKpB;EAAA;AAAA,SAAAtB,CAAA,IAAAkD,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}