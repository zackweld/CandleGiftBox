{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar $gOPD = require('gopd');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\nvar isPropertyDescriptor = require('../helpers/isPropertyDescriptor');\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsExtensible = require('./IsExtensible');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\nvar SameValue = require('./SameValue');\nvar Type = require('./Type');\nvar ValidateAndApplyPropertyDescriptor = require('./ValidateAndApplyPropertyDescriptor');\n\n// https://262.ecma-international.org/6.0/#sec-ordinarydefineownproperty\n\nmodule.exports = function OrdinaryDefineOwnProperty(O, P, Desc) {\n  if (Type(O) !== 'Object') {\n    throw new $TypeError('Assertion failed: O must be an Object');\n  }\n  if (!IsPropertyKey(P)) {\n    throw new $TypeError('Assertion failed: P must be a Property Key');\n  }\n  if (!isPropertyDescriptor({\n    Type: Type,\n    IsDataDescriptor: IsDataDescriptor,\n    IsAccessorDescriptor: IsAccessorDescriptor\n  }, Desc)) {\n    throw new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n  }\n  if (!$gOPD) {\n    // ES3/IE 8 fallback\n    if (IsAccessorDescriptor(Desc)) {\n      throw new $SyntaxError('This environment does not support accessor property descriptors.');\n    }\n    var creatingNormalDataProperty = !(P in O) && Desc['[[Writable]]'] && Desc['[[Enumerable]]'] && Desc['[[Configurable]]'] && '[[Value]]' in Desc;\n    var settingExistingDataProperty = P in O && (!('[[Configurable]]' in Desc) || Desc['[[Configurable]]']) && (!('[[Enumerable]]' in Desc) || Desc['[[Enumerable]]']) && (!('[[Writable]]' in Desc) || Desc['[[Writable]]']) && '[[Value]]' in Desc;\n    if (creatingNormalDataProperty || settingExistingDataProperty) {\n      O[P] = Desc['[[Value]]']; // eslint-disable-line no-param-reassign\n      return SameValue(O[P], Desc['[[Value]]']);\n    }\n    throw new $SyntaxError('This environment does not support defining non-writable, non-enumerable, or non-configurable properties');\n  }\n  var desc = $gOPD(O, P);\n  var current = desc && ToPropertyDescriptor(desc);\n  var extensible = IsExtensible(O);\n  return ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current);\n};","map":{"version":3,"names":["GetIntrinsic","require","$gOPD","$SyntaxError","$TypeError","isPropertyDescriptor","IsAccessorDescriptor","IsDataDescriptor","IsExtensible","IsPropertyKey","ToPropertyDescriptor","SameValue","Type","ValidateAndApplyPropertyDescriptor","module","exports","OrdinaryDefineOwnProperty","O","P","Desc","creatingNormalDataProperty","settingExistingDataProperty","desc","current","extensible"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/es-abstract/2023/OrdinaryDefineOwnProperty.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = require('gopd');\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar isPropertyDescriptor = require('../helpers/isPropertyDescriptor');\n\nvar IsAccessorDescriptor = require('./IsAccessorDescriptor');\nvar IsDataDescriptor = require('./IsDataDescriptor');\nvar IsExtensible = require('./IsExtensible');\nvar IsPropertyKey = require('./IsPropertyKey');\nvar ToPropertyDescriptor = require('./ToPropertyDescriptor');\nvar SameValue = require('./SameValue');\nvar Type = require('./Type');\nvar ValidateAndApplyPropertyDescriptor = require('./ValidateAndApplyPropertyDescriptor');\n\n// https://262.ecma-international.org/6.0/#sec-ordinarydefineownproperty\n\nmodule.exports = function OrdinaryDefineOwnProperty(O, P, Desc) {\n\tif (Type(O) !== 'Object') {\n\t\tthrow new $TypeError('Assertion failed: O must be an Object');\n\t}\n\tif (!IsPropertyKey(P)) {\n\t\tthrow new $TypeError('Assertion failed: P must be a Property Key');\n\t}\n\tif (!isPropertyDescriptor({\n\t\tType: Type,\n\t\tIsDataDescriptor: IsDataDescriptor,\n\t\tIsAccessorDescriptor: IsAccessorDescriptor\n\t}, Desc)) {\n\t\tthrow new $TypeError('Assertion failed: Desc must be a Property Descriptor');\n\t}\n\tif (!$gOPD) {\n\t\t// ES3/IE 8 fallback\n\t\tif (IsAccessorDescriptor(Desc)) {\n\t\t\tthrow new $SyntaxError('This environment does not support accessor property descriptors.');\n\t\t}\n\t\tvar creatingNormalDataProperty = !(P in O)\n\t\t\t&& Desc['[[Writable]]']\n\t\t\t&& Desc['[[Enumerable]]']\n\t\t\t&& Desc['[[Configurable]]']\n\t\t\t&& '[[Value]]' in Desc;\n\t\tvar settingExistingDataProperty = (P in O)\n\t\t\t&& (!('[[Configurable]]' in Desc) || Desc['[[Configurable]]'])\n\t\t\t&& (!('[[Enumerable]]' in Desc) || Desc['[[Enumerable]]'])\n\t\t\t&& (!('[[Writable]]' in Desc) || Desc['[[Writable]]'])\n\t\t\t&& '[[Value]]' in Desc;\n\t\tif (creatingNormalDataProperty || settingExistingDataProperty) {\n\t\t\tO[P] = Desc['[[Value]]']; // eslint-disable-line no-param-reassign\n\t\t\treturn SameValue(O[P], Desc['[[Value]]']);\n\t\t}\n\t\tthrow new $SyntaxError('This environment does not support defining non-writable, non-enumerable, or non-configurable properties');\n\t}\n\tvar desc = $gOPD(O, P);\n\tvar current = desc && ToPropertyDescriptor(desc);\n\tvar extensible = IsExtensible(O);\n\treturn ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}