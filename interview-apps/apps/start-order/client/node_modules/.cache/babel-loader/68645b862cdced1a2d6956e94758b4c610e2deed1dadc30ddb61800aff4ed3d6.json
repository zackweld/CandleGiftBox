{"ast":null,"code":"import { typeof as o } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { getTestId as e, ComponentDefaultTestId as t } from \"../../tests/testIds.js\";\nimport s from \"classnames\";\nimport i, { forwardRef as r } from \"react\";\nimport a from \"../../hooks/useMergeRef.js\";\nimport { IconType as c } from \"./IconConstants.js\";\nimport n from \"./CustomSvgIcon/CustomSvgIcon.js\";\nimport l from \"./FontIcon/FontIcon.js\";\nimport m from \"./hooks/useIconProps.js\";\nimport { withStaticProps as d } from \"../../types/withStaticProps.js\";\nvar u = function (o) {};\nvar p = d(r(function (r, d) {\n  var p = r.id,\n    f = r.onClick,\n    C = void 0 === f ? u : f,\n    v = r.icon,\n    b = void 0 === v ? \"\" : v,\n    j = r.clickable,\n    g = r.iconType,\n    k = void 0 === g ? c.SVG : g,\n    y = r.iconSize,\n    I = void 0 === y ? 16 : y,\n    S = r.ignoreFocusStyle,\n    N = r.tabindex,\n    O = r.style,\n    x = r.useCurrentColor,\n    F = void 0 !== x && x,\n    P = r.customColor,\n    R = r[\"data-testid\"],\n    h = m({\n      onClick: C,\n      iconLabel: r.iconLabel,\n      clickable: void 0 === j || j,\n      className: r.className,\n      isDecorationOnly: r.ariaHidden,\n      ignoreFocusStyle: void 0 !== S && S,\n      externalTabIndex: N && +N\n    }),\n    E = h.screenReaderAccessProps,\n    T = h.onClickCallback,\n    z = h.computedClassName,\n    G = a(d, h.iconRef);\n  if (!b) return null;\n  var H = \"function\" == typeof b,\n    L = R || e(t.ICON, p);\n  return k === c.SVG || H || \"object\" === o(b) ? function (o, s) {\n    return i.createElement(o, Object.assign({}, s, {\n      \"data-testid\": s[\"data-testid\"] || e(t.ICON, s.id)\n    }));\n  }(b, Object.assign(Object.assign({\n    id: p\n  }, E), {\n    ref: H ? void 0 : G,\n    size: \"\" + I,\n    onClick: C,\n    className: z,\n    style: O,\n    \"data-testid\": L\n  })) : k === c.SRC ? i.createElement(n, Object.assign({\n    id: p,\n    src: b\n  }, E, {\n    className: s(z),\n    onClick: T,\n    replaceToCurrentColor: F,\n    customColor: P,\n    \"data-testid\": L\n  })) : i.createElement(l, Object.assign({\n    id: p\n  }, E, {\n    className: s(z),\n    onClick: T,\n    ref: G,\n    icon: b,\n    \"data-testid\": L\n  }));\n}), {\n  type: c\n});\nexport { p as default };","map":{"version":3,"names":["u","CLICK_NOOP","o","p","d","r","id","f","onClick","C","v","icon","b","j","clickable","g","iconType","k","c","SVG","y","iconSize","I","S","ignoreFocusStyle","N","tabindex","O","style","x","useCurrentColor","F","P","customColor","R","h","m","iconLabel","className","isDecorationOnly","ariaHidden","externalTabIndex","E","screenReaderAccessProps","T","onClickCallback","z","computedClassName","G","a","iconRef","H","L","e","t","ICON","s","i","createElement","Object","assign","ref","size","SRC","n","src","replaceToCurrentColor","l","type","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/Icon/Icon.tsx"],"sourcesContent":["import { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { CSSProperties, forwardRef, Ref } from \"react\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { IconType } from \"./IconConstants\";\nimport CustomSvgIcon from \"./CustomSvgIcon/CustomSvgIcon\";\nimport FontIcon from \"./FontIcon/FontIcon\";\nimport useIconProps from \"./hooks/useIconProps\";\nimport { VibeComponentProps, VibeComponent, MouseEventCallBack, SubIcon, withStaticProps } from \"../../types\";\n\n// eslint-disable-next-line no-unused-vars,@typescript-eslint/no-unused-vars,@typescript-eslint/no-empty-function\nconst CLICK_NOOP = (_event: React.MouseEvent) => {};\n\nexport interface IconSubComponentProps {\n  ref?: Ref<HTMLElement>;\n  id?: string;\n  size?: string | number;\n  onClick?: MouseEventCallBack;\n  className?: string;\n  style?: CSSProperties;\n  \"data-testid\"?: string;\n}\n\nfunction renderIcon(Icon: SubIcon, props: IconSubComponentProps) {\n  const dataTestId = props[\"data-testid\"];\n  return <Icon {...props} data-testid={dataTestId || getTestId(ComponentDefaultTestId.ICON, props.id)} />;\n}\n\nexport interface IconProps extends VibeComponentProps {\n  // eslint-disable-next-line no-unused-vars\n  onClick?: (event: React.MouseEvent) => void;\n  /**\n   * We support three types of icons - SVG, FONT and SRC (classname) so this prop is either the name of the icon or the component\n   */\n  icon: SubIcon;\n  /**\n   * Is icon is a button\n   */\n  clickable?: boolean;\n  /**\nmo   * Icon aria label [aria label](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-label)\n   */\n  iconLabel?: string;\n  /**\n   *  The type of the component - svg, font or custom svg (using [`react-inlinesvg`](https://github.com/gilbarbara/react-inlinesvg#readme))\n   */\n  iconType?: IconType;\n  /**\n   * Size for font icon\n   */\n  iconSize?: number | string;\n  /**\n   * Remove focus style\n   */\n  ignoreFocusStyle?: boolean;\n  tabindex?: number | string;\n  /**\n   * Hide icon asset from screen reader. No need to set value for this prop when `clickable` is false\n   */\n  ariaHidden?: boolean;\n  style?: React.CSSProperties;\n  /**\n   * When using svg from src (Icon.type.SRC) this boolean will transform the \"fill\" property to \"currentColor\"\n   */\n  useCurrentColor?: boolean;\n  /**\n   * Override the default color with a custom one\n   */\n  customColor?: string;\n}\n\nconst Icon: VibeComponent<IconProps, HTMLElement> & { type?: typeof IconType } = forwardRef(\n  (\n    {\n      /**\n       * component id\n       */\n      id,\n      onClick = CLICK_NOOP,\n      className,\n      icon = \"\",\n      clickable = true,\n      iconLabel,\n      iconType = IconType.SVG,\n      iconSize = 16,\n      ignoreFocusStyle = false,\n      tabindex: externalTabIndex,\n      ariaHidden,\n      style,\n      useCurrentColor = false,\n      customColor,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const overrideExternalTabIndex = externalTabIndex && +externalTabIndex;\n    const { screenReaderAccessProps, onClickCallback, computedClassName, iconRef } = useIconProps({\n      onClick,\n      iconLabel,\n      clickable,\n      className,\n      isDecorationOnly: ariaHidden,\n      ignoreFocusStyle,\n      externalTabIndex: overrideExternalTabIndex\n    });\n\n    const mergedRef = useMergeRef(ref, iconRef);\n\n    if (!icon) {\n      return null;\n    }\n\n    // Replace in major version change with more accurate check\n    const isFunctionType = typeof icon === \"function\";\n\n    const overrideDataTestId = dataTestId || getTestId(ComponentDefaultTestId.ICON, id);\n\n    // Replace in major version change with more accurate check\n    if (iconType === IconType.SVG || isFunctionType || typeof icon === \"object\") {\n      return renderIcon(icon, {\n        id,\n        ...screenReaderAccessProps,\n        ref: isFunctionType ? undefined : mergedRef,\n        size: iconSize.toString(),\n        onClick,\n        className: computedClassName,\n        style,\n        \"data-testid\": overrideDataTestId\n      });\n    }\n    if (iconType === IconType.SRC) {\n      return (\n        <CustomSvgIcon\n          id={id}\n          src={icon}\n          {...screenReaderAccessProps}\n          className={cx(computedClassName)}\n          onClick={onClickCallback}\n          replaceToCurrentColor={useCurrentColor}\n          customColor={customColor}\n          data-testid={overrideDataTestId}\n        />\n      );\n    }\n    return (\n      <FontIcon\n        id={id}\n        {...screenReaderAccessProps}\n        className={cx(computedClassName)}\n        onClick={onClickCallback}\n        ref={mergedRef}\n        icon={icon}\n        data-testid={overrideDataTestId}\n      />\n    );\n  }\n);\n\nexport default withStaticProps(Icon, {\n  type: IconType\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}