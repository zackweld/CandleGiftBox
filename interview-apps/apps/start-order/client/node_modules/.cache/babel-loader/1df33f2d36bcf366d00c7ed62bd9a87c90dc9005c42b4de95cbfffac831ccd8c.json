{"ast":null,"code":"import { slicedToArray as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport r, { useState as a, useMemo as t, createContext as l, useContext as u } from \"react\";\nimport { createTestIdHelper as n } from \"../../helpers/testid-helper.js\";\nimport { useSliderValues as i, useDragging as o, useSliderActionsContextValue as d } from \"./SliderHooks.js\";\nvar s = l({}),\n  c = l({}),\n  m = l({}),\n  v = l({});\nfunction f(l) {\n  var u = l.children,\n    f = l.ariaLabel,\n    p = l.ariaLabelledby,\n    b = l.color,\n    g = l.defaultValue,\n    h = l.disabled,\n    x = l.max,\n    V = l.min,\n    P = l.onChange,\n    T = l.ranged,\n    E = l.showValue,\n    L = l.size,\n    j = l.step,\n    y = l.value,\n    S = l.valueFormatter,\n    w = l.valueText,\n    z = l.infixOptions,\n    H = n(l[\"data-testid\"]),\n    _ = i(g, y, S, w),\n    k = _.actualValue,\n    A = _.actualValueText,\n    B = _.getSelectedValue,\n    C = _.setSelectedValue,\n    F = a(null),\n    I = e(F, 2),\n    O = I[0],\n    q = I[1],\n    D = a(null),\n    G = e(D, 2),\n    J = G[0],\n    K = G[1],\n    M = o(),\n    N = e(M, 3),\n    Q = N[0],\n    R = N[1],\n    U = N[2],\n    W = t(function () {\n      return {\n        active: O,\n        ariaLabel: f,\n        ariaLabelledby: p,\n        color: b,\n        disabled: h,\n        dragging: Q,\n        focused: J,\n        size: L,\n        shapeTestId: H,\n        showValue: E\n      };\n    }, [O, f, p, b, h, Q, J, L, H, E]),\n    X = t(function () {\n      return {\n        max: x,\n        min: V,\n        ranged: T,\n        step: j,\n        value: k,\n        valueText: A\n      };\n    }, [x, V, T, j, k, A]),\n    Y = d(k, J, U, B, x, V, P, T, q, K, R, C, j);\n  return r.createElement(s.Provider, {\n    value: W\n  }, r.createElement(c.Provider, {\n    value: X\n  }, r.createElement(m.Provider, {\n    value: Y\n  }, r.createElement(v.Provider, {\n    value: z\n  }, u))));\n}\nfunction p() {\n  return u(s);\n}\nfunction b() {\n  return u(v);\n}\nfunction g() {\n  return u(c);\n}\nfunction h() {\n  return u(m);\n}\nexport { f as SliderProvider, h as useSliderActions, b as useSliderInfix, g as useSliderSelection, p as useSliderUi };","map":{"version":3,"names":["s","l","c","m","v","f","u","children","ariaLabel","p","ariaLabelledby","b","color","g","defaultValue","h","disabled","x","max","V","min","P","onChange","T","ranged","E","showValue","L","size","j","step","y","value","S","valueFormatter","w","valueText","z","infixOptions","H","n","_","i","k","actualValue","A","actualValueText","B","getSelectedValue","C","setSelectedValue","F","a","I","e","O","q","D","G","J","K","M","o","N","Q","R","U","W","t","active","dragging","focused","shapeTestId","X","Y","d","r","createElement","Provider","SliderProvider","useSliderActions","useSliderInfix","useSliderSelection","useSliderUi"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/Slider/SliderContext.tsx"],"sourcesContent":["import React, { createContext, ReactElement, useContext, useMemo, useState } from \"react\";\nimport { createTestIdHelper } from \"../../helpers/testid-helper\";\nimport { useDragging, useSliderActionsContextValue, useSliderValues } from \"./SliderHooks\";\nimport { SliderProps } from \"./Slider\";\nimport { SliderContextActions, SliderContextInfix, SliderContextSelection, SliderContextUI } from \"./SliderConstants\";\nimport { IconType } from \"../Icon/IconConstants\";\n\nconst UiContext = createContext({});\nconst SelectionContext = createContext({});\nconst ActionsContext = createContext({});\nconst InfixContext = createContext({});\n\nexport interface SliderProviderProps extends SliderProps {\n  children?: ReactElement | ReactElement[];\n  infixOptions?: {\n    /**\n     * Show selected from Slider range value\n     */\n    indicateSelection?: boolean;\n    /**\n     * Options for initial/start/prefix element, it can be one of:\n     *  - Any Component (react component, node, text, number etc.)\n     *  - Or it can be an object of options for Icons component (see Icon components props)\n     *  - Or it can be an object for Label (Icon, Heading - and other components)\n     *  - Or it can be Render Props Function witch are getting value and valueText\n     */\n    prefix?: { icon: IconType } | string | ((value: number, valueText: string) => void) | ReactElement;\n    /**\n     * Options for postfix/end/finishing element. Same as prefix element.\n     */\n    postfix?: { icon: IconType } | string | ((value: number, valueText: string) => void) | ReactElement;\n    /**\n     * Width of SelectionIndicator (i.e. TextField)\n     */\n    selectionIndicatorWidth?: string;\n  };\n}\n\nexport function SliderProvider({\n  children,\n  ariaLabel,\n  ariaLabelledby,\n  color,\n  \"data-testid\": dataTestId,\n  defaultValue,\n  disabled,\n  max,\n  min,\n  onChange,\n  ranged,\n  showValue,\n  size,\n  step,\n  value,\n  valueFormatter,\n  valueText,\n  infixOptions\n}: SliderProviderProps) {\n  const shapeTestId = createTestIdHelper(dataTestId);\n  const { actualValue, actualValueText, getSelectedValue, setSelectedValue } = useSliderValues(\n    defaultValue,\n    value,\n    valueFormatter,\n    valueText\n  );\n\n  const [active, setActive] = useState<number>(null);\n  const [focused, setFocused] = useState<number>(null);\n  const [dragging, setDragging, getDragging] = useDragging();\n\n  const uiContextValue: SliderContextUI = useMemo(\n    () => ({ active, ariaLabel, ariaLabelledby, color, disabled, dragging, focused, size, shapeTestId, showValue }),\n    [active, ariaLabel, ariaLabelledby, color, disabled, dragging, focused, size, shapeTestId, showValue]\n  );\n\n  const selectionContextValue: SliderContextSelection = useMemo(\n    () => ({\n      max,\n      min,\n      ranged,\n      step,\n      value: actualValue,\n      valueText: actualValueText\n    }),\n    [max, min, ranged, step, actualValue, actualValueText]\n  );\n\n  const actionsContextValue: SliderContextActions = useSliderActionsContextValue(\n    actualValue,\n    focused,\n    getDragging,\n    getSelectedValue,\n    max,\n    min,\n    onChange,\n    ranged,\n    setActive,\n    setFocused,\n    setDragging,\n    setSelectedValue,\n    step\n  );\n\n  return (\n    <UiContext.Provider value={uiContextValue}>\n      <SelectionContext.Provider value={selectionContextValue}>\n        <ActionsContext.Provider value={actionsContextValue}>\n          <InfixContext.Provider value={infixOptions}>{children}</InfixContext.Provider>\n        </ActionsContext.Provider>\n      </SelectionContext.Provider>\n    </UiContext.Provider>\n  );\n}\n\nexport function useSliderUi(): SliderContextUI {\n  return useContext(UiContext) as SliderContextUI;\n}\n\nexport function useSliderInfix(): SliderContextInfix {\n  return useContext(InfixContext) as SliderContextInfix;\n}\n\nexport function useSliderSelection(): SliderContextSelection {\n  return useContext(SelectionContext) as SliderContextSelection;\n}\n\nexport function useSliderActions(): SliderContextActions {\n  return useContext(ActionsContext) as SliderContextActions;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}