{"ast":null,"code":"import { defineProperty as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport i, { forwardRef as t, useRef as o, useMemo as r } from \"react\";\nimport \"../../constants/dialog.js\";\nimport { BASE_SIZES as a } from \"../../constants/sizes.js\";\nimport \"../../constants/positions.js\";\nimport s from \"../../hooks/useMergeRef.js\";\nimport { NOOP as l } from \"../../utils/function-utils.js\";\nimport { ensureDefaultValue as n } from \"./SliderHelpers.js\";\nimport { SliderProvider as d } from \"./SliderContext.js\";\nimport m from \"./SliderBase/SliderBase.js\";\nimport c from \"./SliderInfix.js\";\nimport { SliderColor as p } from \"./SliderConstants.js\";\nimport u from \"classnames\";\nimport { withStaticProps as f } from \"../../types/withStaticProps.js\";\nimport v from \"./Slider.module.scss.js\";\nvar j = t(function (t, a) {\n    var p = t.ariaLabel,\n      f = t.ariaLabelledby,\n      x = t.className,\n      S = t.color,\n      b = t[\"data-testid\"],\n      h = void 0 === b ? \"monday-slider\" : b,\n      g = t.disabled,\n      E = void 0 !== g && g,\n      L = t.id,\n      k = t.max,\n      y = void 0 === k ? 100 : k,\n      z = t.min,\n      I = void 0 === z ? 0 : z,\n      P = t.onChange,\n      w = void 0 === P ? l : P,\n      C = t.ranged,\n      F = void 0 !== C && C,\n      V = t.step,\n      B = void 0 === V ? 1 : V,\n      T = t.showValue,\n      H = void 0 !== T && T,\n      M = t.size,\n      N = void 0 === M ? j.sizes.SMALL : M,\n      O = t.value,\n      R = t.defaultValue,\n      W = void 0 === R ? 0 : R,\n      X = t.valueFormatter,\n      _ = void 0 === X ? function (e) {\n        return \"\".concat(e, \"%\");\n      } : X,\n      A = t.valueText,\n      q = t.indicateSelection,\n      D = void 0 !== q && q,\n      G = t.prefix,\n      J = t.postfix,\n      K = t.selectionIndicatorWidth,\n      Q = void 0 === K ? \"60px\" : K,\n      U = o(null),\n      Y = s(a, U),\n      Z = r(function () {\n        return {\n          prefix: G,\n          postfix: J,\n          indicateSelection: D,\n          selectionIndicatorWidth: Q\n        };\n      }, [G, J, D, Q]);\n    return i.createElement(d, {\n      ariaLabel: p,\n      ariaLabelledby: f,\n      color: S,\n      \"data-testid\": h,\n      disabled: E,\n      infixOptions: Z,\n      max: y,\n      min: I,\n      onChange: w,\n      ranged: F,\n      showValue: H,\n      size: N,\n      step: B,\n      value: O,\n      defaultValue: n(W, I, y, F),\n      valueFormatter: _,\n      valueText: A\n    }, i.createElement(\"div\", {\n      className: u(v.slider, e({}, v.valueShown, H), x),\n      \"data-testid\": h,\n      id: L,\n      ref: Y\n    }, i.createElement(c, {\n      kind: c.kinds.PREFIX\n    }), i.createElement(m, null), i.createElement(c, {\n      kind: c.kinds.POSTFIX\n    })));\n  }),\n  x = f(j, {\n    sizes: a,\n    colors: p\n  });\nexport { x as default };","map":{"version":3,"names":["j","t","a","p","ariaLabel","f","ariaLabelledby","x","className","S","color","b","h","g","disabled","E","L","id","k","max","y","z","min","I","P","onChange","w","l","C","ranged","F","V","step","B","T","showValue","H","M","size","N","sizes","SMALL","O","value","R","defaultValue","W","X","valueFormatter","_","e","concat","A","valueText","q","indicateSelection","D","G","prefix","J","postfix","K","selectionIndicatorWidth","Q","U","o","Y","s","Z","r","i","createElement","d","infixOptions","n","u","v","slider","valueShown","ref","c","kind","kinds","PREFIX","m","POSTFIX","colors","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/Slider/Slider.tsx"],"sourcesContent":["import React, { forwardRef, ReactElement, useMemo, useRef } from \"react\";\nimport { BASE_SIZES } from \"../../constants\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { ensureDefaultValue } from \"./SliderHelpers\";\nimport { SliderProvider } from \"./SliderContext\";\nimport SliderBase from \"./SliderBase/SliderBase\";\nimport SliderInfix from \"./SliderInfix\";\nimport { IconType } from \"../Icon/IconConstants\";\nimport { SliderColor, SliderSize } from \"./SliderConstants\";\nimport cx from \"classnames\";\nimport { withStaticProps } from \"../../types\";\nimport styles from \"./Slider.module.scss\";\n\nexport type SliderProps = {\n  // ------ SliderBase props\n  /**\n   * Define a string that labels the current element (Slider)\n   */\n  ariaLabel?: string;\n  /**\n   * ElementId of Node that have the text needed for labeling the current element (Slider)\n   */\n  ariaLabelledby?: string;\n  /**\n   * Custom `class name` to be added to the component-root-node\n   */\n  className?: string;\n  /**\n   * Color Mode (primary/positive/negative) of the component (Slider)\n   */\n  color?: SliderColor;\n  /**\n   * Unique TestId - can be used as Selector for integration tests and other needs (tracking, etc)\n   */\n  \"data-testid\"?: string;\n  defaultValue?: number | number[];\n  /**\n   * Formatter function `value => formattedValue`\n   * default formatter return `${value}%`\n   */\n  /**\n   * If set to true, Component (Slider) will be disabled\n   *  - impossible to change value of component (Slider)\n   *  - visual changes (opacity)\n   */\n  disabled?: boolean;\n  /**\n   * Attribute `id` to be added to the component-root-node\n   */\n  id?: string;\n  /**\n   * Max range value of the component (Slider)\n   */\n  max?: number;\n  /**\n   * Min range value of the component (Slider)\n   */\n  min?: number;\n  /**\n   * Optional onChange callback (for outer trigger or Controlled mode)\n   * - required in Controlled Mode\n   */\n  onChange?: (value: number | number[]) => void;\n  /**\n   * If true switch slider to RRange mode (two Thumbs)\n   */\n  ranged?: boolean;\n  /**\n   * The granularity with which the slider can step through values.\n   * (A \"discrete\" slider.) The min prop serves as the origin for the valid values.\n   * We recommend (max - min) to be evenly divisible by the step.\n   */\n  step?: number;\n  /**\n   * Always show `value` instead of Tooltip\n   */\n  showValue?: boolean;\n  /**\n   * Size small/medium/large of the component (Slider)\n   */\n  size?: SliderSize;\n  /**\n   * Current/selected value of the range of the Component (Slider)\n   *   - should be used in Controlled Mode only\n   *   - in ranged mode should be an array of two numbers\n   */\n  value?: number | number[];\n  /**\n   * Function to format the value, e.g. add %. By default, returns `${value}%`\n   */\n  valueFormatter?: (value: number) => string;\n  /**\n   * Text/presentation of current/selected value\n   *  - should be used in Controlled Mode only\n   */\n  valueText?: string;\n  // ------ Additional subcomponents' props\n  /**\n   * Show selected from Slider range value\n   */\n  indicateSelection?: boolean;\n  /**\n   * Options for initial/start/prefix element, it can be one of:\n   *  - Any Component (react component, node, text, number etc.)\n   *  - Or it can be an object of options for Icons component (see Icon components props)\n   *  - Or it can be an object for Label (Icon, Heading - and other components)\n   *  - Or it can be Render Props Function witch are getting value and valueText\n   */\n  prefix?: { icon: IconType } | string | ((value: number, valueText: string) => void) | ReactElement;\n  /**\n   * Options for postfix/end/finishing element. Same as prefix element.\n   */\n  postfix?: { icon: IconType } | string | ((value: number, valueText: string) => void) | ReactElement;\n  /**\n   * Width of SelectionIndicator (i.e. TextField)\n   */\n  selectionIndicatorWidth?: string;\n};\n\nconst Slider: React.FC<SliderProps> & {\n  sizes?: typeof BASE_SIZES;\n  colors?: typeof SliderColor;\n} = forwardRef(\n  (\n    {\n      ariaLabel,\n      ariaLabelledby,\n      className,\n      color,\n      \"data-testid\": dataTestId = \"monday-slider\",\n      disabled = false,\n      id,\n      max = 100,\n      min = 0,\n      onChange = NOOP,\n      ranged = false,\n      step = 1,\n      showValue = false,\n      size = Slider.sizes.SMALL,\n      value,\n      defaultValue = 0,\n      valueFormatter = (value: number) => `${value}%`,\n      valueText,\n      // ------ Additional subcomponents' props\n      indicateSelection = false,\n      prefix,\n      postfix,\n      selectionIndicatorWidth = \"60px\"\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const infixOptions = useMemo(\n      () => ({ prefix, postfix, indicateSelection, selectionIndicatorWidth }),\n      [prefix, postfix, indicateSelection, selectionIndicatorWidth]\n    );\n    return (\n      <SliderProvider\n        ariaLabel={ariaLabel}\n        ariaLabelledby={ariaLabelledby}\n        color={color}\n        data-testid={dataTestId}\n        disabled={disabled}\n        infixOptions={infixOptions}\n        max={max}\n        min={min}\n        onChange={onChange}\n        ranged={ranged}\n        showValue={showValue}\n        size={size}\n        step={step}\n        value={value}\n        defaultValue={ensureDefaultValue(defaultValue, min, max, ranged)}\n        valueFormatter={valueFormatter}\n        valueText={valueText}\n      >\n        <div\n          className={cx(styles.slider, { [styles.valueShown]: showValue }, className)}\n          data-testid={dataTestId}\n          id={id}\n          ref={mergedRef}\n        >\n          <SliderInfix kind={SliderInfix.kinds.PREFIX} />\n          <SliderBase />\n          <SliderInfix kind={SliderInfix.kinds.POSTFIX} />\n        </div>\n      </SliderProvider>\n    );\n  }\n);\n\nexport default withStaticProps(Slider, {\n  sizes: BASE_SIZES,\n  colors: SliderColor\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}