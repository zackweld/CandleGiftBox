{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getInputHeight;\n\n/* eslint-disable camelcase */\nfunction getPadding(vertical, top, bottom) {\n  var isTopDefined = typeof top === 'number';\n  var isBottomDefined = typeof bottom === 'number';\n  var isVerticalDefined = typeof vertical === 'number';\n  if (isTopDefined && isBottomDefined) {\n    return top + bottom;\n  }\n  if (isTopDefined && isVerticalDefined) {\n    return top + vertical;\n  }\n  if (isTopDefined) {\n    return top;\n  }\n  if (isBottomDefined && isVerticalDefined) {\n    return bottom + vertical;\n  }\n  if (isBottomDefined) {\n    return bottom;\n  }\n  if (isVerticalDefined) {\n    return 2 * vertical;\n  }\n  return 0;\n}\nfunction getInputHeight(_ref, small) {\n  var _ref$font$input = _ref.font.input,\n    lineHeight = _ref$font$input.lineHeight,\n    lineHeight_small = _ref$font$input.lineHeight_small,\n    _ref$spacing = _ref.spacing,\n    inputPadding = _ref$spacing.inputPadding,\n    displayTextPaddingVertical = _ref$spacing.displayTextPaddingVertical,\n    displayTextPaddingTop = _ref$spacing.displayTextPaddingTop,\n    displayTextPaddingBottom = _ref$spacing.displayTextPaddingBottom,\n    displayTextPaddingVertical_small = _ref$spacing.displayTextPaddingVertical_small,\n    displayTextPaddingTop_small = _ref$spacing.displayTextPaddingTop_small,\n    displayTextPaddingBottom_small = _ref$spacing.displayTextPaddingBottom_small;\n  var calcLineHeight = small ? lineHeight_small : lineHeight;\n  var padding = small ? getPadding(displayTextPaddingVertical_small, displayTextPaddingTop_small, displayTextPaddingBottom_small) : getPadding(displayTextPaddingVertical, displayTextPaddingTop, displayTextPaddingBottom);\n  return parseInt(calcLineHeight, 10) + 2 * inputPadding + padding;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getInputHeight","getPadding","vertical","top","bottom","isTopDefined","isBottomDefined","isVerticalDefined","_ref","small","_ref$font$input","font","input","lineHeight","lineHeight_small","_ref$spacing","spacing","inputPadding","displayTextPaddingVertical","displayTextPaddingTop","displayTextPaddingBottom","displayTextPaddingVertical_small","displayTextPaddingTop_small","displayTextPaddingBottom_small","calcLineHeight","padding","parseInt"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/node_modules/react-dates/lib/utils/getInputHeight.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getInputHeight;\n\n/* eslint-disable camelcase */\nfunction getPadding(vertical, top, bottom) {\n  var isTopDefined = typeof top === 'number';\n  var isBottomDefined = typeof bottom === 'number';\n  var isVerticalDefined = typeof vertical === 'number';\n\n  if (isTopDefined && isBottomDefined) {\n    return top + bottom;\n  }\n\n  if (isTopDefined && isVerticalDefined) {\n    return top + vertical;\n  }\n\n  if (isTopDefined) {\n    return top;\n  }\n\n  if (isBottomDefined && isVerticalDefined) {\n    return bottom + vertical;\n  }\n\n  if (isBottomDefined) {\n    return bottom;\n  }\n\n  if (isVerticalDefined) {\n    return 2 * vertical;\n  }\n\n  return 0;\n}\n\nfunction getInputHeight(_ref, small) {\n  var _ref$font$input = _ref.font.input,\n      lineHeight = _ref$font$input.lineHeight,\n      lineHeight_small = _ref$font$input.lineHeight_small,\n      _ref$spacing = _ref.spacing,\n      inputPadding = _ref$spacing.inputPadding,\n      displayTextPaddingVertical = _ref$spacing.displayTextPaddingVertical,\n      displayTextPaddingTop = _ref$spacing.displayTextPaddingTop,\n      displayTextPaddingBottom = _ref$spacing.displayTextPaddingBottom,\n      displayTextPaddingVertical_small = _ref$spacing.displayTextPaddingVertical_small,\n      displayTextPaddingTop_small = _ref$spacing.displayTextPaddingTop_small,\n      displayTextPaddingBottom_small = _ref$spacing.displayTextPaddingBottom_small;\n  var calcLineHeight = small ? lineHeight_small : lineHeight;\n  var padding = small ? getPadding(displayTextPaddingVertical_small, displayTextPaddingTop_small, displayTextPaddingBottom_small) : getPadding(displayTextPaddingVertical, displayTextPaddingTop, displayTextPaddingBottom);\n  return parseInt(calcLineHeight, 10) + 2 * inputPadding + padding;\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAAC,SAAS,CAAC,GAAGE,cAAc;;AAEnC;AACA,SAASC,UAAUA,CAACC,QAAQ,EAAEC,GAAG,EAAEC,MAAM,EAAE;EACzC,IAAIC,YAAY,GAAG,OAAOF,GAAG,KAAK,QAAQ;EAC1C,IAAIG,eAAe,GAAG,OAAOF,MAAM,KAAK,QAAQ;EAChD,IAAIG,iBAAiB,GAAG,OAAOL,QAAQ,KAAK,QAAQ;EAEpD,IAAIG,YAAY,IAAIC,eAAe,EAAE;IACnC,OAAOH,GAAG,GAAGC,MAAM;EACrB;EAEA,IAAIC,YAAY,IAAIE,iBAAiB,EAAE;IACrC,OAAOJ,GAAG,GAAGD,QAAQ;EACvB;EAEA,IAAIG,YAAY,EAAE;IAChB,OAAOF,GAAG;EACZ;EAEA,IAAIG,eAAe,IAAIC,iBAAiB,EAAE;IACxC,OAAOH,MAAM,GAAGF,QAAQ;EAC1B;EAEA,IAAII,eAAe,EAAE;IACnB,OAAOF,MAAM;EACf;EAEA,IAAIG,iBAAiB,EAAE;IACrB,OAAO,CAAC,GAAGL,QAAQ;EACrB;EAEA,OAAO,CAAC;AACV;AAEA,SAASF,cAAcA,CAACQ,IAAI,EAAEC,KAAK,EAAE;EACnC,IAAIC,eAAe,GAAGF,IAAI,CAACG,IAAI,CAACC,KAAK;IACjCC,UAAU,GAAGH,eAAe,CAACG,UAAU;IACvCC,gBAAgB,GAAGJ,eAAe,CAACI,gBAAgB;IACnDC,YAAY,GAAGP,IAAI,CAACQ,OAAO;IAC3BC,YAAY,GAAGF,YAAY,CAACE,YAAY;IACxCC,0BAA0B,GAAGH,YAAY,CAACG,0BAA0B;IACpEC,qBAAqB,GAAGJ,YAAY,CAACI,qBAAqB;IAC1DC,wBAAwB,GAAGL,YAAY,CAACK,wBAAwB;IAChEC,gCAAgC,GAAGN,YAAY,CAACM,gCAAgC;IAChFC,2BAA2B,GAAGP,YAAY,CAACO,2BAA2B;IACtEC,8BAA8B,GAAGR,YAAY,CAACQ,8BAA8B;EAChF,IAAIC,cAAc,GAAGf,KAAK,GAAGK,gBAAgB,GAAGD,UAAU;EAC1D,IAAIY,OAAO,GAAGhB,KAAK,GAAGR,UAAU,CAACoB,gCAAgC,EAAEC,2BAA2B,EAAEC,8BAA8B,CAAC,GAAGtB,UAAU,CAACiB,0BAA0B,EAAEC,qBAAqB,EAAEC,wBAAwB,CAAC;EACzN,OAAOM,QAAQ,CAACF,cAAc,EAAE,EAAE,CAAC,GAAG,CAAC,GAAGP,YAAY,GAAGQ,OAAO;AAClE"},"metadata":{},"sourceType":"script","externalDependencies":[]}