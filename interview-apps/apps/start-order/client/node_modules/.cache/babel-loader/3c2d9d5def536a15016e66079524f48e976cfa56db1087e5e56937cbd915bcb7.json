{"ast":null,"code":"import { inherits as e, createClass as o, defineProperty as t, classCallCheck as i, callSuper as n } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { isFunction as s, camelCase as a } from \"lodash-es\";\nimport r from \"classnames\";\nimport l, { PureComponent as p, isValidElement as d } from \"react\";\nimport m from \"../Dialog/Dialog.js\";\nimport { HideShowEvent as h, AnimationType as c, JustifyType as g } from \"../../constants/dialog.js\";\nimport \"../../constants/sizes.js\";\nimport { DialogPosition as u } from \"../../constants/positions.js\";\nimport { TooltipTheme as T, TooltipArrowPosition as w } from \"./TooltipConstants.js\";\nimport { getStyle as y } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport f from \"./Tooltip.module.scss.js\";\nimport { getTestId as S, ComponentDefaultTestId as D } from \"../../tests/testIds.js\";\nimport v from \"../Icon/Icon.js\";\nimport C from \"../Flex/Flex.js\";\nimport { warnDeprecated as E } from \"../../utils/warn-deprecated.js\";\nvar j = {\n    lastTooltipHideTS: null,\n    openTooltipsCount: 0\n  },\n  b = function (h) {\n    function g(e) {\n      var o;\n      return i(this, g), (o = n(this, g, [e])).renderTooltipContent = o.renderTooltipContent.bind(o), o.getShowDelay = o.getShowDelay.bind(o), o.onTooltipShow = o.onTooltipShow.bind(o), o.onTooltipHide = o.onTooltipHide.bind(o), o.wasShown = !1, E({\n        component: \"Tooltip\",\n        condition: o.props.theme && ![\"primary\", \"dark\"].includes(o.props.theme),\n        message: \"'theme' prop will be able to get only 'dark' and 'primary' in the upcoming major version. Please consider using these themes.\"\n      }), E({\n        component: \"Tooltip\",\n        condition: o.props.position && ![\"top\", \"left\", \"right\", \"bottom\"].includes(o.props.position),\n        message: \"'position' prop will be able to get only 'top', 'bottom', 'left', and 'right' values in the upcoming major version. Please consider using these positions.\"\n      }), o;\n    }\n    return e(g, p), o(g, [{\n      key: \"getContainer\",\n      value: function () {\n        return document.getElementById(\"tooltips-container\") || document.querySelector(\"body\");\n      }\n    }, {\n      key: \"renderTooltipContent\",\n      value: function () {\n        var e,\n          o = this.props,\n          i = o.theme,\n          n = o.content,\n          p = o.paddingSize,\n          m = o.className,\n          h = o.style,\n          c = o.withMaxWidth,\n          g = o.title,\n          u = o.image,\n          T = o.icon;\n        return n ? (s(n) ? e = n() : (d(n) || \"string\" == typeof n && n) && (e = n), e ? g || u ? l.createElement(\"div\", {\n          style: h,\n          className: r(f.tooltip, f.tooltipWithContent, y(f, a(i)), t({}, f.withMaxWidth, c), m)\n        }, u && l.createElement(\"img\", {\n          className: f.image,\n          src: u,\n          alt: \"\"\n        }), l.createElement(\"div\", {\n          className: r(f.content, y(f, a(\"padding-size-\" + p)))\n        }, g && l.createElement(C, {\n          gap: C.gaps.XS\n        }, T && l.createElement(v, {\n          iconSize: \"20\",\n          icon: T,\n          clickable: !1\n        }), l.createElement(\"div\", {\n          className: f.title\n        }, g)), e)) : l.createElement(\"div\", {\n          style: h,\n          className: r(f.tooltip, y(f, a(i)), y(f, a(\"padding-size-\" + p)), t({}, f.withMaxWidth, c), m)\n        }, e) : null) : null;\n      }\n    }, {\n      key: \"onTooltipShow\",\n      value: function () {\n        if (!this.wasShown) {\n          var e = this.props.onTooltipShow;\n          j.openTooltipsCount++, this.wasShown = !0, e && e();\n        }\n      }\n    }, {\n      key: \"onTooltipHide\",\n      value: function () {\n        if (this.wasShown) {\n          var e = this.props.onTooltipHide;\n          j.lastTooltipHideTS = Date.now(), j.openTooltipsCount--, this.wasShown = !1, e && e();\n        }\n      }\n    }, {\n      key: \"getTimeSinceLastTooltip\",\n      value: function () {\n        return j.openTooltipsCount > 0 ? 0 : j.lastTooltipHideTS ? Date.now() - j.lastTooltipHideTS : 1 / 0;\n      }\n    }, {\n      key: \"getShowDelay\",\n      value: function () {\n        var e = this.props,\n          o = e.showDelay,\n          t = e.immediateShowDelay,\n          i = this.getTimeSinceLastTooltip();\n        return (0 === t || t) && 1500 > i ? {\n          showDelay: t,\n          preventAnimation: !0\n        } : {\n          showDelay: o,\n          preventAnimation: !1\n        };\n      }\n    }, {\n      key: \"render\",\n      value: function () {\n        var e = this.props,\n          o = e.justify,\n          t = e.children,\n          i = e.getContainer,\n          n = e.theme,\n          s = e.paddingSize,\n          p = e.tip,\n          d = e.arrowClassName,\n          h = e.id,\n          g = e[\"data-testid\"];\n        if (!t && !e.forceRenderWithoutChildren) return null;\n        if (e.withoutDialog) return this.renderTooltipContent();\n        var u = this.renderTooltipContent,\n          T = Object.assign(Object.assign({}, this.props), {\n            \"data-testid\": g || S(D.TOOLTIP, h),\n            startingEdge: o,\n            tooltip: p,\n            content: u,\n            getContainer: i || this.getContainer,\n            tooltipClassName: r(f.arrow, y(f, n), y(f, a(\"padding-size-\" + s)), d),\n            animationType: c.EXPAND,\n            onDialogDidHide: this.onTooltipHide,\n            onDialogDidShow: this.onTooltipShow,\n            getDynamicShowDelay: this.getShowDelay\n          });\n        return l.createElement(m, Object.assign({}, T), t);\n      }\n    }]);\n  }();\nb.positions = u, b.hideShowTriggers = h, b.themes = T, b.animationTypes = c, b.justifyTypes = g, b.arrowPositions = w, b.defaultProps = {\n  arrowPosition: w.CENTER,\n  moveBy: {\n    main: 4,\n    secondary: 0\n  },\n  theme: T.Dark,\n  position: b.positions.TOP,\n  justify: b.justifyTypes.CENTER,\n  hideDelay: 0,\n  showDelay: 300,\n  disableDialogSlide: !0,\n  animationType: c.EXPAND,\n  withoutDialog: !1,\n  containerSelector: \"#tooltips-container\",\n  tip: !0,\n  hideWhenReferenceHidden: !1,\n  modifiers: [],\n  showTrigger: b.hideShowTriggers.MOUSE_ENTER,\n  hideTrigger: b.hideShowTriggers.MOUSE_LEAVE,\n  showOnDialogEnter: !1,\n  referenceWrapperClassName: \"\",\n  addKeyboardHideShowTriggersByDefault: !1,\n  open: !1\n};\nexport { b as default };","map":{"version":3,"names":["j","lastTooltipHideTS","openTooltipsCount","b","h","g","e","o","i","n","renderTooltipContent","bind","getShowDelay","onTooltipShow","onTooltipHide","wasShown","E","component","condition","props","theme","includes","message","position","p","key","value","document","getElementById","querySelector","content","paddingSize","m","className","style","c","withMaxWidth","title","u","image","T","icon","s","d","l","createElement","r","f","tooltip","tooltipWithContent","y","a","t","src","alt","C","gap","gaps","XS","v","iconSize","clickable","Date","now","showDelay","immediateShowDelay","getTimeSinceLastTooltip","preventAnimation","justify","children","getContainer","tip","arrowClassName","id","forceRenderWithoutChildren","withoutDialog","Object","assign","S","D","TOOLTIP","startingEdge","tooltipClassName","arrow","animationType","EXPAND","onDialogDidHide","onDialogDidShow","getDynamicShowDelay","positions","hideShowTriggers","themes","animationTypes","justifyTypes","arrowPositions","w","defaultProps","arrowPosition","CENTER","moveBy","main","secondary","Dark","TOP","hideDelay","disableDialogSlide","containerSelector","hideWhenReferenceHidden","modifiers","showTrigger","MOUSE_ENTER","hideTrigger","MOUSE_LEAVE","showOnDialogEnter","referenceWrapperClassName","addKeyboardHideShowTriggersByDefault","open","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/Tooltip/Tooltip.tsx"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport { camelCase, isFunction } from \"lodash-es\";\nimport cx from \"classnames\";\nimport React, { CSSProperties, isValidElement, PureComponent, ReactElement } from \"react\";\nimport { Modifier } from \"react-popper\";\nimport Dialog from \"../Dialog/Dialog\";\nimport { AnimationType, BASE_SIZES_WITH_NONE, HideShowEvent, JustifyType } from \"../../constants\";\nimport { DialogPosition } from \"../../constants/positions\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport { TooltipArrowPosition, TooltipTheme } from \"./TooltipConstants\";\nimport { ElementContent } from \"../../types/ElementContent\";\nimport { MoveBy } from \"../../types/MoveBy\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport styles from \"./Tooltip.module.scss\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport { SubIcon } from \"../../types\";\nimport Icon from \"../Icon/Icon\";\nimport Flex from \"../Flex/Flex\";\nimport { warnDeprecated } from \"../../utils/warn-deprecated\";\n\nexport type TooltipProps = TooltipBaseProps & (TooltipWithChildrenProps | TooltipWithoutChildrenProps);\n\ninterface TooltipWithoutChildrenProps {\n  /**\n   * When true, the tooltip would be rendered on a Dialog without children\n   * Use case is currently for rendering Tipseen with floating prop\n   */\n  forceRenderWithoutChildren: boolean;\n  children?: ReactElement | Array<ReactElement>;\n}\n\ninterface TooltipWithChildrenProps {\n  forceRenderWithoutChildren?: boolean;\n  children: ReactElement | Array<ReactElement>;\n}\n\n// TODO TS-migration extend DialogProps, once Dialog is migrated to TS\ninterface TooltipBaseProps extends VibeComponentProps {\n  content: ElementContent;\n  style?: CSSProperties;\n  arrowPosition?: TooltipArrowPosition;\n  /** Class name for a tooltip's arrow */\n  arrowClassName?: string;\n  paddingSize?: keyof typeof BASE_SIZES_WITH_NONE;\n  /**\n   * How much to move the dialog in relative to children\n   * main is the axis in which the position is aligned to\n   * secondary is the vertical axes to the position\n   */\n  moveBy?: MoveBy;\n  theme?: TooltipTheme;\n  justify?: JustifyType;\n  getContainer?: () => HTMLElement;\n  /**\n   * how much delay should the Dialog wait until it should trigger the hide in MS\n   */\n  hideDelay?: number;\n  /**\n   * how much delay should the Dialog wait until it should trigger the show in MS\n   */\n  showDelay?: number;\n  disableDialogSlide?: boolean;\n  animationType?: AnimationType;\n  withoutDialog?: boolean;\n  /**\n   * the container selector in which to append the dialog\n   * for examples: \"body\" , \".my-class\", \"#my-id\"\n   */\n  containerSelector?: string;\n  /**\n   * With which delay tooltip is going to be shown\n   */\n  immediateShowDelay?: number;\n  /**\n   * when false, the arrow of the tooltip is hidden\n   */\n  tip?: boolean;\n  /**\n   * Show the Dialog when the children is mounting\n   */\n  shouldShowOnMount?: boolean;\n  hideWhenReferenceHidden?: boolean;\n  onTooltipHide?: () => void;\n  onTooltipShow?: () => void;\n  /**\n   * PopperJS Modifiers type\n   * https://popper.js.org/docs/v2/modifiers/\n   */\n  modifiers?: Array<Modifier<unknown>>;\n  /**\n   * Where the tooltip should be in reference to the children: Top, Left, Right, Bottom ...\n   */\n  position?: DialogPosition;\n  /**\n   * an array of hide/show trigger - Tooltip.hideShowTriggers\n   */\n  showTrigger?: HideShowEvent | Array<HideShowEvent>;\n  /**\n   * an array of hide/show trigger - Tooltip.hideShowTriggers\n   */\n  hideTrigger?: HideShowEvent | Array<HideShowEvent>;\n  /**\n   * If true, prevents open Tooltip from closing on mouseEnter and closes Tooltip, when mouse leaves it\n   */\n  showOnDialogEnter?: boolean;\n  /**\n   * A Classname to be added to <span> element which wraps the children\n   */\n  referenceWrapperClassName?: string;\n  /**\n   * Treats keyboard focus/blur events as mouse-enter/mouse-leave events\n   */\n  addKeyboardHideShowTriggersByDefault?: boolean;\n  /**\n   * set the state of the tooltip - open/close - controlled component\n   */\n  open?: boolean;\n  /**\n   * Overwrites z-index of the tooltip\n   */\n  zIndex?: number;\n  // TODO: make default next major\n  /**\n   * Limit tooltip to 240px\n   */\n  withMaxWidth?: boolean;\n  /**\n   * The title of the tooltip\n   */\n  title?: string;\n  /**\n   * The image of the tooltip\n   */\n  image?: string;\n  /**\n   * The icon of the tooltip next to the title\n   */\n  icon?: SubIcon;\n}\n// When last tooltip was shown in the last 1.5 second - the next tooltip will be shown immediately\nconst IMMEDIATE_SHOW_THRESHOLD_MS = 1500;\n\n// Shared state across multiple tooltip instances (i.e last tooltip shown time)\nconst globalState: { lastTooltipHideTS: number; openTooltipsCount: number } = {\n  lastTooltipHideTS: null,\n  openTooltipsCount: 0\n};\n\nexport default class Tooltip extends PureComponent<TooltipProps> {\n  wasShown: boolean;\n  static positions = DialogPosition;\n  static hideShowTriggers = HideShowEvent;\n  static themes = TooltipTheme;\n  static animationTypes = AnimationType;\n  static justifyTypes = JustifyType;\n  static arrowPositions = TooltipArrowPosition;\n  static defaultProps = {\n    arrowPosition: TooltipArrowPosition.CENTER,\n    moveBy: { main: 4, secondary: 0 },\n    theme: TooltipTheme.Dark,\n    position: Tooltip.positions.TOP,\n    justify: Tooltip.justifyTypes.CENTER,\n    hideDelay: 0,\n    showDelay: 300,\n    disableDialogSlide: true,\n    animationType: AnimationType.EXPAND,\n    withoutDialog: false,\n    containerSelector: \"#tooltips-container\",\n    tip: true,\n    hideWhenReferenceHidden: false,\n    modifiers: new Array<Modifier<unknown>>(),\n    showTrigger: Tooltip.hideShowTriggers.MOUSE_ENTER,\n    hideTrigger: Tooltip.hideShowTriggers.MOUSE_LEAVE,\n    showOnDialogEnter: false,\n    referenceWrapperClassName: \"\",\n    addKeyboardHideShowTriggersByDefault: false,\n    open: false\n  };\n  constructor(props: TooltipProps) {\n    super(props);\n    this.renderTooltipContent = this.renderTooltipContent.bind(this);\n    this.getShowDelay = this.getShowDelay.bind(this);\n    this.onTooltipShow = this.onTooltipShow.bind(this);\n    this.onTooltipHide = this.onTooltipHide.bind(this);\n\n    this.wasShown = false;\n    warnDeprecated({\n      component: \"Tooltip\",\n      condition: this.props.theme && ![\"primary\", \"dark\"].includes(this.props.theme),\n      message:\n        \"'theme' prop will be able to get only 'dark' and 'primary' in the upcoming major version. Please consider using these themes.\"\n    });\n    warnDeprecated({\n      component: \"Tooltip\",\n      condition: this.props.position && ![\"top\", \"left\", \"right\", \"bottom\"].includes(this.props.position),\n      message:\n        \"'position' prop will be able to get only 'top', 'bottom', 'left', and 'right' values in the upcoming major version. Please consider using these positions.\"\n    });\n  }\n\n  getContainer() {\n    return document.getElementById(\"tooltips-container\") || document.querySelector(\"body\");\n  }\n\n  renderTooltipContent() {\n    const { theme, content, paddingSize, className, style, withMaxWidth, title, image, icon } = this.props;\n    if (!content) {\n      // don't render empty tooltip\n      return null;\n    }\n    let contentValue;\n    if (isFunction(content)) {\n      contentValue = content();\n    } else if (isValidElement(content)) {\n      contentValue = content;\n    } else if (typeof content === \"string\" && content) {\n      contentValue = content;\n    }\n\n    if (!contentValue) {\n      return null;\n    }\n\n    if (title || image) {\n      return (\n        <div\n          style={style}\n          className={cx(\n            styles.tooltip,\n            styles.tooltipWithContent,\n            getStyle(styles, camelCase(theme)),\n            { [styles.withMaxWidth]: withMaxWidth },\n            className\n          )}\n        >\n          {image && <img className={styles.image} src={image} alt=\"\" />}\n          <div className={cx(styles.content, getStyle(styles, camelCase(\"padding-size-\" + paddingSize)))}>\n            {title && (\n              <Flex gap={Flex.gaps.XS}>\n                {icon && <Icon iconSize=\"20\" icon={icon} clickable={false} />}\n                <div className={styles.title}>{title}</div>\n              </Flex>\n            )}\n            {contentValue}\n          </div>\n        </div>\n      );\n    }\n\n    // TODO: remove in next major, use (title || image) variant instead\n    return (\n      <div\n        style={style}\n        className={cx(\n          styles.tooltip,\n          getStyle(styles, camelCase(theme)),\n          getStyle(styles, camelCase(\"padding-size-\" + paddingSize)),\n          { [styles.withMaxWidth]: withMaxWidth },\n          className\n        )}\n      >\n        {contentValue}\n      </div>\n    );\n  }\n\n  onTooltipShow() {\n    if (!this.wasShown) {\n      const { onTooltipShow } = this.props;\n      globalState.openTooltipsCount++;\n      this.wasShown = true;\n      onTooltipShow && onTooltipShow();\n    }\n  }\n\n  onTooltipHide() {\n    if (this.wasShown) {\n      const { onTooltipHide } = this.props;\n      globalState.lastTooltipHideTS = Date.now();\n      globalState.openTooltipsCount--;\n      this.wasShown = false;\n      onTooltipHide && onTooltipHide();\n    }\n  }\n\n  getTimeSinceLastTooltip() {\n    if (globalState.openTooltipsCount > 0) {\n      return 0;\n    }\n    return globalState.lastTooltipHideTS ? Date.now() - globalState.lastTooltipHideTS : Infinity;\n  }\n\n  getShowDelay() {\n    const { showDelay, immediateShowDelay } = this.props;\n    const timeSinceLastTooltip = this.getTimeSinceLastTooltip();\n    if ((immediateShowDelay === 0 || immediateShowDelay) && timeSinceLastTooltip < IMMEDIATE_SHOW_THRESHOLD_MS) {\n      // showing the tooltip immediately (without animation)\n      return {\n        showDelay: immediateShowDelay,\n        preventAnimation: true\n      };\n    }\n    return {\n      showDelay,\n      preventAnimation: false\n    };\n  }\n\n  render() {\n    const {\n      withoutDialog,\n      justify,\n      children,\n      forceRenderWithoutChildren,\n      getContainer,\n      theme,\n      paddingSize,\n      tip,\n      arrowClassName,\n      id,\n      \"data-testid\": dataTestId\n    } = this.props;\n\n    if (!children && !forceRenderWithoutChildren) {\n      return null;\n    }\n\n    if (withoutDialog) {\n      return this.renderTooltipContent();\n    }\n\n    const content = this.renderTooltipContent;\n    const dialogProps = {\n      ...this.props,\n      \"data-testid\": dataTestId || getTestId(ComponentDefaultTestId.TOOLTIP, id),\n      startingEdge: justify,\n      tooltip: tip,\n      content,\n      getContainer: getContainer || this.getContainer,\n      tooltipClassName: cx(\n        styles.arrow,\n        getStyle(styles, theme),\n        getStyle(styles, camelCase(\"padding-size-\" + paddingSize)),\n        arrowClassName\n      ),\n      animationType: AnimationType.EXPAND,\n      onDialogDidHide: this.onTooltipHide,\n      onDialogDidShow: this.onTooltipShow,\n      getDynamicShowDelay: this.getShowDelay\n    };\n    return <Dialog {...dialogProps}>{children}</Dialog>;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}