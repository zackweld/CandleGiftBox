{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n      label: 0,\n      sent: function () {\n        if (t[0] & 1) throw t[1];\n        return t[1];\n      },\n      trys: [],\n      ops: []\n    },\n    f,\n    y,\n    t,\n    g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n    while (g && (g = 0, op[0] && (_ = 0)), _) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n        case 7:\n          op = _.ops.pop();\n          _.trys.pop();\n          continue;\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n            _.ops.push(op);\n            break;\n          }\n          if (t[2]) _.ops.pop();\n          _.trys.pop();\n          continue;\n      }\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport * as React from 'react';\nimport convert from 'react-from-dom';\nimport { canUseDOM, isSupportedEnvironment, omit, randomString, STATUS } from './helpers';\nexport var cacheStore = Object.create(null);\nvar InlineSVG = /** @class */function (_super) {\n  __extends(InlineSVG, _super);\n  function InlineSVG(props) {\n    var _this = _super.call(this, props) || this;\n    Object.defineProperty(_this, \"hash\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(_this, \"isActive\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"isInitialized\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(_this, \"handleError\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (error) {\n        var onError = _this.props.onError;\n        var status = error.message === 'Browser does not support SVG' ? STATUS.UNSUPPORTED : STATUS.FAILED;\n        /* istanbul ignore else */\n        if (_this.isActive) {\n          _this.setState({\n            status: status\n          }, function () {\n            /* istanbul ignore else */\n            if (typeof onError === 'function') {\n              onError(error);\n            }\n          });\n        }\n      }\n    });\n    Object.defineProperty(_this, \"handleLoad\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function (content, hasCache) {\n        if (hasCache === void 0) {\n          hasCache = false;\n        }\n        /* istanbul ignore else */\n        if (_this.isActive) {\n          _this.setState({\n            content: content,\n            hasCache: hasCache,\n            status: STATUS.LOADED\n          }, _this.getElement);\n        }\n      }\n    });\n    Object.defineProperty(_this, \"request\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: function () {\n        return __awaiter(_this, void 0, void 0, function () {\n          var _a, cacheRequests, fetchOptions, src, response, contentType, _b, fileType_1, content, currentSrc, cache, error_1, cache;\n          return __generator(this, function (_c) {\n            switch (_c.label) {\n              case 0:\n                _a = this.props, cacheRequests = _a.cacheRequests, fetchOptions = _a.fetchOptions, src = _a.src;\n                if (cacheRequests) {\n                  cacheStore[src] = {\n                    content: '',\n                    status: STATUS.LOADING\n                  };\n                }\n                _c.label = 1;\n              case 1:\n                _c.trys.push([1, 4,, 5]);\n                return [4 /*yield*/, fetch(src, fetchOptions)];\n              case 2:\n                response = _c.sent();\n                contentType = response.headers.get('content-type');\n                _b = __read((contentType || '').split(/ ?; ?/), 1), fileType_1 = _b[0];\n                if (response.status > 299) {\n                  throw new Error('Not found');\n                }\n                if (!['image/svg+xml', 'text/plain'].some(function (d) {\n                  return fileType_1.includes(d);\n                })) {\n                  throw new Error(\"Content type isn't valid: \".concat(fileType_1));\n                }\n                return [4 /*yield*/, response.text()];\n              case 3:\n                content = _c.sent();\n                currentSrc = this.props.src;\n                // the current src don't match the previous one, skipping...\n                if (src !== currentSrc) {\n                  if (cacheStore[src].status === STATUS.LOADING) {\n                    delete cacheStore[src];\n                  }\n                  return [2 /*return*/];\n                }\n                this.handleLoad(content);\n                /* istanbul ignore else */\n                if (cacheRequests) {\n                  cache = cacheStore[src];\n                  /* istanbul ignore else */\n                  if (cache) {\n                    cache.content = content;\n                    cache.status = STATUS.LOADED;\n                  }\n                }\n                return [3 /*break*/, 5];\n              case 4:\n                error_1 = _c.sent();\n                this.handleError(error_1);\n                /* istanbul ignore else */\n                if (cacheRequests) {\n                  cache = cacheStore[src];\n                  /* istanbul ignore else */\n                  if (cache) {\n                    delete cacheStore[src];\n                  }\n                }\n                return [3 /*break*/, 5];\n              case 5:\n                return [2 /*return*/];\n            }\n          });\n        });\n      }\n    });\n    _this.state = {\n      content: '',\n      element: null,\n      hasCache: !!props.cacheRequests && !!cacheStore[props.src],\n      status: STATUS.IDLE\n    };\n    _this.hash = props.uniqueHash || randomString(8);\n    return _this;\n  }\n  Object.defineProperty(InlineSVG.prototype, \"componentDidMount\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.isActive = true;\n      if (!canUseDOM() || this.isInitialized) {\n        return;\n      }\n      var status = this.state.status;\n      var src = this.props.src;\n      try {\n        /* istanbul ignore else */\n        if (status === STATUS.IDLE) {\n          /* istanbul ignore else */\n          if (!isSupportedEnvironment()) {\n            throw new Error('Browser does not support SVG');\n          }\n          /* istanbul ignore else */\n          if (!src) {\n            throw new Error('Missing src');\n          }\n          this.load();\n        }\n      } catch (error) {\n        this.handleError(error);\n      }\n      this.isInitialized = true;\n    }\n  });\n  Object.defineProperty(InlineSVG.prototype, \"componentDidUpdate\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (previousProps, previousState) {\n      if (!canUseDOM()) {\n        return;\n      }\n      var _a = this.state,\n        hasCache = _a.hasCache,\n        status = _a.status;\n      var _b = this.props,\n        onLoad = _b.onLoad,\n        src = _b.src;\n      if (previousState.status !== STATUS.READY && status === STATUS.READY) {\n        /* istanbul ignore else */\n        if (onLoad) {\n          onLoad(src, hasCache);\n        }\n      }\n      if (previousProps.src !== src) {\n        if (!src) {\n          this.handleError(new Error('Missing src'));\n          return;\n        }\n        this.load();\n      }\n    }\n  });\n  Object.defineProperty(InlineSVG.prototype, \"componentWillUnmount\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      this.isActive = false;\n    }\n  });\n  Object.defineProperty(InlineSVG.prototype, \"getElement\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      try {\n        var node = this.getNode();\n        var element = convert(node);\n        if (!element || !React.isValidElement(element)) {\n          throw new Error('Could not convert the src to a React element');\n        }\n        this.setState({\n          element: element,\n          status: STATUS.READY\n        });\n      } catch (error) {\n        this.handleError(new Error(error.message));\n      }\n    }\n  });\n  Object.defineProperty(InlineSVG.prototype, \"getNode\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _a = this.props,\n        description = _a.description,\n        title = _a.title;\n      try {\n        var svgText = this.processSVG();\n        var node = convert(svgText, {\n          nodeOnly: true\n        });\n        if (!node || !(node instanceof SVGSVGElement)) {\n          throw new Error('Could not convert the src to a DOM Node');\n        }\n        var svg = this.updateSVGAttributes(node);\n        if (description) {\n          var originalDesc = svg.querySelector('desc');\n          if (originalDesc && originalDesc.parentNode) {\n            originalDesc.parentNode.removeChild(originalDesc);\n          }\n          var descElement = document.createElementNS('http://www.w3.org/2000/svg', 'desc');\n          descElement.innerHTML = description;\n          svg.prepend(descElement);\n        }\n        if (typeof title !== 'undefined') {\n          var originalTitle = svg.querySelector('title');\n          if (originalTitle && originalTitle.parentNode) {\n            originalTitle.parentNode.removeChild(originalTitle);\n          }\n          if (title) {\n            var titleElement = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n            titleElement.innerHTML = title;\n            svg.prepend(titleElement);\n          }\n        }\n        return svg;\n      } catch (error) {\n        return this.handleError(error);\n      }\n    }\n  });\n  Object.defineProperty(InlineSVG.prototype, \"load\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _this = this;\n      /* istanbul ignore else */\n      if (this.isActive) {\n        this.setState({\n          content: '',\n          element: null,\n          hasCache: false,\n          status: STATUS.LOADING\n        }, function () {\n          var _a = _this.props,\n            cacheRequests = _a.cacheRequests,\n            src = _a.src;\n          var cache = cacheRequests && cacheStore[src];\n          if (cache && cache.status === STATUS.LOADED) {\n            _this.handleLoad(cache.content, true);\n            return;\n          }\n          var dataURI = src.match(/^data:image\\/svg[^,]*?(;base64)?,(.*)/u);\n          var inlineSrc;\n          if (dataURI) {\n            inlineSrc = dataURI[1] ? window.atob(dataURI[2]) : decodeURIComponent(dataURI[2]);\n          } else if (src.includes('<svg')) {\n            inlineSrc = src;\n          }\n          if (inlineSrc) {\n            _this.handleLoad(inlineSrc);\n            return;\n          }\n          _this.request();\n        });\n      }\n    }\n  });\n  Object.defineProperty(InlineSVG.prototype, \"processSVG\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var content = this.state.content;\n      var preProcessor = this.props.preProcessor;\n      if (preProcessor) {\n        return preProcessor(content);\n      }\n      return content;\n    }\n  });\n  Object.defineProperty(InlineSVG.prototype, \"updateSVGAttributes\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function (node) {\n      var _this = this;\n      var _a = this.props,\n        _b = _a.baseURL,\n        baseURL = _b === void 0 ? '' : _b,\n        uniquifyIDs = _a.uniquifyIDs;\n      var replaceableAttributes = ['id', 'href', 'xlink:href', 'xlink:role', 'xlink:arcrole'];\n      var linkAttributes = ['href', 'xlink:href'];\n      var isDataValue = function (name, value) {\n        return linkAttributes.includes(name) && (value ? !value.includes('#') : false);\n      };\n      if (!uniquifyIDs) {\n        return node;\n      }\n      __spreadArray([], __read(node.children), false).forEach(function (d) {\n        if (d.attributes && d.attributes.length) {\n          var attributes_1 = Object.values(d.attributes).map(function (a) {\n            var attribute = a;\n            var match = a.value.match(/url\\((.*?)\\)/);\n            if (match && match[1]) {\n              attribute.value = a.value.replace(match[0], \"url(\".concat(baseURL).concat(match[1], \"__\").concat(_this.hash, \")\"));\n            }\n            return attribute;\n          });\n          replaceableAttributes.forEach(function (r) {\n            var attribute = attributes_1.find(function (a) {\n              return a.name === r;\n            });\n            if (attribute && !isDataValue(r, attribute.value)) {\n              attribute.value = \"\".concat(attribute.value, \"__\").concat(_this.hash);\n            }\n          });\n        }\n        if (d.children.length) {\n          return _this.updateSVGAttributes(d);\n        }\n        return d;\n      });\n      return node;\n    }\n  });\n  Object.defineProperty(InlineSVG.prototype, \"render\", {\n    enumerable: false,\n    configurable: true,\n    writable: true,\n    value: function () {\n      var _a = this.state,\n        element = _a.element,\n        status = _a.status;\n      var _b = this.props,\n        _c = _b.children,\n        children = _c === void 0 ? null : _c,\n        innerRef = _b.innerRef,\n        _d = _b.loader,\n        loader = _d === void 0 ? null : _d;\n      var elementProps = omit(this.props, 'baseURL', 'cacheRequests', 'children', 'description', 'fetchOptions', 'innerRef', 'loader', 'onError', 'onLoad', 'preProcessor', 'src', 'title', 'uniqueHash', 'uniquifyIDs');\n      if (!canUseDOM()) {\n        return loader;\n      }\n      if (element) {\n        return React.cloneElement(element, __assign({\n          ref: innerRef\n        }, elementProps));\n      }\n      if ([STATUS.UNSUPPORTED, STATUS.FAILED].includes(status)) {\n        return children;\n      }\n      return loader;\n    }\n  });\n  Object.defineProperty(InlineSVG, \"defaultProps\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: {\n      cacheRequests: true,\n      uniquifyIDs: false\n    }\n  });\n  return InlineSVG;\n}(React.PureComponent);\nexport default InlineSVG;\nexport * from './types';","map":{"version":3,"names":["React","convert","canUseDOM","isSupportedEnvironment","omit","randomString","STATUS","cacheStore","Object","create","InlineSVG","_super","__extends","props","_this","call","defineProperty","value","error","onError","status","message","UNSUPPORTED","FAILED","isActive","setState","content","hasCache","LOADED","getElement","__awaiter","_a","cacheRequests","fetchOptions","src","LOADING","fetch","response","_c","sent","contentType","headers","get","_b","__read","split","fileType_1","Error","some","d","includes","concat","text","currentSrc","handleLoad","cache","handleError","error_1","state","element","IDLE","hash","uniqueHash","isInitialized","load","previousProps","previousState","onLoad","READY","node","getNode","isValidElement","description","title","svgText","processSVG","nodeOnly","SVGSVGElement","svg","updateSVGAttributes","originalDesc","querySelector","parentNode","removeChild","descElement","document","createElementNS","innerHTML","prepend","originalTitle","titleElement","dataURI","match","inlineSrc","window","atob","decodeURIComponent","request","preProcessor","baseURL","uniquifyIDs","replaceableAttributes","linkAttributes","isDataValue","name","__spreadArray","children","forEach","attributes","length","attributes_1","values","map","a","attribute","replace","r","find","innerRef","_d","loader","elementProps","cloneElement","__assign","ref","PureComponent"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/react-inlinesvg/src/index.tsx"],"sourcesContent":["import * as React from 'react';\nimport convert from 'react-from-dom';\n\nimport { canUseDOM, isSupportedEnvironment, omit, randomString, STATUS } from './helpers';\nimport { FetchError, Props, State, Status, StorageItem } from './types';\n\nexport const cacheStore: { [key: string]: StorageItem } = Object.create(null);\n\nexport default class InlineSVG extends React.PureComponent<Props, State> {\n  private readonly hash: string;\n  private isActive = false;\n  private isInitialized = false;\n\n  public static defaultProps = {\n    cacheRequests: true,\n    uniquifyIDs: false,\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      content: '',\n      element: null,\n      hasCache: !!props.cacheRequests && !!cacheStore[props.src],\n      status: STATUS.IDLE,\n    };\n\n    this.hash = props.uniqueHash || randomString(8);\n  }\n\n  public componentDidMount(): void {\n    this.isActive = true;\n\n    if (!canUseDOM() || this.isInitialized) {\n      return;\n    }\n\n    const { status } = this.state;\n    const { src } = this.props;\n\n    try {\n      /* istanbul ignore else */\n      if (status === STATUS.IDLE) {\n        /* istanbul ignore else */\n        if (!isSupportedEnvironment()) {\n          throw new Error('Browser does not support SVG');\n        }\n\n        /* istanbul ignore else */\n        if (!src) {\n          throw new Error('Missing src');\n        }\n\n        this.load();\n      }\n    } catch (error: any) {\n      this.handleError(error);\n    }\n\n    this.isInitialized = true;\n  }\n\n  public componentDidUpdate(previousProps: Props, previousState: State): void {\n    if (!canUseDOM()) {\n      return;\n    }\n\n    const { hasCache, status } = this.state;\n    const { onLoad, src } = this.props;\n\n    if (previousState.status !== STATUS.READY && status === STATUS.READY) {\n      /* istanbul ignore else */\n      if (onLoad) {\n        onLoad(src, hasCache);\n      }\n    }\n\n    if (previousProps.src !== src) {\n      if (!src) {\n        this.handleError(new Error('Missing src'));\n\n        return;\n      }\n\n      this.load();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.isActive = false;\n  }\n\n  private getElement() {\n    try {\n      const node = this.getNode() as Node;\n      const element = convert(node);\n\n      if (!element || !React.isValidElement(element)) {\n        throw new Error('Could not convert the src to a React element');\n      }\n\n      this.setState({\n        element,\n        status: STATUS.READY,\n      });\n    } catch (error: any) {\n      this.handleError(new Error(error.message));\n    }\n  }\n\n  private getNode() {\n    const { description, title } = this.props;\n\n    try {\n      const svgText = this.processSVG();\n      const node = convert(svgText, { nodeOnly: true });\n\n      if (!node || !(node instanceof SVGSVGElement)) {\n        throw new Error('Could not convert the src to a DOM Node');\n      }\n\n      const svg = this.updateSVGAttributes(node);\n\n      if (description) {\n        const originalDesc = svg.querySelector('desc');\n\n        if (originalDesc && originalDesc.parentNode) {\n          originalDesc.parentNode.removeChild(originalDesc);\n        }\n\n        const descElement = document.createElementNS('http://www.w3.org/2000/svg', 'desc');\n\n        descElement.innerHTML = description;\n        svg.prepend(descElement);\n      }\n\n      if (typeof title !== 'undefined') {\n        const originalTitle = svg.querySelector('title');\n\n        if (originalTitle && originalTitle.parentNode) {\n          originalTitle.parentNode.removeChild(originalTitle);\n        }\n\n        if (title) {\n          const titleElement = document.createElementNS('http://www.w3.org/2000/svg', 'title');\n\n          titleElement.innerHTML = title;\n          svg.prepend(titleElement);\n        }\n      }\n\n      return svg;\n    } catch (error: any) {\n      return this.handleError(error);\n    }\n  }\n\n  private handleError = (error: Error | FetchError) => {\n    const { onError } = this.props;\n    const status =\n      error.message === 'Browser does not support SVG' ? STATUS.UNSUPPORTED : STATUS.FAILED;\n\n    /* istanbul ignore else */\n    if (this.isActive) {\n      this.setState({ status }, () => {\n        /* istanbul ignore else */\n        if (typeof onError === 'function') {\n          onError(error);\n        }\n      });\n    }\n  };\n\n  private handleLoad = (content: string, hasCache = false) => {\n    /* istanbul ignore else */\n    if (this.isActive) {\n      this.setState(\n        {\n          content,\n          hasCache,\n          status: STATUS.LOADED,\n        },\n        this.getElement,\n      );\n    }\n  };\n\n  private load() {\n    /* istanbul ignore else */\n    if (this.isActive) {\n      this.setState(\n        {\n          content: '',\n          element: null,\n          hasCache: false,\n          status: STATUS.LOADING,\n        },\n        () => {\n          const { cacheRequests, src } = this.props;\n          const cache = cacheRequests && cacheStore[src];\n\n          if (cache && cache.status === STATUS.LOADED) {\n            this.handleLoad(cache.content, true);\n\n            return;\n          }\n\n          const dataURI = src.match(/^data:image\\/svg[^,]*?(;base64)?,(.*)/u);\n          let inlineSrc;\n\n          if (dataURI) {\n            inlineSrc = dataURI[1] ? window.atob(dataURI[2]) : decodeURIComponent(dataURI[2]);\n          } else if (src.includes('<svg')) {\n            inlineSrc = src;\n          }\n\n          if (inlineSrc) {\n            this.handleLoad(inlineSrc);\n\n            return;\n          }\n\n          this.request();\n        },\n      );\n    }\n  }\n\n  private processSVG() {\n    const { content } = this.state;\n    const { preProcessor } = this.props;\n\n    if (preProcessor) {\n      return preProcessor(content);\n    }\n\n    return content;\n  }\n\n  private request = async () => {\n    const { cacheRequests, fetchOptions, src } = this.props;\n\n    if (cacheRequests) {\n      cacheStore[src] = { content: '', status: STATUS.LOADING };\n    }\n\n    try {\n      const response = await fetch(src, fetchOptions);\n      const contentType = response.headers.get('content-type');\n      const [fileType] = (contentType || '').split(/ ?; ?/);\n\n      if (response.status > 299) {\n        throw new Error('Not found');\n      }\n\n      if (!['image/svg+xml', 'text/plain'].some(d => fileType.includes(d))) {\n        throw new Error(`Content type isn't valid: ${fileType}`);\n      }\n\n      const content: string = await response.text();\n      const { src: currentSrc } = this.props;\n\n      // the current src don't match the previous one, skipping...\n      if (src !== currentSrc) {\n        if (cacheStore[src].status === STATUS.LOADING) {\n          delete cacheStore[src];\n        }\n\n        return;\n      }\n\n      this.handleLoad(content);\n\n      /* istanbul ignore else */\n      if (cacheRequests) {\n        const cache = cacheStore[src];\n\n        /* istanbul ignore else */\n        if (cache) {\n          cache.content = content;\n          cache.status = STATUS.LOADED;\n        }\n      }\n    } catch (error: any) {\n      this.handleError(error);\n\n      /* istanbul ignore else */\n      if (cacheRequests) {\n        const cache = cacheStore[src];\n\n        /* istanbul ignore else */\n        if (cache) {\n          delete cacheStore[src];\n        }\n      }\n    }\n  };\n\n  private updateSVGAttributes(node: SVGSVGElement): SVGSVGElement {\n    const { baseURL = '', uniquifyIDs } = this.props;\n    const replaceableAttributes = ['id', 'href', 'xlink:href', 'xlink:role', 'xlink:arcrole'];\n    const linkAttributes = ['href', 'xlink:href'];\n    const isDataValue = (name: string, value: string) =>\n      linkAttributes.includes(name) && (value ? !value.includes('#') : false);\n\n    if (!uniquifyIDs) {\n      return node;\n    }\n\n    [...node.children].forEach(d => {\n      if (d.attributes && d.attributes.length) {\n        const attributes = Object.values(d.attributes).map(a => {\n          const attribute = a;\n          const match = a.value.match(/url\\((.*?)\\)/);\n\n          if (match && match[1]) {\n            attribute.value = a.value.replace(match[0], `url(${baseURL}${match[1]}__${this.hash})`);\n          }\n\n          return attribute;\n        });\n\n        replaceableAttributes.forEach(r => {\n          const attribute = attributes.find(a => a.name === r);\n\n          if (attribute && !isDataValue(r, attribute.value)) {\n            attribute.value = `${attribute.value}__${this.hash}`;\n          }\n        });\n      }\n\n      if (d.children.length) {\n        return this.updateSVGAttributes(d as SVGSVGElement);\n      }\n\n      return d;\n    });\n\n    return node;\n  }\n\n  public render(): React.ReactNode {\n    const { element, status } = this.state;\n    const { children = null, innerRef, loader = null } = this.props;\n    const elementProps = omit(\n      this.props,\n      'baseURL',\n      'cacheRequests',\n      'children',\n      'description',\n      'fetchOptions',\n      'innerRef',\n      'loader',\n      'onError',\n      'onLoad',\n      'preProcessor',\n      'src',\n      'title',\n      'uniqueHash',\n      'uniquifyIDs',\n    );\n\n    if (!canUseDOM()) {\n      return loader;\n    }\n\n    if (element) {\n      return React.cloneElement(element as React.ReactElement, { ref: innerRef, ...elementProps });\n    }\n\n    if (([STATUS.UNSUPPORTED, STATUS.FAILED] as Status[]).includes(status)) {\n      return children;\n    }\n\n    return loader;\n  }\n}\n\nexport * from './types';\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}