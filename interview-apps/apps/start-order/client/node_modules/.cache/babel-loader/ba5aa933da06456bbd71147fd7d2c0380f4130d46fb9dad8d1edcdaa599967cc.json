{"ast":null,"code":"import { defineProperty as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport t from \"classnames\";\nimport a, { forwardRef as o, useRef as i, useCallback as l, useMemo as s } from \"react\";\nimport r from \"../../hooks/useMergeRef.js\";\nimport n from \"../Clickable/Clickable.js\";\nimport d from \"../Text/Text.js\";\nimport { backwardCompatibilityForProperties as m } from \"../../helpers/backwardCompatibilityForProperties.js\";\nimport c from \"../Tooltip/Tooltip.js\";\nimport { getTestId as p, ComponentDefaultTestId as u } from \"../../tests/testIds.js\";\nimport f from \"./RadioButton.module.scss.js\";\nvar b = o(function (o, b) {\n  var v = o.className,\n    C = o.componentClassName,\n    T = o.text,\n    N = void 0 === T ? \"\" : T,\n    h = o.value,\n    k = void 0 === h ? \"\" : h,\n    j = o.name,\n    E = void 0 === j ? \"\" : j,\n    O = o.labelClassName,\n    B = o.radioButtonClassName,\n    R = o.disabled,\n    _ = void 0 !== R && R,\n    x = o.autoFocus,\n    A = o.disabledReason,\n    I = o.defaultChecked,\n    y = void 0 !== I && I,\n    g = o.children,\n    L = o.onSelect,\n    D = o.checked,\n    F = o.retainChildClick,\n    P = void 0 === F || F,\n    U = o.childrenTabIndex,\n    w = void 0 === U ? \"0\" : U,\n    H = o.noLabelAnimation,\n    M = void 0 !== H && H,\n    S = o.id,\n    X = o[\"data-testid\"],\n    q = i(),\n    z = r(b, q),\n    G = m([v, C]),\n    J = l(function () {\n      !_ && P && (q.current && (q.current.checked = !0), L && L(null));\n    }, [L, q, _, P]),\n    K = s(function () {\n      return void 0 !== D ? {\n        checked: D\n      } : {\n        defaultChecked: y\n      };\n    }, [D, y]);\n  return a.createElement(c, {\n    content: _ ? A : null\n  }, a.createElement(\"label\", {\n    \"data-testid\": X || p(u.RADIO_BUTTON, S),\n    className: t(f.radioButton, G, e(e({}, f.disabled, _), \"disabled\", _))\n  }, a.createElement(\"span\", {\n    className: t(f.inputContainer)\n  }, a.createElement(\"input\", Object.assign({\n    className: t(f.input),\n    type: \"radio\",\n    value: k,\n    name: E,\n    autoFocus: x,\n    disabled: _\n  }, K, {\n    onChange: L,\n    ref: z\n  })), a.createElement(\"span\", {\n    \"data-testid\": p(u.RADIO_BUTTON_CONTROL, S),\n    className: t(f.control, B, e({}, f.labelAnimation, !M))\n  })), N && a.createElement(d, {\n    element: \"span\",\n    type: d.types.TEXT2,\n    className: O,\n    \"data-testid\": p(u.RADIO_BUTTON_LABEL, S)\n  }, N), g && a.createElement(n, {\n    onClick: J,\n    tabIndex: w\n  }, g)));\n});\nexport { b as default };","map":{"version":3,"names":["b","o","v","className","C","componentClassName","T","text","N","h","value","k","j","name","E","O","labelClassName","B","radioButtonClassName","R","disabled","_","x","autoFocus","A","disabledReason","I","defaultChecked","y","g","children","L","onSelect","D","checked","F","retainChildClick","P","U","childrenTabIndex","w","H","noLabelAnimation","M","S","id","X","q","i","z","r","G","m","J","l","current","K","s","a","createElement","c","content","p","u","RADIO_BUTTON","t","f","radioButton","e","inputContainer","Object","assign","input","type","onChange","ref","RADIO_BUTTON_CONTROL","control","labelAnimation","d","element","types","TEXT2","RADIO_BUTTON_LABEL","n","onClick","tabIndex","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/RadioButton/RadioButton.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { forwardRef, useCallback, useMemo, useRef } from \"react\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport Clickable from \"../Clickable/Clickable\";\nimport Text from \"../Text/Text\";\nimport { backwardCompatibilityForProperties } from \"../../helpers/backwardCompatibilityForProperties\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport VibeComponent from \"../../types/VibeComponent\";\nimport Tooltip from \"../Tooltip/Tooltip\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport styles from \"./RadioButton.module.scss\";\n\nexport interface RadioButtonProps extends VibeComponentProps {\n  /**  class to be added to wrapping component */\n  className?: string;\n  /**\n   * @deprecated - use className instead\n   */\n  componentClassName?: string;\n  /** class to add to the  text/label */\n  labelClassName?: string;\n  /** class to be added to the radiobutton */\n  radioButtonClassName?: string;\n  /** text value */\n  text?: string;\n  /** The input control's value. When specified in the HTML, this is the initial value, and from then on it can be altered or retrieved at any time using JavaScript to access the respective HTMLInputElement object's value property. The value attribute is always optional, though should be considered mandatory for checkbox, radio, and hidden.l */\n  value?: string;\n  /** A string specifying a name for the input control. This name is submitted along with the control's value when the form data is submitted. */\n  name?: string;\n  /** is autoFocus */\n  autoFocus?: boolean;\n  /** is disabled */\n  disabled?: boolean;\n  /** why the input is disabled */\n  disabledReason?: string;\n  /** default checked value*/\n  defaultChecked?: boolean;\n  children?: React.ReactNode;\n  /** callback function when value changed */\n  onSelect?: (event: React.ChangeEvent<HTMLInputElement | null>) => void;\n  /** controlled the radio button state */\n  checked?: boolean;\n  /** react to click on children */\n  retainChildClick?: boolean;\n  /** add tab index to the children */\n  childrenTabIndex?: string;\n  /** disabled animation */\n  noLabelAnimation?: boolean;\n}\n\nconst RadioButton: VibeComponent<RadioButtonProps, HTMLElement> & object = forwardRef(\n  (\n    {\n      className,\n      // Backward compatibility for props naming\n      componentClassName,\n      text = \"\",\n      value = \"\",\n      name = \"\",\n      /**\n       * Radio button label class name\n       */\n      labelClassName,\n      /**\n       * Radio button marker class name\n       */\n      radioButtonClassName,\n      disabled = false,\n      autoFocus,\n      disabledReason,\n      defaultChecked = false,\n      children,\n      onSelect,\n      checked,\n      retainChildClick = true,\n      childrenTabIndex = \"0\",\n      noLabelAnimation = false,\n      id,\n      \"data-testid\": dataTestId\n    },\n    ref: React.ForwardedRef<HTMLInputElement>\n  ) => {\n    const inputRef = useRef<HTMLInputElement | null>();\n    const mergedRef = useMergeRef(ref, inputRef);\n    const overrideClassName = backwardCompatibilityForProperties([className, componentClassName]);\n\n    const onChildClick = useCallback(() => {\n      if (disabled || !retainChildClick) return;\n      if (inputRef.current) {\n        inputRef.current.checked = true;\n      }\n      if (onSelect) {\n        onSelect(null);\n      }\n    }, [onSelect, inputRef, disabled, retainChildClick]);\n\n    const checkedProps = useMemo(() => {\n      if (checked !== undefined) {\n        return { checked };\n      }\n      return { defaultChecked };\n    }, [checked, defaultChecked]);\n\n    const tooltipContent = disabled ? disabledReason : null;\n\n    return (\n      <Tooltip content={tooltipContent}>\n        <label\n          data-testid={dataTestId || getTestId(ComponentDefaultTestId.RADIO_BUTTON, id)}\n          className={cx(styles.radioButton, overrideClassName, {\n            [styles.disabled]: disabled,\n            disabled: disabled\n          })}\n        >\n          <span className={cx(styles.inputContainer)}>\n            <input\n              className={cx(styles.input)}\n              type=\"radio\"\n              value={value}\n              name={name}\n              autoFocus={autoFocus}\n              disabled={disabled}\n              {...checkedProps}\n              onChange={onSelect}\n              ref={mergedRef}\n            />\n            <span\n              data-testid={getTestId(ComponentDefaultTestId.RADIO_BUTTON_CONTROL, id)}\n              className={cx(styles.control, radioButtonClassName, {\n                [styles.labelAnimation]: !noLabelAnimation\n              })}\n            />\n          </span>\n          {text && (\n            <Text\n              element=\"span\"\n              type={Text.types.TEXT2}\n              className={labelClassName}\n              data-testid={getTestId(ComponentDefaultTestId.RADIO_BUTTON_LABEL, id)}\n            >\n              {text}\n            </Text>\n          )}\n          {children && (\n            <Clickable onClick={onChildClick} tabIndex={childrenTabIndex}>\n              {children}\n            </Clickable>\n          )}\n        </label>\n      </Tooltip>\n    );\n  }\n);\n\nexport default RadioButton;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}