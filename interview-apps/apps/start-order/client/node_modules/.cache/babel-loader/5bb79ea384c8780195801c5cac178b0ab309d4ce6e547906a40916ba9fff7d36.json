{"ast":null,"code":"import { defineProperty as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport t from \"./ToggleText.js\";\nimport s from \"classnames\";\nimport r from \"react\";\nimport l from \"./MockToggle.module.scss.js\";\nimport { getTestId as o } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as a } from \"../../tests/constants.js\";\nimport { getStyle as m } from \"../../helpers/typesciptCssModulesHelper.js\";\nvar d = function (d) {\n  var i = d.areLabelsHidden,\n    n = d.checked,\n    c = d.onOverrideText,\n    p = d.className,\n    f = d.selectedClassName,\n    u = d.disabled,\n    g = d.size,\n    v = void 0 === g ? \"medium\" : g;\n  return r.createElement(r.Fragment, null, i ? null : r.createElement(t, {\n    disabled: u\n  }, d.offOverrideText), r.createElement(\"div\", {\n    className: s(l.toggle, m(l, v), p, e(e(e({}, s(l.selected, f), n), l.notSelected, !n), l.disabled, u)),\n    \"aria-hidden\": \"true\",\n    \"data-testid\": o(a.TOGGLE)\n  }), i ? null : r.createElement(t, {\n    disabled: u\n  }, c));\n};\nexport { d as MockToggle };","map":{"version":3,"names":["d","MockToggle","i","areLabelsHidden","n","checked","c","onOverrideText","p","className","f","selectedClassName","u","disabled","g","size","v","r","createElement","Fragment","t","offOverrideText","s","l","toggle","m","e","selected","notSelected","o","a","TOGGLE"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/Toggle/MockToggle.tsx"],"sourcesContent":["import ToggleText from \"./ToggleText\";\nimport cx from \"classnames\";\nimport React, { FC } from \"react\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport styles from \"./MockToggle.module.scss\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { Sizes } from \"./Toggle.types\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\n\nexport interface MockToggleProps extends VibeComponentProps {\n  areLabelsHidden?: boolean;\n  checked?: boolean;\n  offOverrideText?: string;\n  onOverrideText?: string;\n  selectedClassName?: string;\n  disabled: boolean;\n  size?: Sizes;\n}\n\nexport const MockToggle: FC<MockToggleProps> = ({\n  areLabelsHidden,\n  checked,\n  offOverrideText,\n  onOverrideText,\n  className,\n  selectedClassName,\n  disabled,\n  size = \"medium\"\n}) => (\n  <>\n    {areLabelsHidden ? null : <ToggleText disabled={disabled}>{offOverrideText}</ToggleText>}\n    <div\n      className={cx(styles.toggle, getStyle(styles, size), className, {\n        [cx(styles.selected, selectedClassName)]: checked,\n        [styles.notSelected]: !checked,\n        [styles.disabled]: disabled\n      })}\n      aria-hidden=\"true\"\n      data-testid={getTestId(ComponentDefaultTestId.TOGGLE)}\n    />\n    {areLabelsHidden ? null : <ToggleText disabled={disabled}>{onOverrideText}</ToggleText>}\n  </>\n);\n"],"mappings":";;;;;;;;IAoBaA,CAAA,GAAkC,SAAAC,CAAxBD,CAAA;EAAA,IACrBE,CAAA,GAAeF,CAAA,CAAfG,eAAA;IACAC,CAAA,GAAOJ,CAAA,CAAPK,OAAA;IAEAC,CAAA,GAAcN,CAAA,CAAdO,cAAA;IACAC,CAAA,GAASR,CAAA,CAATS,SAAA;IACAC,CAAA,GAAiBV,CAAA,CAAjBW,iBAAA;IACAC,CAAA,GAAQZ,CAAA,CAARa,QAAA;IAAQC,CAAA,GAAAd,CAAA,CACRe,IAAA;IAAAC,CAAA,QAAO,MAAHF,CAAA,GAAG,WAAQA,CAAA;EAAA,OAEfG,CAAA,CAAAC,aAAA,CAAAD,CAAA,CAAAE,QAAA,QACGjB,CAAA,GAAkB,OAAOe,CAAA,CAACC,aAAA,CAAAE,CAAA;IAAWP,QAAA,EAAUD;EAAA,GARnCZ,CAAA,CAAfqB,eAAA,GASEJ,CAAA,CAAAC,aAAA;IACET,SAAA,EAAWa,CAAA,CAAGC,CAAA,CAAOC,MAAA,EAAQC,CAAA,CAASF,CAAA,EAAQP,CAAA,GAAOR,CAAA,EAASkB,CAAA,CAAAA,CAAA,CAAAA,CAAA,CAC3D,IAAAJ,CAAA,CAAGC,CAAA,CAAOI,QAAA,EAAUjB,CAAA,GAAqBN,CAAA,GACzCmB,CAAA,CAAOK,WAAA,GAAexB,CAAA,GACtBmB,CAAA,CAAOV,QAAA,EAAWD,CAAA;IACnB,eACU;IACC,eAAAiB,CAAA,CAAUC,CAAA,CAAuBC,MAAA;EAAA,IAE/C7B,CAAA,GAAkB,OAAOe,CAAA,CAACC,aAAA,CAAAE,CAAA,EAAW;IAAAP,QAAA,EAAUD;EAAA,GAAWN,CAAA,EAC1D;AAAA;AAAA,SAAAN,CAAA,IAAAC,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}