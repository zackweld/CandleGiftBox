{"ast":null,"code":"import { useRef as i, useCallback as n, useMemo as o } from \"react\";\nfunction t(t) {\n  var r = t.onFocusWithin,\n    s = t.onFocusWithinChange,\n    u = t.isDisabled,\n    c = t.onBlurWithin,\n    e = i({\n      isFocusWithin: !1\n    }).current,\n    h = n(function (i) {\n      e.isFocusWithin || (r && r(i), s && s(!0), e.isFocusWithin = !0);\n    }, [r, s, e]),\n    W = n(function (i) {\n      e.isFocusWithin && !i.currentTarget.contains(i.relatedTarget) && (c && c(i), s && s(!1), e.isFocusWithin = !1);\n    }, [c, s, e]),\n    a = o(function () {\n      return u ? {\n        focusWithinProps: {}\n      } : {};\n    }, [u]);\n  return u ? a : {\n    focusWithinProps: {\n      onFocus: h,\n      onBlur: W\n    }\n  };\n}\nexport { t as useFocusWithin };","map":{"version":3,"names":["t","r","onFocusWithin","s","onFocusWithinChange","u","isDisabled","c","onBlurWithin","e","i","isFocusWithin","current","h","n","W","currentTarget","contains","relatedTarget","a","o","focusWithinProps","onFocus","onBlur","useFocusWithin"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/hooks/useFocusWithin.ts"],"sourcesContent":["import { FocusEvent, useCallback, useMemo, useRef } from \"react\";\n\ntype Result = {\n  focusWithinProps?: {\n    onFocus?: (e: FocusEvent) => void;\n    onBlur?: (e: FocusEvent) => void;\n  };\n};\n\nexport function useFocusWithin({\n  onFocusWithin,\n  onFocusWithinChange,\n  isDisabled,\n  onBlurWithin\n}: {\n  onFocusWithin?: (event: FocusEvent) => void;\n  onBlurWithin?: (event: FocusEvent) => void;\n  onFocusWithinChange?: (isWithinChange: boolean) => void;\n  isDisabled?: boolean;\n}): Result {\n  const state = useRef({\n    isFocusWithin: false\n  }).current;\n\n  const onFocus = useCallback(\n    (e: FocusEvent) => {\n      if (!state.isFocusWithin) {\n        if (onFocusWithin) {\n          onFocusWithin(e);\n        }\n\n        if (onFocusWithinChange) {\n          onFocusWithinChange(true);\n        }\n\n        state.isFocusWithin = true;\n      }\n    },\n    [onFocusWithin, onFocusWithinChange, state]\n  );\n\n  const onBlur = useCallback(\n    (e: FocusEvent) => {\n      // We don't want to trigger onBlurWithin and then immediately onFocusWithin again\n      // when moving focus inside the element. Only trigger if the currentTarget doesn't\n      // include the relatedTarget (where focus is moving).\n      const currentTarget = e.currentTarget;\n      if (state.isFocusWithin && !currentTarget.contains(e.relatedTarget)) {\n        if (onBlurWithin) {\n          onBlurWithin(e);\n        }\n\n        if (onFocusWithinChange) {\n          onFocusWithinChange(false);\n        }\n\n        state.isFocusWithin = false;\n      }\n    },\n    [onBlurWithin, onFocusWithinChange, state]\n  );\n\n  const isDisabledReturnValue = useMemo(() => {\n    if (!isDisabled) return {};\n    return { focusWithinProps: {} };\n  }, [isDisabled]);\n\n  if (isDisabled) {\n    return isDisabledReturnValue;\n  }\n\n  return {\n    focusWithinProps: {\n      onFocus: onFocus,\n      onBlur: onBlur\n    }\n  };\n}\n"],"mappings":";AASM,SAAUA,EAAcA,CAAA;EAU7B,IATCC,CAAA,GAAaD,CAAA,CAAbE,aAAA;IACAC,CAAA,GAAmBH,CAAA,CAAnBI,mBAAA;IACAC,CAAA,GAAUL,CAAA,CAAVM,UAAA;IACAC,CAAA,GAAYP,CAAA,CAAZQ,YAAA;IAOMC,CAAA,GAAQC,CAAA,CAAO;MACnBC,aAAA,GAAe;IAAA,GACdC,OAAA;IAEGC,CAAA,GAAUC,CAAA,CACd,UAACJ,CAAA;MACMD,CAAA,CAAME,aAAA,KACLV,CAAA,IACFA,CAAA,CAAcS,CAAA,GAGZP,CAAA,IACFA,CAAA,EAAoB,IAGtBM,CAAA,CAAME,aAAA,IAAgB,EAEzB;IAAA,GACD,CAACV,CAAA,EAAeE,CAAA,EAAqBM,CAAA;IAGjCM,CAAA,GAASD,CAAA,CACb,UAACJ,CAAA;MAKKD,CAAA,CAAME,aAAA,KADYD,CAAA,CAAEM,aAAA,CACkBC,QAAA,CAASP,CAAA,CAAEQ,aAAA,MAC/CX,CAAA,IACFA,CAAA,CAAaG,CAAA,GAGXP,CAAA,IACFA,CAAA,EAAoB,IAGtBM,CAAA,CAAME,aAAA,IAAgB,EAEzB;IAAA,GACD,CAACJ,CAAA,EAAcJ,CAAA,EAAqBM,CAAA;IAGhCU,CAAA,GAAwBC,CAAA,CAAQ;MACpC,OAAKf,CAAA,GACE;QAAEgB,gBAAA,EAAkB;MAAA,IADH,EAE1B;IAAA,GAAG,CAAChB,CAAA;EAEJ,OAAIA,CAAA,GACKc,CAAA,GAGF;IACLE,gBAAA,EAAkB;MAChBC,OAAA,EAAST,CAAA;MACTU,MAAA,EAAQR;IAAA;EAAA,CAGd;AAAA;AAAA,SAAAf,CAAA,IAAAwB,cAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}