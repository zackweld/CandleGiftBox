{"ast":null,"code":"import { slicedToArray as r } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { useState as e, useEffect as u, useCallback as o } from \"react\";\nimport n from \"../useEventListener/index.js\";\nimport c from \"../usePrevious/index.js\";\nfunction t(t) {\n  var l = t.ref,\n    a = t.focusCallback,\n    i = t.blurCallback,\n    f = e(!1),\n    s = r(f, 2),\n    m = s[0],\n    b = s[1],\n    v = c(m);\n  u(function () {\n    void 0 !== v && (m ? a && a() : i && i());\n  }, [i, a, m, v]);\n  var p = o(function () {\n      l.current.focus();\n    }, [l]),\n    d = o(function () {\n      l.current.blur();\n    }, [l]);\n  return n({\n    eventName: \"focus\",\n    ref: l,\n    callback: function () {\n      b(!0);\n    }\n  }), n({\n    eventName: \"blur\",\n    ref: l,\n    callback: function () {\n      b(!1);\n    }\n  }), {\n    isFocused: m,\n    focus: p,\n    blur: d\n  };\n}\nexport { t as default };","map":{"version":3,"names":["t","l","ref","a","focusCallback","i","blurCallback","f","e","s","r","m","b","v","c","u","p","o","current","focus","d","blur","n","eventName","callback","isFocused","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/hooks/useSetFocus/index.ts"],"sourcesContent":["import { RefObject, useCallback, useEffect, useState } from \"react\";\nimport useEventListener from \"../useEventListener\";\nimport usePrevious from \"../../hooks/usePrevious\";\n\n// TODO Vibe 2.0: rename to useFocus? and maybe change signature to be like useHover?\nexport default function useSetFocus({\n  ref,\n  focusCallback,\n  blurCallback\n}: {\n  ref: RefObject<HTMLElement>;\n  focusCallback?: () => void;\n  blurCallback?: () => void;\n}) {\n  const [isFocused, setIsFocused] = useState(false);\n  const isFocusedPrev = usePrevious(isFocused);\n\n  useEffect(() => {\n    if (isFocusedPrev === undefined) {\n      // Don't call callback on first render\n      return;\n    }\n\n    // Calling back from here to be sure that isFocused value have already been updated\n    if (isFocused) {\n      focusCallback && focusCallback();\n    } else {\n      blurCallback && blurCallback();\n    }\n  }, [blurCallback, focusCallback, isFocused, isFocusedPrev]);\n\n  const focus = useCallback(() => {\n    ref.current.focus();\n  }, [ref]);\n\n  const blur = useCallback(() => {\n    ref.current.blur();\n  }, [ref]);\n\n  const onFocus = () => {\n    setIsFocused(true);\n  };\n\n  const onBlur = () => {\n    setIsFocused(false);\n  };\n\n  useEventListener({\n    eventName: \"focus\",\n    ref,\n    callback: onFocus\n  });\n\n  useEventListener({\n    eventName: \"blur\",\n    ref,\n    callback: onBlur\n  });\n\n  return { isFocused, focus, blur };\n}\n"],"mappings":";;;;AAKc,SAAUA,EAAWA,CAAA;EAQlC,IAPCC,CAAA,GAAGD,CAAA,CAAHE,GAAA;IACAC,CAAA,GAAaH,CAAA,CAAbI,aAAA;IACAC,CAAA,GAAYL,CAAA,CAAZM,YAAA;IAMAC,CAAA,GAAkCC,CAAA,EAAS;IAAMC,CAAA,GAAAC,CAAA,CAAAH,CAAA;IAA1CI,CAAA,GAASF,CAAA;IAAEG,CAAA,GAAYH,CAAA;IACxBI,CAAA,GAAgBC,CAAA,CAAYH,CAAA;EAElCI,CAAA,CAAU;IAAA,KACc,MAAlBF,CAAA,KAMAF,CAAA,GACFR,CAAA,IAAiBA,CAAA,KAEjBE,CAAA,IAAgBA,CAAA,GAEnB;EAAA,GAAE,CAACA,CAAA,EAAcF,CAAA,EAAeQ,CAAA,EAAWE,CAAA;EAE5C,IAAMG,CAAA,GAAQC,CAAA,CAAY;MACxBhB,CAAA,CAAIiB,OAAA,CAAQC,KAAA,EACd;IAAA,GAAG,CAAClB,CAAA;IAEEmB,CAAA,GAAOH,CAAA,CAAY;MACvBhB,CAAA,CAAIiB,OAAA,CAAQG,IAAA,EACd;IAAA,GAAG,CAACpB,CAAA;EAsBJ,OAZAqB,CAAA,CAAiB;IACfC,SAAA,EAAW;IACXrB,GAAA,EAAAD,CAAA;IACAuB,QAAA,EAXc,SAAAA,CAAA;MACdZ,CAAA,EAAa;IAAA;EAAA,IAafU,CAAA,CAAiB;IACfC,SAAA,EAAW;IACXrB,GAAA,EAAAD,CAAA;IACAuB,QAAA,EAba,SAAAA,CAAA;MACbZ,CAAA,EAAa;IAAA;EAAA,IAeR;IAAEa,SAAA,EAAAd,CAAA;IAAWQ,KAAA,EAAAH,CAAA;IAAOK,IAAA,EAAAD;EAAA,CAC7B;AAAA;AAAA,SAAApB,CAAA,IAAA0B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}