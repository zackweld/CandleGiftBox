{"ast":null,"code":"import { NavDirections as n } from \"../useFullKeyboardListeners.js\";\nfunction e(e) {\n  var t = e.direction,\n    r = e.numberOfItemsInLine,\n    i = e.itemsCount,\n    u = function () {\n      var e = Math.floor(r / 2);\n      if (t === n.UP) return (Math.ceil(i / r) - 1) * r + e;\n      if (t === n.DOWN) return e;\n      if (t === n.LEFT) {\n        for (var u = r - 1, o = Math.floor((i - 1) / 2); o > u;) u += r;\n        return u;\n      }\n      if (t === n.RIGHT) {\n        for (var s = 0, a = Math.floor((i - 1) / 2); a > s + r;) s += r;\n        return s;\n      }\n    }();\n  return Math.max(0, Math.min(u, i - 1));\n}\nfunction t(e) {\n  var t = e.activeIndex,\n    r = e.itemsCount,\n    i = e.numberOfItemsInLine,\n    u = function (n) {\n      return Math.ceil((n + 1) / i);\n    },\n    o = function (n) {\n      var e = t + (n ? 1 : -1);\n      return 0 > e || e >= r || u(t) !== u(e) ? {\n        isOutbound: !0\n      } : {\n        isOutbound: !1,\n        nextIndex: e\n      };\n    },\n    s = function (n) {\n      var e = t + i * (n ? 1 : -1);\n      return 0 > e || e >= r ? {\n        isOutbound: !0\n      } : {\n        isOutbound: !1,\n        nextIndex: e\n      };\n    };\n  switch (e.direction) {\n    case n.RIGHT:\n      return o(!0);\n    case n.LEFT:\n      return o(!1);\n    case n.DOWN:\n      return s(!0);\n    case n.UP:\n      return s(!1);\n  }\n}\nfunction r(n) {\n  for (var e = n.itemsCount, r = n.numberOfItemsInLine, i = n.direction, u = n.disabledIndexes, o = void 0 === u ? [] : u, s = t({\n      activeIndex: n.activeIndex,\n      itemsCount: e,\n      numberOfItemsInLine: r,\n      direction: i\n    }); !s.isOutbound && o.includes(s.nextIndex);) s = t({\n    activeIndex: s.nextIndex,\n    itemsCount: e,\n    numberOfItemsInLine: r,\n    direction: i\n  });\n  return s;\n}\nexport { r as calcActiveIndexAfterArrowNavigation, e as getActiveIndexFromInboundNavigation };","map":{"version":3,"names":["e","t","direction","r","numberOfItemsInLine","i","itemsCount","u","Math","floor","n","UP","ceil","DOWN","LEFT","o","RIGHT","s","a","max","min","activeIndex","getIndexLine","horizontalChange","isOutbound","nextIndex","verticalChange","disabledIndexes","includes","calcActiveIndexAfterArrowNavigation","getActiveIndexFromInboundNavigation"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/hooks/useGridKeyboardNavigation/gridKeyboardNavigationHelper.ts"],"sourcesContent":["import { NavDirections } from \"../useFullKeyboardListeners\";\n\nexport function getActiveIndexFromInboundNavigation({\n  direction,\n  numberOfItemsInLine,\n  itemsCount\n}: {\n  direction: NavDirections;\n  numberOfItemsInLine: number;\n  itemsCount: number;\n}) {\n  const getRawIndex = () => {\n    const firstLineMiddleIndex = Math.floor(numberOfItemsInLine / 2);\n    if (direction === NavDirections.UP) {\n      // last line, middle\n      const rowCount = Math.ceil(itemsCount / numberOfItemsInLine);\n      return (rowCount - 1) * numberOfItemsInLine + firstLineMiddleIndex;\n    }\n    if (direction === NavDirections.DOWN) {\n      // first line, middle\n      return firstLineMiddleIndex;\n    }\n    if (direction === NavDirections.LEFT) {\n      // middle line, last item\n      let result = numberOfItemsInLine - 1;\n      const midIndex = Math.floor((itemsCount - 1) / 2);\n      while (result < midIndex) {\n        result += numberOfItemsInLine;\n      }\n      return result;\n    }\n    if (direction === NavDirections.RIGHT) {\n      // middle line, first item\n      let result = 0;\n      const midIndex = Math.floor((itemsCount - 1) / 2);\n      while (result + numberOfItemsInLine < midIndex) {\n        result += numberOfItemsInLine;\n      }\n      return result;\n    }\n  };\n\n  const rawIndex = getRawIndex();\n  return Math.max(0, Math.min(rawIndex, itemsCount - 1));\n}\n\nfunction calcRawNewIndexAfterArrowNavigation({\n  activeIndex,\n  itemsCount,\n  numberOfItemsInLine,\n  direction\n}: {\n  activeIndex: number;\n  itemsCount: number;\n  numberOfItemsInLine: number;\n  direction: NavDirections;\n}) {\n  const getIndexLine = (index: number) => Math.ceil((index + 1) / numberOfItemsInLine);\n\n  const horizontalChange = (isIndexIncrease: boolean) => {\n    const nextIndex = activeIndex + (isIndexIncrease ? 1 : -1);\n    if (nextIndex < 0 || itemsCount <= nextIndex) {\n      return { isOutbound: true };\n    }\n    const currentLine = getIndexLine(activeIndex);\n    const nextIndexLine = getIndexLine(nextIndex);\n    if (currentLine !== nextIndexLine) {\n      return { isOutbound: true };\n    }\n\n    return { isOutbound: false, nextIndex };\n  };\n\n  const verticalChange = (isIndexIncrease: boolean) => {\n    const nextIndex = activeIndex + numberOfItemsInLine * (isIndexIncrease ? 1 : -1);\n    if (nextIndex < 0 || itemsCount <= nextIndex) {\n      return { isOutbound: true };\n    }\n    return { isOutbound: false, nextIndex };\n  };\n\n  switch (direction) {\n    case NavDirections.RIGHT:\n      return horizontalChange(true);\n    case NavDirections.LEFT:\n      return horizontalChange(false);\n    case NavDirections.DOWN:\n      return verticalChange(true);\n    case NavDirections.UP:\n      return verticalChange(false);\n  }\n}\n\nexport function calcActiveIndexAfterArrowNavigation({\n  activeIndex,\n  itemsCount,\n  numberOfItemsInLine,\n  direction,\n  disabledIndexes = []\n}: {\n  activeIndex: number;\n  itemsCount: number;\n  numberOfItemsInLine: number;\n  direction: NavDirections;\n  disabledIndexes?: number[];\n}) {\n  let result = calcRawNewIndexAfterArrowNavigation({ activeIndex, itemsCount, numberOfItemsInLine, direction });\n  while (!result.isOutbound && disabledIndexes.includes(result.nextIndex)) {\n    result = calcRawNewIndexAfterArrowNavigation({\n      activeIndex: result.nextIndex,\n      itemsCount,\n      numberOfItemsInLine,\n      direction\n    });\n  }\n\n  return result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}