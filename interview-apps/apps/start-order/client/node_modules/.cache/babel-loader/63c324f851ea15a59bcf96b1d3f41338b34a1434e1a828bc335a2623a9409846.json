{"ast":null,"code":"import { useRef as r, useLayoutEffect as n } from \"react\";\nfunction t() {\n  for (var t = arguments.length, o = Array(t), u = 0; t > u; u++) o[u] = arguments[u];\n  var c = r(null);\n  return n(function () {\n    o.forEach(function (r) {\n      r && (\"function\" == typeof r ? r(c.current) : r.current = c.current);\n    });\n  }, [o]), c;\n}\nexport { t as default };","map":{"version":3,"names":["t","arguments","length","o","Array","u","c","r","n","forEach","current","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/hooks/useMergeRef.ts"],"sourcesContent":["import { ForwardedRef, MutableRefObject, RefObject, useLayoutEffect, useRef } from \"react\";\n\n/*\n * Example usage:\n * const Component = React.forwardRef((props, ref) => {\n *   const internalRef = React.useRef();\n *   const mergedRef = useMergeRef(ref, internalRef);\n *   return <div {...props} ref={mergedRef} />;\n * });\n */\n\n/**\n * Returns a single ref callback that merges multiple ref callbacks - internal replacement for `useMergeRefs` hook\n * @param refs\n */\nfunction useMergeRef<T>(...refs: (RefObject<T> | ForwardedRef<T> | null)[]): RefObject<T> {\n  const mergedRef = useRef<T>(null);\n\n  useLayoutEffect(() => {\n    refs.forEach(ref => {\n      if (!ref) return;\n\n      if (typeof ref === \"function\") {\n        ref(mergedRef.current);\n      } else {\n        (ref as MutableRefObject<T>).current = mergedRef.current;\n      }\n    });\n  }, [refs]);\n\n  return mergedRef;\n}\n\nexport default useMergeRef;\n"],"mappings":";AAeA,SAASA,EAAA;EAAiE,SAAAA,CAAA,GAAAC,SAAA,CAAAC,MAAA,EAA/CC,CAAA,GAA+CC,KAAA,CAAAJ,CAAA,GAAAK,CAAA,MAAAL,CAAA,GAAAK,CAAA,EAAAA,CAAA,IAA/CF,CAAA,CAA+CE,CAAA,IAAAJ,SAAA,CAAAI,CAAA;EACxE,IAAMC,CAAA,GAAYC,CAAA,CAAU;EAc5B,OAZAC,CAAA,CAAgB;IACdL,CAAA,CAAKM,OAAA,CAAQ,UAAAF,CAAA;MACNA,CAAA,KAEc,qBAARA,CAAA,GACTA,CAAA,CAAID,CAAA,CAAUI,OAAA,IAEbH,CAAA,CAA4BG,OAAA,GAAUJ,CAAA,CAAUI,OAAA,CAErD;IAAA,EACF;EAAA,GAAG,CAACP,CAAA,IAEGG,CACT;AAAA;AAAA,SAAAN,CAAA,IAAAW,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}