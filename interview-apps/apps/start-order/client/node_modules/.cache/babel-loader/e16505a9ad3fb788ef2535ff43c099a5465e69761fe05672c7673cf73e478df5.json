{"ast":null,"code":"import { defineProperty as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { isNil as t, camelCase as r } from \"lodash-es\";\nimport { getStyle as o } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport { getTestId as a, ComponentDefaultTestId as s } from \"../../tests/testIds.js\";\nimport i from \"classnames\";\nimport l, { useMemo as n, useCallback as c } from \"react\";\nimport { backwardCompatibilityForProperties as d } from \"../../helpers/backwardCompatibilityForProperties.js\";\nimport { ElementAllowedColor as m, getElementColor as p } from \"../../utils/colors-vars-map.js\";\nimport { AvatarType as g, AvatarSize as b } from \"./AvatarConstants.js\";\nimport { AvatarBadge as u } from \"./AvatarBadge.js\";\nimport { AvatarContent as f } from \"./AvatarContent.js\";\nimport h from \"../Tooltip/Tooltip.js\";\nimport v from \"../Clickable/ClickableWrapper.js\";\nimport { withStaticProps as E } from \"../../types/withStaticProps.js\";\nimport C from \"./Avatar.module.scss.js\";\nvar j = E(function m(E) {\n  var j = E.id,\n    k = E.type,\n    T = void 0 === k ? g.TEXT : k,\n    y = E.className,\n    B = E.avatarContentWrapperClassName,\n    N = E.textClassName,\n    w = void 0 === N ? \"\" : N,\n    L = E.size,\n    O = void 0 === L ? b.LARGE : L,\n    P = E.src,\n    S = E.icon,\n    A = E.text,\n    x = E.tooltipProps,\n    z = E.ariaLabel,\n    R = E.withoutTooltip,\n    I = void 0 !== R && R,\n    U = E.role,\n    _ = E.backgroundColor,\n    H = void 0 === _ ? m.colors.CHILI_BLUE : _,\n    q = E.disabled,\n    M = E.isDisabled,\n    W = E.tabIndex,\n    D = E.ariaHidden,\n    F = void 0 !== D && D,\n    V = E.topLeftBadgeProps,\n    G = E.topRightBadgeProps,\n    X = E.bottomLeftBadgeProps,\n    J = E.bottomRightBadgeProps,\n    K = E.withoutBorder,\n    Q = void 0 !== K && K,\n    Y = E.customSize,\n    Z = void 0 === Y ? null : Y,\n    $ = E.customBackgroundColor,\n    ee = void 0 === $ ? null : $,\n    te = E.onClick,\n    re = E[\"data-testid\"],\n    oe = d([E.square, E.isSquare]),\n    ae = d([q, M], !1),\n    se = n(function () {\n      return ee ? {\n        backgroundColor: ee\n      } : P ? {} : {\n        backgroundColor: p(H)\n      };\n    }, [P, H, ee]),\n    ie = n(function () {\n      return Z ? {\n        height: Z,\n        width: Z\n      } : {};\n    }, [Z]),\n    le = n(function () {\n      if (!I) return x ? Object.assign({\n        content: z\n      }, x) : {\n        content: z\n      };\n    }, [z, x, I]),\n    ne = n(function () {\n      var e = [];\n      return t(V) || e.push(l.createElement(\"div\", {\n        key: \"top-left-badge\",\n        className: i(C.badge, C.badgeTopLeft)\n      }, l.createElement(u, Object.assign({\n        size: O\n      }, V)))), t(G) || e.push(l.createElement(\"div\", {\n        key: \"top-right-badge\",\n        className: i(C.badge, C.badgeTopRight)\n      }, l.createElement(u, Object.assign({\n        size: O\n      }, G)))), t(X) || e.push(l.createElement(\"div\", {\n        key: \"bottom-left-badge\",\n        className: i(C.badge, C.badgeBottomLeft)\n      }, l.createElement(u, Object.assign({\n        size: O\n      }, X)))), t(J) || e.push(l.createElement(\"div\", {\n        key: \"bottom-right-bade\",\n        className: i(C.badge, C.badgeBottomRight)\n      }, l.createElement(u, Object.assign({\n        size: O\n      }, J)))), e.length > 0 ? l.createElement(\"div\", {\n        className: i(C.badges)\n      }, e) : null;\n    }, [O, V, G, X, J]),\n    ce = n(function () {\n      return q || !te && !(null == le ? void 0 : le.content) ? -1 : 0;\n    }, [q, te, null == le ? void 0 : le.content]),\n    de = null != W ? W : ce,\n    me = c(function (e) {\n      e.preventDefault(), te && te(e, j);\n    }, [te, j]);\n  return l.createElement(\"div\", {\n    id: j,\n    \"data-testid\": re || a(s.AVATAR, j),\n    className: i(C.avatar, C[O], y),\n    style: ie\n  }, l.createElement(v, {\n    isClickable: !!te,\n    clickableProps: {\n      onClick: me,\n      tabIndex: \"-1\",\n      className: C.clickableWrapper\n    }\n  }, l.createElement(h, Object.assign({\n    showTrigger: [h.hideShowTriggers.FOCUS, h.hideShowTriggers.MOUSE_ENTER],\n    hideTrigger: [h.hideShowTriggers.BLUR, h.hideShowTriggers.MOUSE_LEAVE]\n  }, le), l.createElement(\"div\", {\n    className: i(C.circle, o(C, r(\"circle--\" + T)), e(e(e({}, C.disabled, ae), C.square, oe), C.withoutBorder, Q), B),\n    \"aria-hidden\": F,\n    tabIndex: de,\n    style: Object.assign({}, se)\n  }, l.createElement(f, {\n    type: T,\n    size: O,\n    src: P,\n    icon: S,\n    text: A,\n    ariaLabel: z,\n    role: U,\n    textClassName: w\n  })), ne)));\n}, {\n  types: g,\n  sizes: b,\n  colors: m,\n  backgroundColors: m\n});\nexport { j as default };","map":{"version":3,"names":["j","E","m","id","k","type","T","g","TEXT","y","className","B","avatarContentWrapperClassName","N","textClassName","w","L","size","O","b","LARGE","P","src","S","icon","A","text","x","tooltipProps","z","ariaLabel","R","withoutTooltip","I","U","role","_","backgroundColor","H","colors","CHILI_BLUE","q","disabled","M","isDisabled","W","tabIndex","D","ariaHidden","F","V","topLeftBadgeProps","G","topRightBadgeProps","X","bottomLeftBadgeProps","J","bottomRightBadgeProps","K","withoutBorder","Q","Y","customSize","Z","$","customBackgroundColor","ee","te","onClick","re","oe","d","square","isSquare","ae","se","n","p","ie","height","width","le","Object","assign","content","ne","e","t","push","l","createElement","key","i","C","badge","badgeTopLeft","u","badgeTopRight","badgeBottomLeft","badgeBottomRight","length","badges","ce","de","me","c","preventDefault","a","s","AVATAR","avatar","style","v","isClickable","clickableProps","clickableWrapper","h","showTrigger","hideShowTriggers","FOCUS","MOUSE_ENTER","hideTrigger","BLUR","MOUSE_LEAVE","circle","o","r","f","types","sizes","backgroundColors","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/Avatar/Avatar.tsx"],"sourcesContent":["import { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport React, { AriaRole, useCallback, useMemo } from \"react\";\nimport { isNil } from \"lodash-es\";\nimport { backwardCompatibilityForProperties } from \"../../helpers/backwardCompatibilityForProperties\";\nimport { ElementAllowedColor, ElementColor, getElementColor } from \"../../utils/colors-vars-map\";\nimport { AvatarSize, AvatarType } from \"./AvatarConstants\";\nimport { AvatarBadge, AvatarBadgeProps } from \"./AvatarBadge\";\nimport { AvatarContent } from \"./AvatarContent\";\nimport Tooltip, { TooltipProps } from \"../Tooltip/Tooltip\";\nimport ClickableWrapper from \"../Clickable/ClickableWrapper\";\nimport { SubIcon, VibeComponentProps, withStaticProps } from \"../../types\";\nimport styles from \"./Avatar.module.scss\";\n\nexport interface AvatarProps extends VibeComponentProps {\n  src?: string;\n  text?: string;\n  tooltipProps?: Partial<TooltipProps>;\n  ariaLabel?: string;\n  withoutTooltip?: boolean;\n  icon?: SubIcon;\n  type?: AvatarType;\n  /** Class name for the avatar content of text type */\n  textClassName?: string;\n  /** Class name for a div-wrapper of avatar content */\n  avatarContentWrapperClassName?: string;\n  backgroundColor?: ElementColor;\n  customBackgroundColor?: string;\n  role?: AriaRole;\n  size?: AvatarSize;\n  customSize?: number;\n  tabIndex?: number;\n  ariaHidden?: boolean;\n  disabled?: boolean;\n  /**\n   * @deprecated - use square instead\n   */\n  isSquare?: boolean;\n  /**\n   * @deprecated - use disabled instead\n   */\n  isDisabled?: boolean;\n  square?: boolean;\n  topLeftBadgeProps?: AvatarBadgeProps;\n  topRightBadgeProps?: AvatarBadgeProps;\n  bottomLeftBadgeProps?: AvatarBadgeProps;\n  bottomRightBadgeProps?: AvatarBadgeProps;\n  withoutBorder?: boolean;\n  onClick?: (event: React.MouseEvent | React.KeyboardEvent, avatarId: string) => void;\n}\n\nconst Avatar: React.FC<AvatarProps> & {\n  types?: typeof AvatarType;\n  sizes?: typeof AvatarSize;\n  colors?: typeof ElementAllowedColor;\n  backgroundColors?: typeof ElementAllowedColor;\n} = ({\n  id,\n  type = AvatarType.TEXT,\n  className,\n  avatarContentWrapperClassName,\n  textClassName = \"\",\n  size = AvatarSize.LARGE,\n  src,\n  icon,\n  text,\n  tooltipProps,\n  ariaLabel,\n  withoutTooltip = false,\n  role,\n  backgroundColor = Avatar.colors.CHILI_BLUE,\n  square,\n  disabled,\n  // Backward compatibility for props naming\n  isSquare,\n  // Backward compatibility for props naming\n  isDisabled,\n  tabIndex,\n  ariaHidden = false,\n  topLeftBadgeProps,\n  topRightBadgeProps,\n  bottomLeftBadgeProps,\n  bottomRightBadgeProps,\n  withoutBorder = false,\n  customSize = null,\n  customBackgroundColor = null,\n  onClick,\n  \"data-testid\": dataTestId\n}) => {\n  const overrideSquare = backwardCompatibilityForProperties([square, isSquare]);\n  const overrideDisabled = backwardCompatibilityForProperties([disabled, isDisabled], false);\n  const backgroundColorStyle = useMemo(() => {\n    if (customBackgroundColor) return { backgroundColor: customBackgroundColor };\n    return src ? {} : { backgroundColor: getElementColor(backgroundColor) };\n  }, [src, backgroundColor, customBackgroundColor]);\n  const sizeStyle = useMemo(() => {\n    return customSize ? { height: customSize, width: customSize } : {};\n  }, [customSize]);\n\n  const overrideTooltipProps = useMemo(() => {\n    if (withoutTooltip) return undefined;\n\n    if (tooltipProps) {\n      return { content: ariaLabel, ...tooltipProps };\n    } else {\n      return { content: ariaLabel };\n    }\n  }, [ariaLabel, tooltipProps, withoutTooltip]);\n\n  const badgesContainer = useMemo(() => {\n    const badges = [];\n    if (!isNil(topLeftBadgeProps)) {\n      badges.push(\n        <div key=\"top-left-badge\" className={cx(styles.badge, styles.badgeTopLeft)}>\n          <AvatarBadge size={size} {...topLeftBadgeProps} />\n        </div>\n      );\n    }\n    if (!isNil(topRightBadgeProps)) {\n      badges.push(\n        <div key=\"top-right-badge\" className={cx(styles.badge, styles.badgeTopRight)}>\n          <AvatarBadge size={size} {...topRightBadgeProps} />\n        </div>\n      );\n    }\n    if (!isNil(bottomLeftBadgeProps)) {\n      badges.push(\n        <div key=\"bottom-left-badge\" className={cx(styles.badge, styles.badgeBottomLeft)}>\n          <AvatarBadge size={size} {...bottomLeftBadgeProps} />\n        </div>\n      );\n    }\n    if (!isNil(bottomRightBadgeProps)) {\n      badges.push(\n        <div key=\"bottom-right-bade\" className={cx(styles.badge, styles.badgeBottomRight)}>\n          <AvatarBadge size={size} {...bottomRightBadgeProps} />\n        </div>\n      );\n    }\n\n    return badges.length > 0 ? <div className={cx(styles.badges)}>{badges}</div> : null;\n  }, [size, topLeftBadgeProps, topRightBadgeProps, bottomLeftBadgeProps, bottomRightBadgeProps]);\n\n  const defaultTabIndex = useMemo(() => {\n    if (!disabled && (onClick || overrideTooltipProps?.content)) {\n      return 0;\n    }\n    return -1;\n  }, [disabled, onClick, overrideTooltipProps?.content]);\n\n  const overrideTabIndex = tabIndex ?? defaultTabIndex;\n\n  const clickHandler = useCallback(\n    (event: React.MouseEvent | React.KeyboardEvent) => {\n      event.preventDefault();\n      if (onClick) {\n        onClick(event, id);\n      }\n    },\n    [onClick, id]\n  );\n\n  return (\n    <div\n      id={id}\n      data-testid={dataTestId || getTestId(ComponentDefaultTestId.AVATAR, id)}\n      className={cx(styles.avatar, styles[size], className)}\n      style={sizeStyle}\n    >\n      <ClickableWrapper\n        isClickable={!!onClick}\n        clickableProps={{\n          onClick: clickHandler,\n          tabIndex: \"-1\",\n          className: styles.clickableWrapper\n        }}\n      >\n        <Tooltip\n          showTrigger={[Tooltip.hideShowTriggers.FOCUS, Tooltip.hideShowTriggers.MOUSE_ENTER]}\n          hideTrigger={[Tooltip.hideShowTriggers.BLUR, Tooltip.hideShowTriggers.MOUSE_LEAVE]}\n          {...overrideTooltipProps}\n        >\n          <div\n            className={cx(\n              styles.circle,\n              getStyle(styles, camelCase(\"circle--\" + type)),\n              {\n                [styles.disabled]: overrideDisabled,\n                [styles.square]: overrideSquare,\n                [styles.withoutBorder]: withoutBorder\n              },\n              avatarContentWrapperClassName\n            )}\n            aria-hidden={ariaHidden}\n            tabIndex={overrideTabIndex}\n            style={{ ...backgroundColorStyle }}\n          >\n            <AvatarContent\n              type={type}\n              size={size}\n              src={src}\n              icon={icon}\n              text={text}\n              ariaLabel={ariaLabel}\n              role={role}\n              textClassName={textClassName}\n            />\n          </div>\n          {badgesContainer}\n        </Tooltip>\n      </ClickableWrapper>\n    </div>\n  );\n};\n\nexport default withStaticProps(Avatar, {\n  types: AvatarType,\n  sizes: AvatarSize,\n  colors: ElementAllowedColor,\n  backgroundColors: ElementAllowedColor\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}