{"ast":null,"code":"import { defineProperty as t } from \"../../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { __rest as r } from \"../../../../_virtual/_tslib.js\";\nimport e from \"classnames\";\nimport { getTestId as a, ComponentDefaultTestId as n } from \"../../../tests/testIds.js\";\nimport i, { useContext as s } from \"react\";\nimport o from \"../../Link/Link.js\";\nimport m from \"./AlertBannerLink.module.scss.js\";\nimport { TypographyColor as l } from \"../../Typography/TypographyConstants.js\";\nimport { AlertBannerContext as p } from \"../AlertBannerContext.js\";\nvar d = function (d) {\n  var f = d.marginLeft,\n    L = void 0 !== f && f,\n    c = d.id,\n    j = d[\"data-testid\"],\n    g = r(d, [\"marginLeft\", \"id\", \"data-testid\"]),\n    u = s(p).textColor,\n    N = e(t({}, m.marginLeft, L));\n  return i.createElement(\"div\", {\n    className: N,\n    \"data-testid\": j || a(n.ALERT_BANNER_LINK, c),\n    id: c\n  }, i.createElement(o, Object.assign({}, g, {\n    textClassName: e(m.bannerLink, t(t({}, m.bannerLinkTextColorOnPrimary, u === l.ON_PRIMARY), m.bannerLinkTextColorOnInverted, u === l.ON_INVERTED))\n  })));\n};\nObject.assign(d, {\n  isAlertBannerItem: !0\n});\nexport { d as default };","map":{"version":3,"names":["d","AlertBannerLink","f","marginLeft","L","c","id","j","g","r","u","s","p","textColor","N","e","t","m","i","createElement","className","a","n","ALERT_BANNER_LINK","o","Object","assign","textClassName","bannerLink","bannerLinkTextColorOnPrimary","l","ON_PRIMARY","bannerLinkTextColorOnInverted","ON_INVERTED","isAlertBannerItem","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/AlertBanner/AlertBannerLink/AlertBannerLink.tsx"],"sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport cx from \"classnames\";\nimport { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\nimport React, { FC, useContext } from \"react\";\nimport Link, { LinkProps } from \"../../Link/Link\";\nimport styles from \"./AlertBannerLink.module.scss\";\nimport { TypographyColor } from \"../../Typography/TypographyConstants\";\nimport { AlertBannerContext } from \"../AlertBannerContext\";\n\nexport interface AlertBannerLinkProps extends LinkProps {\n  marginLeft?: boolean;\n}\n\nconst AlertBannerLink: FC<AlertBannerLinkProps> = ({\n  marginLeft = false,\n  id,\n  \"data-testid\": dataTestId,\n  ...linkProps\n}) => {\n  const { textColor } = useContext(AlertBannerContext);\n  const classNames = cx({\n    [styles.marginLeft]: marginLeft\n  });\n\n  return (\n    <div\n      className={classNames}\n      data-testid={dataTestId || getTestId(ComponentDefaultTestId.ALERT_BANNER_LINK, id)}\n      id={id}\n    >\n      <Link\n        {...linkProps}\n        textClassName={cx(styles.bannerLink, {\n          [styles.bannerLinkTextColorOnPrimary]: textColor === TypographyColor.ON_PRIMARY,\n          [styles.bannerLinkTextColorOnInverted]: textColor === TypographyColor.ON_INVERTED\n        })}\n      />\n    </div>\n  );\n};\n\nObject.assign(AlertBannerLink, {\n  isAlertBannerItem: true\n});\n\nexport default AlertBannerLink;\n"],"mappings":";;;;;;;;;AAaA,IAAMA,CAAA,GAA4C,SAAAC,CAACD,CAAA;EAAA,IAAAE,CAAA,GAKlDF,CAAA,CAJCG,UAAA;IAAAC,CAAA,QAAa,MAAHF,CAAA,IAAQA,CAAA;IAClBG,CAAA,GAGDL,CAAA,CAHCM,EAAA;IACeC,CAAA,GAEhBP,CAAA,CAFC;IACGQ,CAAA,GAASC,CAAA,CAAAT,CAAA,EAJqC;IAMzCU,CAAA,GAAcC,CAAA,CAAWC,CAAA,EAAzBC,SAAA;IACFC,CAAA,GAAaC,CAAA,CAAEC,CAAA,KAClBC,CAAA,CAAOd,UAAA,EAAaC,CAAA;EAGvB,OACEc,CAAA,CACEC,aAAA;IAAAC,SAAA,EAAWN,CAAA;IAAU,eACRP,CAAA,IAAcc,CAAA,CAAUC,CAAA,CAAuBC,iBAAA,EAAmBlB,CAAA;IAC/EC,EAAA,EAAID;EAAA,GAEJa,CAAA,CAACC,aAAA,CAAAK,CAAA,EACKC,MAAA,CAAAC,MAAA,KAAAlB,CAAA,EACJ;IAAAmB,aAAA,EAAeZ,CAAA,CAAGE,CAAA,CAAOW,UAAA,EAAUZ,CAAA,CAAAA,CAAA,CAChC,IAAAC,CAAA,CAAOY,4BAAA,EAA+BnB,CAAA,KAAcoB,CAAA,CAAgBC,UAAA,GACpEd,CAAA,CAAOe,6BAAA,EAAgCtB,CAAA,KAAcoB,CAAA,CAAgBG,WAAA;EAAA,IAKhF;AAAA;AAEAR,MAAA,CAAOC,MAAA,CAAO1B,CAAA,EAAiB;EAC7BkC,iBAAA,GAAmB;AAAA;AAAA,SAAAlC,CAAA,IAAAmC,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}