{"ast":null,"code":"import { slicedToArray as e } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport r from \"classnames\";\nimport t, { useState as o, useMemo as i, useEffect as n, useLayoutEffect as m } from \"react\";\nimport { SystemTheme as s, ThemeColor as a } from \"./ThemeProviderConstants.js\";\nimport { generateRandomAlphaString as l, isAnySystemThemeClassNameOnBody as c, addSystemThemeClassNameToBody as d, removeSystemThemeClassNameFromBody as p, shouldGenerateTheme as u, generateThemeCssOverride as f } from \"./ThemeProviderUtils.js\";\nimport { withStaticProps as h } from \"../../types/withStaticProps.js\";\nimport { backwardCompatibilityForProperties as v } from \"../../helpers/backwardCompatibilityForProperties.js\";\nvar y = h(function (s) {\n  var a = s.theme,\n    h = s.children,\n    y = s.themeClassSpecifier,\n    C = s.systemTheme,\n    T = s.className,\n    P = v([s.themeConfig, a]),\n    b = o(!1),\n    g = e(b, 2),\n    j = g[0],\n    w = g[1],\n    x = i(function () {\n      return y || l();\n    }, [y]);\n  return n(function () {\n    a && console.warn(\"vibe ThemeProvider: theme prop is deprecated and will be removed soon, please use themeConfig prop instead - \", a);\n  }, [a]), m(function () {\n    if (C && !c()) return d(C), function () {\n      p(C);\n    };\n  }, [C]), n(function () {\n    if (u(P)) {\n      if (!document.getElementById(P.name)) {\n        var e = document.createElement(\"style\");\n        e.type = \"text/css\", e.id = P.name;\n        var r = f(P, x);\n        try {\n          e.appendChild(document.createTextNode(r)), document.head.appendChild(e), w(!0);\n        } catch (e) {\n          console.error(\"vibe ThemeProvider: error inserting theme-generated css - \", e);\n        }\n        return function () {\n          document.head.removeChild(e);\n        };\n      }\n      w(!0);\n    }\n  }, [x, P]), !j && u(P) ? null : t.createElement(\"div\", {\n    className: r(null == P ? void 0 : P.name, x, T)\n  }, h);\n}, {\n  systemThemes: s,\n  colors: a\n});\nexport { y as default };","map":{"version":3,"names":["y","h","s","a","theme","children","themeClassSpecifier","C","systemTheme","T","className","P","v","themeConfig","b","o","g","e","j","w","x","i","l","n","console","warn","m","c","d","p","u","document","getElementById","name","createElement","type","id","r","f","appendChild","createTextNode","head","error","removeChild","t","systemThemes","colors","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/ThemeProvider/ThemeProvider.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { FC, ReactElement, useEffect, useLayoutEffect, useMemo, useState } from \"react\";\nimport { SystemTheme, Theme, ThemeColor } from \"./ThemeProviderConstants\";\nimport {\n  addSystemThemeClassNameToBody,\n  generateRandomAlphaString,\n  generateThemeCssOverride,\n  isAnySystemThemeClassNameOnBody,\n  removeSystemThemeClassNameFromBody,\n  shouldGenerateTheme\n} from \"./ThemeProviderUtils\";\nimport { withStaticProps } from \"../../types\";\nimport { backwardCompatibilityForProperties } from \"../../helpers/backwardCompatibilityForProperties\";\n\nexport interface ThemeProviderProps {\n  /**\n   * @deprecated use themeConfig instead\n   */\n  theme?: Theme;\n  /**\n   * The theme config to apply, consists of a \"name\" - the name of css class that will be added to the children, which should be unique, and the object of colors overrides for each system theme.\n   */\n  themeConfig?: Theme;\n  /**\n   * The children to render with the theme\n   */\n  children: ReactElement;\n  /**\n   * String which adds up to theme name selector to make it more specific (in case if themeConfig.name is colliding with some other class name)\n   */\n  themeClassSpecifier?: string;\n  /**\n   * The system theme to apply to the body element on mount, if there is no theme class name on the body element already\n   */\n  systemTheme?: SystemTheme;\n  /**\n   * ClassName to add to the wrapping div\n   */\n  className?: string;\n}\n\nconst ThemeProvider: FC<ThemeProviderProps> & {\n  systemThemes?: typeof SystemTheme;\n  colors?: typeof ThemeColor;\n} = ({ themeConfig, theme, children, themeClassSpecifier: customThemeClassSpecifier, systemTheme, className }) => {\n  const overrideThemeConfig = backwardCompatibilityForProperties([themeConfig, theme]);\n  const [stylesLoaded, setStylesLoaded] = useState(false);\n  const themeClassSpecifier = useMemo(\n    () => customThemeClassSpecifier || generateRandomAlphaString(),\n    [customThemeClassSpecifier]\n  );\n\n  useEffect(() => {\n    if (theme) {\n      console.warn(\n        \"vibe ThemeProvider: theme prop is deprecated and will be removed soon, please use themeConfig prop instead - \",\n        theme\n      );\n    }\n  }, [theme]);\n\n  // Add the systemTheme class name to the body on mount\n  useLayoutEffect(() => {\n    if (!systemTheme) {\n      return;\n    }\n\n    if (isAnySystemThemeClassNameOnBody()) {\n      // If there is already a systemTheme class name on the body, we don't want to override it\n      return;\n    }\n\n    addSystemThemeClassNameToBody(systemTheme);\n\n    return () => {\n      // Cleanup the systemTheme class name from the body on ThemeProvider unmount\n      removeSystemThemeClassNameFromBody(systemTheme);\n    };\n  }, [systemTheme]);\n\n  useEffect(() => {\n    if (!shouldGenerateTheme(overrideThemeConfig)) {\n      return;\n    }\n    if (document.getElementById(overrideThemeConfig.name)) {\n      setStylesLoaded(true);\n      return;\n    }\n\n    const styleElement = document.createElement(\"style\");\n    styleElement.type = \"text/css\";\n    styleElement.id = overrideThemeConfig.name;\n    const themeCssOverride = generateThemeCssOverride(overrideThemeConfig, themeClassSpecifier);\n\n    try {\n      styleElement.appendChild(document.createTextNode(themeCssOverride));\n      document.head.appendChild(styleElement);\n      setStylesLoaded(true);\n    } catch (error) {\n      console.error(\"vibe ThemeProvider: error inserting theme-generated css - \", error);\n    }\n\n    return () => {\n      document.head.removeChild(styleElement);\n    };\n  }, [themeClassSpecifier, overrideThemeConfig]);\n\n  if (!stylesLoaded && shouldGenerateTheme(overrideThemeConfig)) {\n    // Waiting for styles to load before children render\n    return null;\n  }\n\n  // Pass the theme name as a class to the div wrapping children - to scope the effect of the theme\n  return <div className={cx(overrideThemeConfig?.name, themeClassSpecifier, className)}>{children}</div>;\n};\n\nexport default withStaticProps(ThemeProvider, {\n  systemThemes: SystemTheme,\n  colors: ThemeColor\n});\n"],"mappings":";;;;;;;AAyCA,IA2EeA,CAAA,GAAAC,CAAA,CAxEX,UAHeC,CAAA;EAG8F,IAA7FC,CAAA,GAAKD,CAAA,CAALE,KAAA;IAAOH,CAAA,GAAQC,CAAA,CAARG,QAAA;IAA+BL,CAAA,GAAyBE,CAAA,CAA9CI,mBAAA;IAAgDC,CAAA,GAAWL,CAAA,CAAXM,WAAA;IAAaC,CAAA,GAASP,CAAA,CAATQ,SAAA;IAC1FC,CAAA,GAAsBC,CAAA,CAAmC,CAD/CV,CAAA,CAAXW,WAAA,EACwEV,CAAA;IAC7EW,CAAA,GAAwCC,CAAA,EAAS;IAAMC,CAAA,GAAAC,CAAA,CAAAH,CAAA;IAAhDI,CAAA,GAAYF,CAAA;IAAEG,CAAA,GAAeH,CAAA;IAC9BI,CAAA,GAAsBC,CAAA,CAC1B;MAAA,OAAMrB,CAAA,IAA6BsB,CAAA;IAAA,GACnC,CAACtB,CAAA;EA0DH,OAvDAuB,CAAA,CAAU;IACJpB,CAAA,IACFqB,OAAA,CAAQC,IAAA,CACN,iHACAtB,CAAA,CAGN;EAAA,GAAG,CAACA,CAAA,IAGJuB,CAAA,CAAgB;IACd,IAAKnB,CAAA,KAIDoB,CAAA,IAOJ,OAFAC,CAAA,CAA8BrB,CAAA,GAEvB;MAELsB,CAAA,CAAmCtB,CAAA;IAAA,CAEvC;EAAA,GAAG,CAACA,CAAA,IAEJgB,CAAA,CAAU;IACR,IAAKO,CAAA,CAAoBnB,CAAA,GAAzB;MAGA,KAAIoB,QAAA,CAASC,cAAA,CAAerB,CAAA,CAAoBsB,IAAA,GAAhD;QAKA,IAAMhB,CAAA,GAAec,QAAA,CAASG,aAAA,CAAc;QAC5CjB,CAAA,CAAakB,IAAA,GAAO,YACpBlB,CAAA,CAAamB,EAAA,GAAKzB,CAAA,CAAoBsB,IAAA;QACtC,IAAMI,CAAA,GAAmBC,CAAA,CAAyB3B,CAAA,EAAqBS,CAAA;QAEvE;UACEH,CAAA,CAAasB,WAAA,CAAYR,QAAA,CAASS,cAAA,CAAeH,CAAA,IACjDN,QAAA,CAASU,IAAA,CAAKF,WAAA,CAAYtB,CAAA,GAC1BE,CAAA,EAAgB,EACjB;QAAA,CAAC,QAAOF,CAAA;UACPO,OAAA,CAAQkB,KAAA,CAAM,8DAA8DzB,CAAA,CAC7E;QAAA;QAED,OAAO;UACLc,QAAA,CAASU,IAAA,CAAKE,WAAA,CAAY1B,CAAA;QAAA,CAhB3B;MAAA;MAFCE,CAAA,EAAgB,EAFjB;IAAA;EAsBH,GAAG,CAACC,CAAA,EAAqBT,CAAA,KAEpBO,CAAA,IAAgBY,CAAA,CAAoBnB,CAAA,IAEhC,OAIFiC,CAAA,CAAAV,aAAA;IAAKxB,SAAA,EAAW2B,CAAA,CAAG,QAAA1B,CAAA,YAAAA,CAAA,CAAqBsB,IAAA,EAAMb,CAAA,EAAqBX,CAAA;EAAA,GAAaR,CAAA,CACzF;AAAA,GAE8C;EAC5C4C,YAAA,EAAc3C,CAAA;EACd4C,MAAA,EAAQ3C;AAAA;AAAA,SAAAH,CAAA,IAAA+C,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}