{"ast":null,"code":"import o from \"classnames\";\nimport r, { forwardRef as t, useRef as e, useCallback as i } from \"react\";\nimport \"../../constants/dialog.js\";\nimport { BaseSizes as s } from \"../../constants/sizes.js\";\nimport \"../../constants/positions.js\";\nimport l from \"../../hooks/useMergeRef.js\";\nimport n from \"../DialogContentContainer/DialogContentContainer.js\";\nimport { ColorStyle as c } from \"../../utils/colors-vars-map.js\";\nimport a from \"../Icon/Icons/components/NoColor.js\";\nimport m from \"./components/ColorPickerContent/ColorPickerContent.js\";\nimport { ColorShapes as d, DEFAULT_NUMBER_OF_COLORS_IN_LINE as C } from \"./ColorPickerConstants.js\";\nimport { calculateColorPickerDialogWidth as p } from \"./services/ColorPickerStyleService.js\";\nimport { withStaticProps as u } from \"../../types/withStaticProps.js\";\nimport { NOOP as f } from \"../../utils/function-utils.js\";\nimport { getTestId as I, ComponentDefaultTestId as S } from \"../../tests/testIds.js\";\nimport v from \"./ColorPicker.module.scss.js\";\nvar j = u(t(function (t, u) {\n  var j = t.className,\n    k = t.onSave,\n    h = void 0 === k ? f : k,\n    L = t.value,\n    P = void 0 === L ? \"\" : L,\n    R = t.noColorText,\n    g = t.colorStyle,\n    M = void 0 === g ? c.REGULAR : g,\n    y = t.ColorIndicatorIcon,\n    O = t.SelectedIndicatorIcon,\n    E = t.shouldRenderIndicatorWithoutBackground,\n    N = t.NoColorIcon,\n    b = void 0 === N ? a : N,\n    w = t.isBlackListMode,\n    D = void 0 === w || w,\n    z = t.colorsList,\n    T = void 0 === z ? [] : z,\n    U = t.isMultiselect,\n    B = t.colorSize,\n    x = void 0 === B ? s.MEDIUM : B,\n    A = t.numberOfColorsInLine,\n    W = void 0 === A ? C : A,\n    _ = t.focusOnMount,\n    G = t.colorShape,\n    K = void 0 === G ? d.SQUARE : G,\n    Q = t.forceUseRawColorList,\n    V = t.showColorNameTooltip,\n    Y = t.id,\n    q = t[\"data-testid\"],\n    F = e(null),\n    H = l(u, F),\n    J = i(h, [h]),\n    X = p(x, W);\n  return r.createElement(n, {\n    ref: H,\n    className: o(v.colorPicker, v.colorPickerDialogContent, j),\n    ariaLabelledby: \"Color Picker Dialog\",\n    ariaDescribedby: \"Pick color\",\n    style: {\n      width: X\n    }\n  }, r.createElement(m, {\n    onValueChange: J,\n    value: P,\n    noColorText: R,\n    shouldRenderIndicatorWithoutBackground: y && E,\n    colorStyle: M,\n    ColorIndicatorIcon: y,\n    SelectedIndicatorIcon: O,\n    NoColorIcon: b,\n    colorsList: T,\n    isBlackListMode: D,\n    isMultiselect: U,\n    colorSize: x,\n    numberOfColorsInLine: W,\n    focusOnMount: _,\n    colorShape: K,\n    forceUseRawColorList: Q,\n    showColorNameTooltip: V,\n    id: Y,\n    \"data-testid\": q || I(S.COLOR_PICKER, Y)\n  }));\n}), {\n  COLOR_STYLES: c,\n  sizes: s,\n  colorStyles: c,\n  colorSizes: s,\n  colorShapes: d\n});\nexport { j as default };","map":{"version":3,"names":["j","u","t","className","k","onSave","h","f","L","value","P","R","noColorText","g","colorStyle","M","c","REGULAR","y","ColorIndicatorIcon","O","SelectedIndicatorIcon","E","shouldRenderIndicatorWithoutBackground","N","NoColorIcon","b","a","w","isBlackListMode","D","z","colorsList","T","U","isMultiselect","B","colorSize","x","s","MEDIUM","A","numberOfColorsInLine","W","C","_","focusOnMount","G","colorShape","K","d","SQUARE","Q","forceUseRawColorList","V","showColorNameTooltip","Y","id","q","F","e","H","l","J","i","X","p","r","createElement","n","ref","o","v","colorPicker","colorPickerDialogContent","ariaLabelledby","ariaDescribedby","style","width","m","onValueChange","I","S","COLOR_PICKER","COLOR_STYLES","sizes","colorStyles","colorSizes","colorShapes","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/ColorPicker/ColorPicker.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { forwardRef, useCallback, useRef } from \"react\";\nimport { BaseSizes } from \"../../constants\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport DialogContentContainer from \"../DialogContentContainer/DialogContentContainer\";\nimport { ColorStyle } from \"../../utils/colors-vars-map\";\nimport NoColor from \"../Icon/Icons/components/NoColor\";\nimport ColorPickerContent from \"./components/ColorPickerContent/ColorPickerContent\";\nimport {\n  ColorShapes,\n  DEFAULT_NUMBER_OF_COLORS_IN_LINE,\n  ColorPickerValue,\n  ColorPickerArrayValueOnly\n} from \"./ColorPickerConstants\";\nimport { calculateColorPickerDialogWidth } from \"./services/ColorPickerStyleService\";\nimport { VibeComponentProps, VibeComponent, SubIcon, withStaticProps } from \"../../types\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport styles from \"./ColorPicker.module.scss\";\n\nexport interface ColorPickerProps extends VibeComponentProps {\n  value?: ColorPickerValue;\n  onSave?: (value: ColorPickerArrayValueOnly) => void;\n  ColorIndicatorIcon?: SubIcon;\n  SelectedIndicatorIcon?: SubIcon;\n  /**\n   * Hide color icon\n   */\n  NoColorIcon?: SubIcon;\n  colorStyle?: ColorStyle;\n  noColorText?: string;\n  shouldRenderIndicatorWithoutBackground?: boolean;\n  isBlackListMode?: boolean;\n  colorsList?: ColorPickerArrayValueOnly;\n  isMultiselect?: boolean;\n  colorSize?: BaseSizes;\n  numberOfColorsInLine?: number;\n  focusOnMount?: boolean;\n  colorShape?: ColorShapes;\n  /**\n   * Used to force the component render the colorList prop as is. Usually, this flag should not be used. It's intended only for edge cases.\n   * Usually, only \"monday colors\" will be rendered (unless blacklist mode is used). This flag will override this behavior.\n   */\n  forceUseRawColorList?: boolean;\n  /**\n   * Used to enable color name tooltip on each color in the component. it's incompatible with forceUseRawColorList flag.\n   * When \"tooltipContentByColor\" is supplied, it will override the color name tooltip.\n   *\n   */\n  showColorNameTooltip?: boolean;\n}\n\nconst ColorPicker: VibeComponent<ColorPickerProps> & {\n  // Backward compatibility for enum naming\n  COLOR_STYLES?: typeof ColorStyle;\n  sizes?: typeof BaseSizes;\n  colorStyles?: typeof ColorStyle;\n  colorSizes?: typeof BaseSizes;\n  colorShapes?: typeof ColorShapes;\n} = forwardRef(\n  (\n    {\n      className,\n      onSave = NOOP,\n      value = \"\",\n      noColorText,\n      colorStyle = ColorStyle.REGULAR,\n      ColorIndicatorIcon,\n      SelectedIndicatorIcon,\n      shouldRenderIndicatorWithoutBackground,\n      NoColorIcon = NoColor,\n      isBlackListMode = true,\n      colorsList = [],\n      isMultiselect,\n      colorSize = BaseSizes.MEDIUM,\n      numberOfColorsInLine = DEFAULT_NUMBER_OF_COLORS_IN_LINE,\n      focusOnMount,\n      colorShape = ColorShapes.SQUARE,\n      forceUseRawColorList,\n      showColorNameTooltip,\n      id,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const onChange = useCallback(onSave, [onSave]);\n\n    const width = calculateColorPickerDialogWidth(colorSize, numberOfColorsInLine);\n\n    return (\n      <DialogContentContainer\n        ref={mergedRef}\n        className={cx(styles.colorPicker, styles.colorPickerDialogContent, className)}\n        ariaLabelledby=\"Color Picker Dialog\"\n        ariaDescribedby=\"Pick color\"\n        style={{ width }}\n      >\n        <ColorPickerContent\n          onValueChange={onChange}\n          value={value}\n          noColorText={noColorText}\n          shouldRenderIndicatorWithoutBackground={ColorIndicatorIcon && shouldRenderIndicatorWithoutBackground}\n          colorStyle={colorStyle}\n          ColorIndicatorIcon={ColorIndicatorIcon}\n          SelectedIndicatorIcon={SelectedIndicatorIcon}\n          NoColorIcon={NoColorIcon}\n          colorsList={colorsList}\n          isBlackListMode={isBlackListMode}\n          isMultiselect={isMultiselect}\n          colorSize={colorSize}\n          numberOfColorsInLine={numberOfColorsInLine}\n          focusOnMount={focusOnMount}\n          colorShape={colorShape}\n          forceUseRawColorList={forceUseRawColorList}\n          showColorNameTooltip={showColorNameTooltip}\n          id={id}\n          data-testid={dataTestId || getTestId(ComponentDefaultTestId.COLOR_PICKER, id)}\n        />\n      </DialogContentContainer>\n    );\n  }\n);\n\nexport default withStaticProps(ColorPicker, {\n  // Backward compatibility for enum naming\n  COLOR_STYLES: ColorStyle,\n  sizes: BaseSizes,\n  colorStyles: ColorStyle,\n  colorSizes: BaseSizes,\n  colorShapes: ColorShapes\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}