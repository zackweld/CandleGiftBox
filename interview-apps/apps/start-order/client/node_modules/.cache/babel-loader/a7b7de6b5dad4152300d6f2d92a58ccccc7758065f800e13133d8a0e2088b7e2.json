{"ast":null,"code":"import { slicedToArray as r, toConsumableArray as n } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport { useMemo as t, useState as a, useLayoutEffect as e } from \"react\";\nfunction o(o) {\n  var i = t(function () {\n      return Array.isArray(o) ? o : [o];\n    }, [o]),\n    u = a(i.map(function (r) {\n      return !!window.matchMedia(r).matches;\n    })),\n    c = r(u, 2),\n    f = c[0],\n    m = c[1];\n  return e(function () {\n    var t = i.map(function (r) {\n        return window.matchMedia(r);\n      }),\n      a = t.map(function (r, t) {\n        var a = function (r) {\n          m(function (a) {\n            var e = n(a);\n            return e[t] = r.matches, e;\n          });\n        };\n        return r.addEventListener(\"change\", a), [r, a];\n      });\n    return function () {\n      a.forEach(function (n) {\n        var t = r(n, 2);\n        t[0].removeEventListener(\"change\", t[1]);\n      });\n    };\n  }, [i, m]), f;\n}\nexport { o as default, o as useMediaQuery };","map":{"version":3,"names":["o","i","t","Array","isArray","u","a","map","r","window","matchMedia","matches","c","f","m","e","callback","n","addEventListener","forEach","removeEventListener","default","useMediaQuery"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/hooks/useMediaQuery/index.ts"],"sourcesContent":["import { useLayoutEffect, useState, useMemo } from \"react\";\n\nexport function useMediaQuery(query: string | string[]) {\n  const queries = useMemo(() => {\n    return Array.isArray(query) ? query : [query];\n  }, [query]);\n\n  const [matches, setMatches] = useState(queries.map(query => !!window.matchMedia(query).matches));\n\n  useLayoutEffect(() => {\n    const mediaQueryList = queries.map(query => window.matchMedia(query));\n    const updated: [MediaQueryList, (event: MediaQueryListEvent) => void][] = mediaQueryList.map((query, index) => {\n      // we save the callback function so when we unmount we could remove the listener\n      const callback = (event: MediaQueryListEvent) => {\n        setMatches(prevState => {\n          const newQueries = [...prevState];\n          newQueries[index] = event.matches;\n          return newQueries;\n        });\n      };\n      query.addEventListener(\"change\", callback);\n      return [query, callback];\n    });\n    return () => {\n      updated.forEach(([query, callback]) => {\n        query.removeEventListener(\"change\", callback);\n      });\n    };\n  }, [queries, setMatches]);\n  return matches;\n}\nexport default useMediaQuery;\n"],"mappings":";;AAEM,SAAUA,EAAcA,CAAA;EAC5B,IAAMC,CAAA,GAAUC,CAAA,CAAQ;MACtB,OAAOC,KAAA,CAAMC,OAAA,CAAQJ,CAAA,IAASA,CAAA,GAAQ,CAACA,CAAA,CACzC;IAAA,GAAG,CAACA,CAAA;IAEJK,CAAA,GAA8BC,CAAA,CAASL,CAAA,CAAQM,GAAA,CAAI,UAAAC,CAAA;MAAK,SAAMC,MAAA,CAAOC,UAAA,CAAWF,CAAA,EAAOG,OAAO;IAAA;IAAEC,CAAA,GAAAJ,CAAA,CAAAH,CAAA;IAAzFQ,CAAA,GAAOD,CAAA;IAAEE,CAAA,GAAUF,CAAA;EAsB1B,OApBAG,CAAA,CAAgB;IACd,IAAMb,CAAA,GAAiBD,CAAA,CAAQM,GAAA,CAAI,UAAAC,CAAA;QAAK,OAAIC,MAAA,CAAOC,UAAA,CAAWF,CAAA;MAAA;MACxDF,CAAA,GAAoEJ,CAAA,CAAeK,GAAA,CAAI,UAACC,CAAA,EAAON,CAAA;QAEnG,IAAMI,CAAA,GAAW,SAAAU,CAACR,CAAA;UAChBM,CAAA,CAAW,UAAAR,CAAA;YACT,IAAMS,CAAA,GAAUE,CAAA,CAAOX,CAAA;YAEvB,OADAS,CAAA,CAAWb,CAAA,IAASM,CAAA,CAAMG,OAAA,EACnBI,CACT;UAAA;QAAA;QAGF,OADAP,CAAA,CAAMU,gBAAA,CAAiB,UAAUZ,CAAA,GAC1B,CAACE,CAAA,EAAOF,CAAA,CACjB;MAAA;IACA,OAAO;MACLA,CAAA,CAAQa,OAAA,CAAQ,UAAAF,CAAA;QAAsB,IAAAf,CAAA,GAAAM,CAAA,CAAAS,CAAA;QAAff,CAAA,IACfkB,mBAAA,CAAoB,UADKlB,CAAA,IAEjC;MAAA;IAAA,CAEJ;EAAA,GAAG,CAACD,CAAA,EAASa,CAAA,IACND,CACT;AAAA;AAAA,SAAAb,CAAA,IAAAqB,OAAA,EAAArB,CAAA,IAAAsB,aAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}