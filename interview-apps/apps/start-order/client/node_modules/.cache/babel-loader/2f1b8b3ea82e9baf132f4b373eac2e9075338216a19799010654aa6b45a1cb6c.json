{"ast":null,"code":"import { slicedToArray as e, defineProperty as o } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nimport t, { forwardRef as a, useRef as r, useMemo as i, useCallback as s } from \"react\";\nimport l from \"classnames\";\nimport n from \"../Icon/Icon.js\";\nimport c from \"../../hooks/useMergeRef.js\";\nimport m from \"../Icon/Icons/components/CloseSmall.js\";\nimport { getCSSVar as d } from \"../../services/themes.js\";\nimport { ElementAllowedColor as p, getElementColor as u } from \"../../utils/colors-vars-map.js\";\nimport v from \"../Avatar/Avatar.js\";\nimport f from \"../IconButton/IconButton.js\";\nimport b from \"../Text/Text.js\";\nimport { getTestId as y, ComponentDefaultTestId as h } from \"../../tests/testIds.js\";\nimport { AvatarType as j } from \"../Avatar/AvatarConstants.js\";\nimport { withStaticProps as g } from \"../../types/withStaticProps.js\";\nimport T from \"../../hooks/useHover/useHover.js\";\nimport k from \"../../hooks/useSetFocus/index.js\";\nimport C from \"../../hooks/useClickableProps/useClickableProps.js\";\nimport { backwardCompatibilityForProperties as N } from \"../../helpers/backwardCompatibilityForProperties.js\";\nimport I from \"./Chips.module.scss.js\";\nvar A = a(function (a, p) {\n    var g = a.className,\n      S = a.avatarClassName,\n      E = a.iconClassName,\n      O = a.id,\n      P = a.label,\n      R = void 0 === P ? \"\" : P,\n      w = a.leftIcon,\n      x = void 0 === w ? null : w,\n      B = a.rightIcon,\n      M = void 0 === B ? null : B,\n      z = a.leftAvatar,\n      F = void 0 === z ? null : z,\n      H = a.rightAvatar,\n      _ = void 0 === H ? null : H,\n      D = a.disabled,\n      L = void 0 !== D && D,\n      X = a.readOnly,\n      G = void 0 !== X && X,\n      Y = a.allowTextSelection,\n      U = void 0 !== Y && Y,\n      q = a.color,\n      J = void 0 === q ? A.colors.PRIMARY : q,\n      K = a.iconSize,\n      Q = void 0 === K ? 18 : K,\n      V = a.onDelete,\n      W = void 0 === V ? function (e, o) {} : V,\n      Z = a.onMouseDown,\n      $ = a.onClick,\n      ee = a.noAnimation,\n      oe = void 0 === ee || ee,\n      te = a.ariaLabel,\n      ae = a.disableClickableBehavior,\n      re = void 0 !== ae && ae,\n      ie = a.leftAvatarType,\n      se = void 0 === ie ? j.IMG : ie,\n      le = a.rightAvatarType,\n      ne = void 0 === le ? j.IMG : le,\n      ce = a.showBorder,\n      me = void 0 !== ce && ce,\n      de = a.leftRenderer,\n      pe = a.rightRenderer,\n      ue = a.closeButtonAriaLabel,\n      ve = void 0 === ue ? \"Remove\" : ue,\n      fe = N([a[\"data-testid\"], a.dataTestId], y(h.CHIP, O)),\n      be = !(!$ && !Z || re),\n      ye = !G && !L,\n      he = te || \"string\" == typeof R && R || \"\",\n      je = r(null),\n      ge = r(null),\n      Te = T(),\n      ke = e(Te, 2),\n      Ce = ke[0],\n      Ne = ke[1],\n      Ie = k({\n        ref: ge\n      }).isFocused,\n      Ae = c(p, ge, Ce),\n      Se = l(I.chips, g, o(o(o(o({}, I.disabled, L), I.noAnimation, oe), I.withUserSelect, U), I.border, me)),\n      Ee = l(I.clickable, Se, o(o({}, I.disabled, L), I.disableTextSelection, !U)),\n      Oe = i(function () {\n        return {\n          backgroundColor: L ? d(\"disabled-background-color\") : be && (Ne || Ie) ? u(J, !0, !0) : u(J, !0)\n        };\n      }, [L, be, Ne, Ie, J]),\n      Pe = s(function (e) {\n        e.stopPropagation(), W && W(O, e);\n      }, [O, W]),\n      Re = s(function (e) {\n        void 0 !== $ && e.target !== je.current && (e.preventDefault(), $(e));\n      }, [$]),\n      we = C({\n        onClick: Re,\n        onMouseDown: Z,\n        disabled: L,\n        id: O,\n        \"data-testid\": fe,\n        ariaLabel: he,\n        ariaHidden: !1,\n        ariaHasPopup: !1,\n        ariaExpanded: !1\n      }, Ae),\n      xe = be ? Object.assign(Object.assign({}, we), {\n        ref: we.ref,\n        className: Ee,\n        style: Oe\n      }) : {\n        className: Se,\n        \"aria-label\": he,\n        style: Oe,\n        ref: Ae,\n        onClick: Re,\n        onMouseDown: Z,\n        id: O,\n        \"data-testid\": fe\n      },\n      Be = se === j.TEXT ? {\n        text: F\n      } : {\n        src: F\n      },\n      Me = se === j.TEXT ? {\n        text: _\n      } : {\n        src: _\n      };\n    return t.createElement(\"div\", Object.assign({}, xe), F ? t.createElement(v, Object.assign({\n      withoutBorder: !0,\n      className: l(I.avatar, I.left, S),\n      customSize: 18,\n      type: se,\n      key: O\n    }, Be)) : null, x ? t.createElement(n, {\n      className: l(I.icon, I.left, E),\n      iconType: n.type.ICON_FONT,\n      clickable: !1,\n      icon: x,\n      iconSize: Q,\n      ignoreFocusStyle: !0\n    }) : null, de && t.createElement(\"div\", {\n      className: l(I.customRenderer, I.left)\n    }, de), t.createElement(b, {\n      type: b.types.TEXT2,\n      className: I.label\n    }, R), M ? t.createElement(n, {\n      className: l(I.icon, I.right, E),\n      iconType: n.type.ICON_FONT,\n      clickable: !1,\n      icon: M,\n      iconSize: Q,\n      ignoreFocusStyle: !0\n    }) : null, _ ? t.createElement(v, Object.assign({\n      withoutBorder: !0,\n      className: l(I.avatar, I.right, S),\n      customSize: 18,\n      type: ne,\n      key: O\n    }, Me)) : null, pe && t.createElement(\"div\", {\n      className: l(I.customRenderer, I.right)\n    }, pe), ye && t.createElement(f, {\n      size: f.sizes.XXS,\n      color: f.colors.ON_PRIMARY_COLOR,\n      className: l(I.icon, I.close),\n      ariaLabel: ve,\n      hideTooltip: !0,\n      icon: m,\n      onClick: Pe,\n      \"data-testid\": \"\".concat(fe, \"-close\"),\n      ref: je\n    }));\n  }),\n  S = g(A, {\n    colors: p,\n    avatarTypes: j\n  });\nexport { S as default };","map":{"version":3,"names":["A","a","p","g","className","S","avatarClassName","E","iconClassName","O","id","P","label","R","w","leftIcon","x","B","rightIcon","M","z","leftAvatar","F","H","rightAvatar","_","D","disabled","L","X","readOnly","G","Y","allowTextSelection","U","q","color","J","colors","PRIMARY","K","iconSize","Q","V","onDelete","W","e","o","Z","onMouseDown","$","onClick","ee","noAnimation","oe","te","ariaLabel","ae","disableClickableBehavior","re","ie","leftAvatarType","se","j","IMG","le","rightAvatarType","ne","ce","showBorder","me","de","leftRenderer","pe","rightRenderer","ue","closeButtonAriaLabel","ve","fe","N","dataTestId","y","h","CHIP","be","ye","he","je","r","ge","Te","T","ke","Ce","Ne","Ie","k","ref","isFocused","Ae","c","Se","l","I","chips","withUserSelect","border","Ee","clickable","disableTextSelection","Oe","i","backgroundColor","d","u","Pe","s","stopPropagation","Re","target","current","preventDefault","we","C","ariaHidden","ariaHasPopup","ariaExpanded","xe","Object","assign","style","Be","TEXT","text","src","Me","t","createElement","v","withoutBorder","avatar","left","customSize","type","key","n","icon","iconType","ICON_FONT","ignoreFocusStyle","customRenderer","b","types","TEXT2","right","f","size","sizes","XXS","ON_PRIMARY_COLOR","close","hideTooltip","m","concat","avatarTypes","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/Chips/Chips.tsx"],"sourcesContent":["import React, { forwardRef, RefObject, useCallback, useMemo, useRef } from \"react\";\nimport cx from \"classnames\";\nimport Icon from \"../Icon/Icon\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport CloseSmall from \"../Icon/Icons/components/CloseSmall\";\nimport { getCSSVar } from \"../../services/themes\";\nimport { ElementAllowedColor, ElementColor, getElementColor } from \"../../utils/colors-vars-map\";\nimport Avatar from \"../Avatar/Avatar\";\nimport IconButton from \"../IconButton/IconButton\";\nimport Text from \"../Text/Text\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport { AvatarType } from \"../Avatar/AvatarConstants\";\nimport { ElementContent, SubIcon, VibeComponent, VibeComponentProps, withStaticProps } from \"../../types\";\nimport useHover from \"../../hooks/useHover/useHover\";\nimport useSetFocus from \"../../hooks/useSetFocus\";\nimport useClickableProps from \"../../hooks/useClickableProps/useClickableProps\";\nimport { backwardCompatibilityForProperties } from \"../../helpers/backwardCompatibilityForProperties\";\nimport styles from \"./Chips.module.scss\";\n\nconst CHIPS_AVATAR_SIZE = 18;\n\nexport interface ChipsProps extends VibeComponentProps {\n  label?: ElementContent;\n  disabled?: boolean;\n  readOnly?: boolean;\n  /**\n   * @deprecated - use \"data-testid\" instead\n   */\n  dataTestId?: string;\n  \"data-testid\"?: string;\n  /**\n   * A React element that is positioned to the right of the text\n   */\n  rightRenderer?: ElementContent;\n  /**\n   * A React element that is positioned to the left of the text\n   */\n  leftRenderer?: ElementContent;\n  /** Icon to place on the right */\n  rightIcon?: SubIcon;\n  /** Icon to place on the left */\n  leftIcon?: SubIcon;\n  /** Img to place as avatar on the right */\n  rightAvatar?: string;\n  /** the type of right avatar */\n  rightAvatarType?: AvatarType;\n  /** Img to place as avatar on the left */\n  leftAvatar?: string;\n  /** the type of left avatar */\n  leftAvatarType?: AvatarType;\n  /** ClassName for left or right icon */\n  iconClassName?: string;\n  /** ClassName for left or right avatar */\n  avatarClassName?: string;\n  // TODO Vibe 3.0: filter ElementAllowedColor.DARK_INDIGO, ElementAllowedColor.BLACKISH from colors which are valid for Chips\n  color?: ElementColor;\n  /** Size for font icon */\n  iconSize?: number | string;\n  onDelete?: (id: string, event: React.MouseEvent<HTMLSpanElement>) => void;\n  /**\n   * Disables the Chip's entry animation\n   */\n  noAnimation?: boolean;\n  /**\n   * Allow user to select text\n   */\n  allowTextSelection?: boolean;\n  /**\n   * Callback function to be called when the user clicks the component.\n   */\n  onMouseDown?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  /**\n   * Callback function to be called when the user clicks the component.\n   */\n  onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  /**\n   * Applies when element has onClick or onMouseDown props\n   */\n  ariaLabel?: string;\n  /**\n   * Deprecated, there is no need to use this prop for implementing clickable chips. Please use onClick for this purpose.\n   * @deprecated\n   */\n  clickable?: boolean;\n  /**\n   * Deprecated, there is no need to use this prop for implementing clickable chips. Please use onClick for this purpose.\n   * @deprecated\n   */\n  isClickable?: boolean;\n  /**\n   * Disable click behaviors\n   */\n  disableClickableBehavior?: boolean;\n  /**\n   * Show border, the border color is `--text-color-on-primary`, should be when the chip is a colored background like\n   * selected-color\n   */\n  showBorder?: boolean;\n  closeButtonAriaLabel?: string;\n}\n\nconst Chips: VibeComponent<ChipsProps, HTMLDivElement> & {\n  colors?: typeof ElementAllowedColor;\n  avatarTypes?: typeof AvatarType;\n} = forwardRef<HTMLDivElement, ChipsProps>(\n  (\n    {\n      className,\n      avatarClassName,\n      iconClassName,\n      id,\n      label = \"\",\n      leftIcon = null,\n      rightIcon = null,\n      leftAvatar = null,\n      rightAvatar = null,\n      disabled = false,\n      readOnly = false,\n      allowTextSelection = false,\n      color = Chips.colors.PRIMARY,\n      iconSize = 18,\n      onDelete = (_id: string, _e: React.MouseEvent<HTMLSpanElement>) => {},\n      onMouseDown,\n      onClick,\n      noAnimation = true,\n      ariaLabel,\n      dataTestId: backwardCompatabilityDataTestId,\n      \"data-testid\": dataTestId,\n      disableClickableBehavior = false,\n      leftAvatarType = AvatarType.IMG,\n      rightAvatarType = AvatarType.IMG,\n      showBorder = false,\n      leftRenderer,\n      rightRenderer,\n      closeButtonAriaLabel = \"Remove\"\n    },\n    ref\n  ) => {\n    const overrideDataTestId = backwardCompatibilityForProperties(\n      [dataTestId, backwardCompatabilityDataTestId],\n      getTestId(ComponentDefaultTestId.CHIP, id)\n    );\n    const hasClickableWrapper = (!!onClick || !!onMouseDown) && !disableClickableBehavior;\n    const hasCloseButton = !readOnly && !disabled;\n    const overrideAriaLabel = ariaLabel || (typeof label === \"string\" && label) || \"\";\n\n    const iconButtonRef = useRef(null);\n    const componentRef = useRef(null);\n\n    const [hoverRef, isHovered] = useHover<HTMLDivElement>();\n    const { isFocused } = useSetFocus({ ref: componentRef });\n\n    const mergedRef = useMergeRef<HTMLDivElement>(ref, componentRef, hoverRef);\n\n    const overrideClassName = cx(styles.chips, className, {\n      [styles.disabled]: disabled,\n      [styles.noAnimation]: noAnimation,\n      [styles.withUserSelect]: allowTextSelection,\n      [styles.border]: showBorder\n    });\n    const clickableClassName = cx(styles.clickable, overrideClassName, {\n      [styles.disabled]: disabled,\n      [styles.disableTextSelection]: !allowTextSelection\n    });\n\n    const backgroundColorStyle = useMemo(() => {\n      let cssVar;\n      if (disabled) {\n        cssVar = getCSSVar(\"disabled-background-color\");\n      } else if (hasClickableWrapper && (isHovered || isFocused)) {\n        cssVar = getElementColor(color, true, true);\n      } else {\n        cssVar = getElementColor(color, true);\n      }\n      return { backgroundColor: cssVar };\n    }, [disabled, hasClickableWrapper, isHovered, isFocused, color]);\n\n    const onDeleteCallback = useCallback(\n      (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        e.stopPropagation();\n        if (onDelete) {\n          onDelete(id, e);\n        }\n      },\n      [id, onDelete]\n    );\n\n    const onClickCallback = useCallback(\n      (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n        if (onClick !== undefined && (e.target as HTMLElement) !== iconButtonRef.current) {\n          e.preventDefault();\n          onClick(e);\n        }\n      },\n      [onClick]\n    );\n\n    const clickableProps = useClickableProps(\n      {\n        onClick: onClickCallback,\n        onMouseDown,\n        disabled,\n        id,\n        \"data-testid\": overrideDataTestId,\n        ariaLabel: overrideAriaLabel,\n        ariaHidden: false,\n        ariaHasPopup: false,\n        ariaExpanded: false\n      },\n      mergedRef\n    );\n    const wrapperProps = hasClickableWrapper\n      ? {\n          ...clickableProps,\n          ref: clickableProps.ref as RefObject<HTMLDivElement>,\n          className: clickableClassName,\n          style: backgroundColorStyle\n        }\n      : {\n          className: overrideClassName,\n          \"aria-label\": overrideAriaLabel,\n          style: backgroundColorStyle,\n          ref: mergedRef,\n          onClick: onClickCallback,\n          onMouseDown,\n          id: id,\n          \"data-testid\": overrideDataTestId\n        };\n\n    const leftAvatarProps = leftAvatarType === AvatarType.TEXT ? { text: leftAvatar } : { src: leftAvatar };\n    const rightAvatarProps = leftAvatarType === AvatarType.TEXT ? { text: rightAvatar } : { src: rightAvatar };\n\n    return (\n      <div {...wrapperProps}>\n        {leftAvatar ? (\n          <Avatar\n            withoutBorder\n            className={cx(styles.avatar, styles.left, avatarClassName)}\n            customSize={CHIPS_AVATAR_SIZE}\n            type={leftAvatarType}\n            key={id}\n            {...leftAvatarProps}\n          />\n        ) : null}\n        {leftIcon ? (\n          <Icon\n            className={cx(styles.icon, styles.left, iconClassName)}\n            iconType={Icon.type.ICON_FONT}\n            clickable={false}\n            icon={leftIcon}\n            iconSize={iconSize}\n            ignoreFocusStyle\n          />\n        ) : null}\n        {leftRenderer && <div className={cx(styles.customRenderer, styles.left)}>{leftRenderer}</div>}\n        <Text type={Text.types.TEXT2} className={styles.label}>\n          {label}\n        </Text>\n        {rightIcon ? (\n          <Icon\n            className={cx(styles.icon, styles.right, iconClassName)}\n            iconType={Icon.type.ICON_FONT}\n            clickable={false}\n            icon={rightIcon}\n            iconSize={iconSize}\n            ignoreFocusStyle\n          />\n        ) : null}\n        {rightAvatar ? (\n          <Avatar\n            withoutBorder\n            className={cx(styles.avatar, styles.right, avatarClassName)}\n            customSize={CHIPS_AVATAR_SIZE}\n            type={rightAvatarType}\n            key={id}\n            {...rightAvatarProps}\n          />\n        ) : null}\n        {rightRenderer && <div className={cx(styles.customRenderer, styles.right)}>{rightRenderer}</div>}\n        {hasCloseButton && (\n          <IconButton\n            size={IconButton.sizes.XXS}\n            color={IconButton.colors.ON_PRIMARY_COLOR}\n            className={cx(styles.icon, styles.close)}\n            ariaLabel={closeButtonAriaLabel}\n            hideTooltip\n            icon={CloseSmall}\n            onClick={onDeleteCallback}\n            data-testid={`${overrideDataTestId}-close`}\n            ref={iconButtonRef}\n          />\n        )}\n      </div>\n    );\n  }\n);\n\nexport default withStaticProps(Chips, {\n  colors: ElementAllowedColor,\n  avatarTypes: AvatarType\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}