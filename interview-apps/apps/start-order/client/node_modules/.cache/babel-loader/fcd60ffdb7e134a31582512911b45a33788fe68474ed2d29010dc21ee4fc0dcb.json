{"ast":null,"code":"import { __rest as e } from \"../../../_virtual/_tslib.js\";\nimport t, { forwardRef as s, useRef as r } from \"react\";\nimport o from \"classnames\";\nimport { camelCase as a } from \"lodash-es\";\nimport m from \"../../hooks/useMergeRef.js\";\nimport { getTestId as i } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as n } from \"../../tests/constants.js\";\nimport { BadgeType as l, BadgeAlignments as c, BadgeAnchor as d } from \"./BadgeConstants.js\";\nimport p from \"./Indicator/Indicator.js\";\nimport f from \"../Counter/Counter.js\";\nimport { getStyle as I } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport N from \"./Badge.module.scss.js\";\nvar g = s(function (s, c) {\n  var d = s.type,\n    j = void 0 === d ? g.types.INDICATOR : d,\n    u = s.anchor,\n    C = void 0 === u ? g.anchors.TOP_END : u,\n    E = s.alignment,\n    h = void 0 === E ? g.alignments.RECTANGULAR : E,\n    O = s.className,\n    T = s.id,\n    v = s[\"data-testid\"],\n    A = s.children,\n    R = e(s, [\"type\", \"anchor\", \"alignment\", \"className\", \"id\", \"data-testid\", \"children\"]),\n    b = r(null),\n    y = m(c, b),\n    D = o(N.badge, I(N, a(C)), I(N, h)),\n    B = R.color || j === l.INDICATOR ? p.colors.NOTIFICATION : f.colors.NEGATIVE;\n  return t.createElement(\"div\", {\n    ref: y,\n    className: o(N.badgeWrapper, O),\n    id: T\n  }, A, t.createElement(\"div\", {\n    className: D,\n    \"data-testid\": v || i(n.BADGE, T)\n  }, j === l.INDICATOR ? t.createElement(p, Object.assign({\n    color: B\n  }, R)) : j === l.COUNTER && t.createElement(f, Object.assign({\n    color: B\n  }, R))));\n});\ng.types = l, g.alignments = c, g.anchors = d;\nexport { g as default };","map":{"version":3,"names":["g","s","c","d","type","j","types","INDICATOR","u","anchor","C","anchors","TOP_END","E","alignment","h","alignments","RECTANGULAR","O","className","T","id","v","A","children","R","e","b","r","y","m","D","o","N","badge","I","a","B","color","l","p","colors","NOTIFICATION","f","NEGATIVE","t","createElement","ref","badgeWrapper","i","n","BADGE","Object","assign","COUNTER","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/Badge/Badge.tsx"],"sourcesContent":["import React, { forwardRef, useRef } from \"react\";\nimport cx from \"classnames\";\nimport { camelCase } from \"lodash-es\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport VibeComponent from \"../../types/VibeComponent\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { BadgeAlignments, BadgeAnchor, BadgeType } from \"./BadgeConstants\";\nimport Indicator, { IndicatorProps } from \"./Indicator/Indicator\";\nimport Counter, { CounterProps } from \"../Counter/Counter\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { IndicatorColor } from \"./Indicator/IndicatorConstants\";\nimport { CounterColor } from \"../Counter/CounterConstants\";\nimport styles from \"./Badge.module.scss\";\n\nexport interface BadgeBaseProps extends VibeComponentProps {\n  anchor?: BadgeAnchor;\n  alignment?: BadgeAlignments;\n  children: React.ReactNode;\n}\n\ninterface CounterBadgeProps extends CounterProps {\n  type: BadgeType.COUNTER;\n}\n\ninterface IndicatorBadgeProps extends IndicatorProps {\n  type?: BadgeType.INDICATOR;\n}\n\nexport type BadgeProps = BadgeBaseProps & (CounterBadgeProps | IndicatorBadgeProps);\n\nconst Badge: VibeComponent<BadgeProps> & {\n  types?: typeof BadgeType;\n  alignments?: typeof BadgeAlignments;\n  anchors?: typeof BadgeAnchor;\n} = forwardRef(\n  (\n    {\n      type = Badge.types.INDICATOR,\n      anchor = Badge.anchors.TOP_END,\n      alignment = Badge.alignments.RECTANGULAR,\n      className,\n      id,\n      \"data-testid\": dataTestId,\n      children,\n      ...badgeProps\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const badgeClassNames = cx(\n      styles.badge,\n      getStyle(styles, camelCase(anchor as unknown as string)),\n      getStyle(styles, alignment)\n    );\n\n    const color =\n      badgeProps.color || type === BadgeType.INDICATOR ? Indicator.colors.NOTIFICATION : Counter.colors.NEGATIVE;\n\n    return (\n      <div ref={mergedRef} className={cx(styles.badgeWrapper, className)} id={id}>\n        {children}\n        <div className={badgeClassNames} data-testid={dataTestId || getTestId(ComponentDefaultTestId.BADGE, id)}>\n          {type === BadgeType.INDICATOR ? (\n            <Indicator color={color as IndicatorColor} {...(badgeProps as IndicatorBadgeProps)} />\n          ) : (\n            type === BadgeType.COUNTER && (\n              <Counter color={color as CounterColor} {...(badgeProps as CounterBadgeProps)} />\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nBadge.types = BadgeType;\nBadge.alignments = BadgeAlignments;\nBadge.anchors = BadgeAnchor;\n\nexport default Badge;\n"],"mappings":";;;;;;;;;;;;AAgCM,IAAAA,CAAA,GAIFC,CAAA,CACF,UACEA,CAAA,EAUAC,CAAA;EAVA,IAAAC,CAAA,GAOUF,CAAA,CANRG,IAAA;IAAAC,CAAA,QAAO,MAAHF,CAAA,GAAGH,CAAA,CAAMM,KAAA,CAAMC,SAAA,GAASJ,CAAA;IAAAK,CAAA,GAMpBP,CAAA,CALRQ,MAAA;IAAAC,CAAA,QAAS,MAAHF,CAAA,GAAGR,CAAA,CAAMW,OAAA,CAAQC,OAAA,GAAOJ,CAAA;IAAAK,CAAA,GAKtBZ,CAAA,CAJRa,SAAA;IAAAC,CAAA,QAAY,MAAHF,CAAA,GAAGb,CAAA,CAAMgB,UAAA,CAAWC,WAAA,GAAWJ,CAAA;IACxCK,CAAA,GAGQjB,CAAA,CAHRkB,SAAA;IACAC,CAAA,GAEQnB,CAAA,CAFRoB,EAAA;IACeC,CAAA,GACPrB,CAAA,CADR;IACAsB,CAAA,GAAQtB,CAAA,CAARuB,QAAA;IACGC,CAAA,GAAUC,CAAA,CAAAzB,CAAA,EARf;IAYM0B,CAAA,GAAeC,CAAA,CAAO;IACtBC,CAAA,GAAYC,CAAA,CAAY5B,CAAA,EAAKyB,CAAA;IAC7BI,CAAA,GAAkBC,CAAA,CACtBC,CAAA,CAAOC,KAAA,EACPC,CAAA,CAASF,CAAA,EAAQG,CAAA,CAAU1B,CAAA,IAC3ByB,CAAA,CAASF,CAAA,EAAQlB,CAAA;IAGbsB,CAAA,GACJZ,CAAA,CAAWa,KAAA,IAASjC,CAAA,KAASkC,CAAA,CAAUhC,SAAA,GAAYiC,CAAA,CAAUC,MAAA,CAAOC,YAAA,GAAeC,CAAA,CAAQF,MAAA,CAAOG,QAAA;EAEpG,OACEC,CAAA,CAAKC,aAAA;IAAAC,GAAA,EAAKlB,CAAA;IAAWV,SAAA,EAAWa,CAAA,CAAGC,CAAA,CAAOe,YAAA,EAAc9B,CAAA;IAAYG,EAAA,EAAID;EAAA,GACrEG,CAAA,EACDsB,CAAA,CAAKC,aAAA;IAAA3B,SAAA,EAAWY,CAAA;IAA8B,eAAAT,CAAA,IAAc2B,CAAA,CAAUC,CAAA,CAAuBC,KAAA,EAAO/B,CAAA;EAAA,GACjGf,CAAA,KAASkC,CAAA,CAAUhC,SAAA,GAClBsC,CAAA,CAAAC,aAAA,CAACN,CAAA,EAASY,MAAA,CAAAC,MAAA;IAACf,KAAA,EAAOD;EAAA,GAA8BZ,CAAA,KAEhDpB,CAAA,KAASkC,CAAA,CAAUe,OAAA,IACjBT,CAAA,CAACC,aAAA,CAAAH,CAAA,EAAQS,MAAA,CAAAC,MAAA;IAAAf,KAAA,EAAOD;EAAA,GAA4BZ,CAAA,IAMxD;AAAA;AAGFzB,CAAA,CAAMM,KAAA,GAAQiC,CAAA,EACdvC,CAAA,CAAMgB,UAAA,GAAad,CAAA,EACnBF,CAAA,CAAMW,OAAA,GAAUR,CAAA;AAAA,SAAAH,CAAA,IAAAuD,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}