{"ast":null,"code":"import n, { useMemo as o, useContext as r, useCallback as i } from \"react\";\nimport e from \"../../hooks/useEventListener/index.js\";\nimport { useLastNavigationDirection as t } from \"../Menu/Menu/hooks/useLastNavigationDirection.js\";\nimport { getDirectionMaps as u, getOppositeDirection as a, getOutmostElementInDirection as l, getNextElementToFocusInDirection as d } from \"./helper.js\";\nvar s = n.createContext(null),\n  v = function (n, v) {\n    var c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n        disabled: !1\n      },\n      f = o(function () {\n        return u(n);\n      }, [n]),\n      b = r(s),\n      m = t().lastNavigationDirectionRef,\n      p = i(function () {\n        var n,\n          o = m.current;\n        if (o && !c.disabled) {\n          var r = a(o),\n            i = l(f, r);\n          null === (n = null == i ? void 0 : i.current) || void 0 === n || n.focus();\n        }\n      }, [f, c.disabled, m]);\n    return e({\n      eventName: \"focus\",\n      callback: p,\n      ref: v\n    }), {\n      onOutboundNavigation: i(function (n, o) {\n        var r, i;\n        if (!c.disabled) {\n          var e = d(f[o], n);\n          if (e) return null === (r = n.current) || void 0 === r || r.blur(), void (null === (i = e.current) || void 0 === i || i.focus());\n          null == b || b.onOutboundNavigation(v, o);\n        }\n      }, [f, b, v, c.disabled])\n    };\n  };\nexport { s as GridKeyboardNavigationContext, v as useGridKeyboardNavigationContext };","map":{"version":3,"names":["s","n","createContext","v","useGridKeyboardNavigationContext","c","arguments","length","disabled","f","o","u","b","r","m","t","lastNavigationDirectionRef","p","i","current","a","l","focus","e","eventName","callback","ref","onOutboundNavigation","d","blur","GridKeyboardNavigationContext"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/GridKeyboardNavigationContext/GridKeyboardNavigationContext.ts"],"sourcesContent":["import React, { useContext, useCallback, useMemo } from \"react\";\nimport useEventListener from \"../../hooks/useEventListener\";\nimport { useLastNavigationDirection } from \"../Menu/Menu/hooks/useLastNavigationDirection\";\nimport {\n  getDirectionMaps,\n  getNextElementToFocusInDirection,\n  getOppositeDirection,\n  getOutmostElementInDirection\n} from \"./helper\";\nimport { NavDirections } from \"../../hooks/useFullKeyboardListeners\";\nimport { GridElementRef, GridKeyboardNavigationContextType, Position } from \"./GridKeyboardNavigationContextConstants\";\n\nexport const GridKeyboardNavigationContext = React.createContext<GridKeyboardNavigationContextType>(null);\n\n/**\n * @param {({topElement: MutableRefObject, bottomElement: MutableRefObject}|\n * {leftElement: MutableRefObject, rightElement: MutableRefObject})[]} positions - the positions of the navigable items\n * @param {*} wrapperRef - a reference for a wrapper element which contains all the referenced elements\n * @param options - { disabled: boolean }\n */\nexport const useGridKeyboardNavigationContext = (\n  positions: Position[],\n  wrapperRef: GridElementRef,\n  options: { disabled: boolean } = { disabled: false }\n) => {\n  const directionMaps = useMemo(() => getDirectionMaps(positions), [positions]);\n  const upperContext = useContext(GridKeyboardNavigationContext);\n  const { lastNavigationDirectionRef } = useLastNavigationDirection();\n\n  const onWrapperFocus = useCallback(() => {\n    const keyboardDirection = lastNavigationDirectionRef.current;\n    if (!keyboardDirection || options.disabled) {\n      return;\n    }\n    const oppositeDirection = getOppositeDirection(keyboardDirection);\n    const refToFocus = getOutmostElementInDirection(directionMaps, oppositeDirection);\n    refToFocus?.current?.focus();\n  }, [directionMaps, options.disabled, lastNavigationDirectionRef]);\n  useEventListener({ eventName: \"focus\", callback: onWrapperFocus, ref: wrapperRef });\n\n  const onOutboundNavigation = useCallback(\n    (elementRef: GridElementRef, direction: NavDirections) => {\n      if (options.disabled) return;\n      const maybeNextElement = getNextElementToFocusInDirection(directionMaps[direction], elementRef);\n      if (maybeNextElement) {\n        elementRef.current?.blur();\n        maybeNextElement.current?.focus();\n        return;\n      }\n      // nothing on that direction - try updating the upper context\n      upperContext?.onOutboundNavigation(wrapperRef, direction);\n    },\n    [directionMaps, upperContext, wrapperRef, options.disabled]\n  );\n  return { onOutboundNavigation };\n};\n"],"mappings":";;;;AAYO,IAAMA,CAAA,GAAgCC,CAAA,CAAMC,aAAA,CAAiD;EAQvFC,CAAA,GAAmC,SAAAC,CAC9CH,CAAA,EACAE,CAAA;IAEE,IADFE,CAAA,GAAAC,SAAA,CAAAC,MAAA,mBAAAD,SAAA,MAAAA,SAAA,CAAiC;QAAEE,QAAA,GAAU;MAAA;MAEvCC,CAAA,GAAgBC,CAAA,CAAQ;QAAA,OAAMC,CAAA,CAAiBV,CAAA;MAAA,GAAY,CAACA,CAAA;MAC5DW,CAAA,GAAeC,CAAA,CAAWb,CAAA;MACxBc,CAAA,GAA+BC,CAAA,GAA/BC,0BAAA;MAEFC,CAAA,GAAiBC,CAAA,CAAY;QAAA,IAAAjB,CAAA;UAC3BS,CAAA,GAAoBI,CAAA,CAA2BK,OAAA;QACrD,IAAKT,CAAA,KAAqBL,CAAA,CAAQG,QAAA,EAAlC;UAGA,IAAMK,CAAA,GAAoBO,CAAA,CAAqBV,CAAA;YACzCQ,CAAA,GAAaG,CAAA,CAA6BZ,CAAA,EAAeI,CAAA;UAC5C,UAAnBZ,CAAA,WAAAiB,CAAA,YAAAA,CAAA,CAAYC,OAAA,UAAO,MAAAlB,CAAA,IAAAA,CAAA,CAAEqB,KAAA,EAHpB;QAAA;MAIF,GAAE,CAACb,CAAA,EAAeJ,CAAA,CAAQG,QAAA,EAAUM,CAAA;IAiBrC,OAhBAS,CAAA,CAAiB;MAAEC,SAAA,EAAW;MAASC,QAAA,EAAUR,CAAA;MAAgBS,GAAA,EAAKvB;IAAA,IAgB/D;MAAEwB,oBAAA,EAdoBT,CAAA,CAC3B,UAACjB,CAAA,EAA4BS,CAAA;QAAA,IAAAG,CAAA,EAAAK,CAAA;QAC3B,KAAIb,CAAA,CAAQG,QAAA,EAAZ;UACA,IAAMe,CAAA,GAAmBK,CAAA,CAAiCnB,CAAA,CAAcC,CAAA,GAAYT,CAAA;UACpF,IAAIsB,CAAA,EAGF,OAFoB,UAApBV,CAAA,GAAAZ,CAAA,CAAWkB,OAAA,UAAS,MAAAN,CAAA,IAAAA,CAAA,CAAAgB,IAAA,UACM,UAA1BX,CAAA,GAAAK,CAAA,CAAiBJ,OAAA,UAAS,MAAAD,CAAA,IAAAA,CAAA,CAAAI,KAAA;UAI5B,QAAAV,CAAA,IAAAA,CAAA,CAAce,oBAAA,CAAqBxB,CAAA,EAAYO,CAAA,CARzB;QAAA;MASxB,GACA,CAACD,CAAA,EAAeG,CAAA,EAAcT,CAAA,EAAYE,CAAA,CAAQG,QAAA;IAAA,CAGtD;EAAA;AAAA,SAAAR,CAAA,IAAA8B,6BAAA,EAAA3B,CAAA,IAAAC,gCAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}