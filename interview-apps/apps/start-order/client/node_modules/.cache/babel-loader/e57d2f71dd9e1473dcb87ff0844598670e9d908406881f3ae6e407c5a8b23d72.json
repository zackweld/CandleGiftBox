{"ast":null,"code":"import n from \"../../Icon/Icons/components/Sort.js\";\nimport { SkeletonType as t } from \"../../Skeleton/SkeletonConstants.js\";\nimport o from \"../../Icon/Icons/components/SortAscending.js\";\nimport e from \"../../Icon/Icons/components/SortDescending.js\";\nfunction c(n) {\n  return \"number\" == typeof n ? \"\".concat(n, \"px\") : \"string\" == typeof n ? /%|px|fr$/.test(n) ? n : \"\".concat(n, \"px\") : (null == n ? void 0 : n.min) && (null == n ? void 0 : n.max) ? \"minmax(\".concat(c(n.min), \", \").concat(c(n.max), \")\") : \"minmax(112px, 1fr)\";\n}\nfunction r(n) {\n  return Object.assign(Object.assign({}, arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}), {\n    display: \"grid\",\n    gridTemplateColumns: n.map(function (n) {\n      return c(n.width);\n    }).join(\" \")\n  });\n}\nfunction i(t) {\n  return \"asc\" === t ? o : \"desc\" === t ? e : n;\n}\nfunction s(n) {\n  return \"asc\" === n ? \"desc\" : \"desc\" === n ? \"none\" : \"asc\";\n}\nfunction m(n) {\n  return \"asc\" === n ? \"ascending\" : \"desc\" === n ? \"descending\" : \"none\";\n}\nfunction u(n) {\n  return \"circle\" === n ? t.CIRCLE : \"rectangle\" === n ? t.RECTANGLE : t.TEXT;\n}\nfunction a(n, t) {\n  return \"long-text\" === n ? [\"long-text\", \"medium-text\"][t % 2] : n;\n}\nexport { c as generateWidth, m as getAriaSort, a as getLoadingTypeForCell, s as getNextSortState, u as getSkeletonType, i as getSortIcon, r as getTableRowLayoutStyles };","map":{"version":3,"names":["c","n","concat","test","min","max","r","Object","assign","arguments","length","display","gridTemplateColumns","map","width","join","i","t","o","e","s","m","u","CIRCLE","RECTANGLE","TEXT","a","generateWidth","getAriaSort","getLoadingTypeForCell","getNextSortState","getSkeletonType","getSortIcon","getTableRowLayoutStyles"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/Table/Table/tableHelpers.ts"],"sourcesContent":["import React, { AriaAttributes } from \"react\";\nimport { ITableColumn, TableLoadingStateType } from \"./Table\";\nimport Sort from \"../../Icon/Icons/components/Sort\";\nimport { ITableHeaderCellProps } from \"../TableHeaderCell/TableHeaderCell\";\nimport { SortAscending, SortDescending } from \"../../Icon/Icons\";\nimport { SkeletonType } from \"../../Skeleton/SkeletonConstants\";\n\nexport function generateWidth(width: ITableColumn[\"width\"]): string {\n  if (typeof width === \"number\") {\n    return `${width}px`;\n  } else if (typeof width === \"string\") {\n    return /%|px|fr$/.test(width) ? width : `${width}px`;\n  } else if (width?.min && width?.max) {\n    return `minmax(${generateWidth(width.min)}, ${generateWidth(width.max)})`;\n  } else {\n    return \"minmax(112px, 1fr)\";\n  }\n}\n\nexport function getTableRowLayoutStyles(columns: ITableColumn[], style: React.CSSProperties = {}): React.CSSProperties {\n  return {\n    ...style,\n    display: \"grid\",\n    gridTemplateColumns: columns.map(cell => generateWidth(cell.width)).join(\" \")\n  };\n}\n\nexport function getSortIcon(sortState: ITableHeaderCellProps[\"sortState\"]) {\n  if (sortState === \"asc\") {\n    return SortAscending;\n  } else if (sortState === \"desc\") {\n    return SortDescending;\n  } else {\n    return Sort;\n  }\n}\n\nexport function getNextSortState(sortState: ITableHeaderCellProps[\"sortState\"]): ITableHeaderCellProps[\"sortState\"] {\n  if (sortState === \"asc\") {\n    return \"desc\";\n  } else if (sortState === \"desc\") {\n    return \"none\";\n  } else {\n    return \"asc\";\n  }\n}\n\nexport function getAriaSort(sortState: ITableHeaderCellProps[\"sortState\"]): AriaAttributes[\"aria-sort\"] {\n  if (sortState === \"asc\") {\n    return \"ascending\";\n  }\n  if (sortState === \"desc\") {\n    return \"descending\";\n  }\n  return \"none\";\n}\n\nexport function getSkeletonType(loadingStateType: TableLoadingStateType): SkeletonType {\n  if (loadingStateType === \"circle\") {\n    return SkeletonType.CIRCLE;\n  }\n  if (loadingStateType === \"rectangle\") {\n    return SkeletonType.RECTANGLE;\n  }\n  return SkeletonType.TEXT;\n}\n\nexport function getLoadingTypeForCell(\n  loadingStateType: TableLoadingStateType,\n  rowIndex: number\n): TableLoadingStateType {\n  return loadingStateType === \"long-text\"\n    ? ([\"long-text\", \"medium-text\"] as TableLoadingStateType[])[rowIndex % 2]\n    : loadingStateType;\n}\n"],"mappings":";;;;AAOM,SAAUA,EAAcC,CAAA;EAC5B,OAAqB,mBAAVA,CAAA,GACT,GAAAC,MAAA,CAAUD,CAAA,EAAK,QACW,mBAAVA,CAAA,GACT,WAAWE,IAAA,CAAKF,CAAA,IAASA,CAAA,GAAK,GAAAC,MAAA,CAAMD,CAAA,EAAS,SAC3C,QAAAA,CAAA,QAAK,IAALA,CAAA,CAAOG,GAAA,MAAO,QAAAH,CAAA,QAAK,IAALA,CAAA,CAAOI,GAAA,IAC9B,UAAAH,MAAA,CAAiBF,CAAA,CAAcC,CAAA,CAAMG,GAAA,GAAI,MAAAF,MAAA,CAAKF,CAAA,CAAcC,CAAA,CAAMI,GAAA,GAAI,OAE/D,oBAEX;AAAA;AAAA,SAEgBC,EAAwBL,CAAA;EACtC,OAAAM,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAAC,SAAA,CAAAC,MAAA,mBAAAD,SAAA,MAAAA,SAAA,MAD4F,KAElF;IACRE,OAAA,EAAS;IACTC,mBAAA,EAAqBX,CAAA,CAAQY,GAAA,CAAI,UAAAZ,CAAA;MAAI,OAAID,CAAA,CAAcC,CAAA,CAAKa,KAAA;IAAA,GAAQC,IAAA,CAAK;EAAA,EAE7E;AAAA;AAEM,SAAUC,EAAYC,CAAA;EAC1B,OAAkB,UAAdA,CAAA,GACKC,CAAA,GACgB,WAAdD,CAAA,GACFE,CAAA,GAEAlB,CAEX;AAAA;AAEM,SAAUmB,EAAiBnB,CAAA;EAC/B,OAAkB,UAAdA,CAAA,GACK,SACgB,WAAdA,CAAA,GACF,SAEA,KAEX;AAAA;AAEM,SAAUoB,EAAYpB,CAAA;EAC1B,OAAkB,UAAdA,CAAA,GACK,cAES,WAAdA,CAAA,GACK,eAEF,MACT;AAAA;AAEM,SAAUqB,EAAgBrB,CAAA;EAC9B,OAAyB,aAArBA,CAAA,GACKgB,CAAA,CAAaM,MAAA,GAEG,gBAArBtB,CAAA,GACKgB,CAAA,CAAaO,SAAA,GAEfP,CAAA,CAAaQ,IACtB;AAAA;AAEgB,SAAAC,EACdzB,CAAA,EACAgB,CAAA;EAEA,OAA4B,gBAArBhB,CAAA,GACF,CAAC,aAAa,eAA2CgB,CAAA,GAAW,KACrEhB,CACN;AAAA;AAAA,SAAAD,CAAA,IAAA2B,aAAA,EAAAN,CAAA,IAAAO,WAAA,EAAAF,CAAA,IAAAG,qBAAA,EAAAT,CAAA,IAAAU,gBAAA,EAAAR,CAAA,IAAAS,eAAA,EAAAf,CAAA,IAAAgB,WAAA,EAAA1B,CAAA,IAAA2B,uBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}