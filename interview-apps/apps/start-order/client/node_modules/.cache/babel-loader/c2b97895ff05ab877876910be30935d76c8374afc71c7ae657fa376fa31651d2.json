{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getDetachedContainerStyles;\nvar _constants = require(\"../constants\");\n\n/**\n * Calculate and return a CSS transform style to position a detached element\n * next to a reference element. The open and anchor direction indicate wether\n * it should be positioned above/below and/or to the left/right of the\n * reference element.\n *\n * Assuming r(0,0), r(1,1), d(0,0), d(1,1) for the bottom-left and top-right\n * corners of the reference and detached elements, respectively:\n *  - openDirection = DOWN, anchorDirection = LEFT => d(0,1) == r(0,1)\n *  - openDirection = UP, anchorDirection = LEFT => d(0,0) == r(0,0)\n *  - openDirection = DOWN, anchorDirection = RIGHT => d(1,1) == r(1,1)\n *  - openDirection = UP, anchorDirection = RIGHT => d(1,0) == r(1,0)\n *\n * By using a CSS transform, we allow to further position it using\n * top/bottom CSS properties for the anchor gutter.\n *\n * @param {string} openDirection The vertical positioning of the popup\n * @param {string} anchorDirection The horizontal position of the popup\n * @param {HTMLElement} referenceEl The reference element\n */\nfunction getDetachedContainerStyles(openDirection, anchorDirection, referenceEl) {\n  var referenceRect = referenceEl.getBoundingClientRect();\n  var offsetX = referenceRect.left;\n  var offsetY = referenceRect.top;\n  if (openDirection === _constants.OPEN_UP) {\n    offsetY = -(window.innerHeight - referenceRect.bottom);\n  }\n  if (anchorDirection === _constants.ANCHOR_RIGHT) {\n    offsetX = -(window.innerWidth - referenceRect.right);\n  }\n  return {\n    transform: \"translate3d(\".concat(Math.round(offsetX), \"px, \").concat(Math.round(offsetY), \"px, 0)\")\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getDetachedContainerStyles","_constants","require","openDirection","anchorDirection","referenceEl","referenceRect","getBoundingClientRect","offsetX","left","offsetY","top","OPEN_UP","window","innerHeight","bottom","ANCHOR_RIGHT","innerWidth","right","transform","concat","Math","round"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/node_modules/react-dates/lib/utils/getDetachedContainerStyles.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = getDetachedContainerStyles;\n\nvar _constants = require(\"../constants\");\n\n/**\n * Calculate and return a CSS transform style to position a detached element\n * next to a reference element. The open and anchor direction indicate wether\n * it should be positioned above/below and/or to the left/right of the\n * reference element.\n *\n * Assuming r(0,0), r(1,1), d(0,0), d(1,1) for the bottom-left and top-right\n * corners of the reference and detached elements, respectively:\n *  - openDirection = DOWN, anchorDirection = LEFT => d(0,1) == r(0,1)\n *  - openDirection = UP, anchorDirection = LEFT => d(0,0) == r(0,0)\n *  - openDirection = DOWN, anchorDirection = RIGHT => d(1,1) == r(1,1)\n *  - openDirection = UP, anchorDirection = RIGHT => d(1,0) == r(1,0)\n *\n * By using a CSS transform, we allow to further position it using\n * top/bottom CSS properties for the anchor gutter.\n *\n * @param {string} openDirection The vertical positioning of the popup\n * @param {string} anchorDirection The horizontal position of the popup\n * @param {HTMLElement} referenceEl The reference element\n */\nfunction getDetachedContainerStyles(openDirection, anchorDirection, referenceEl) {\n  var referenceRect = referenceEl.getBoundingClientRect();\n  var offsetX = referenceRect.left;\n  var offsetY = referenceRect.top;\n\n  if (openDirection === _constants.OPEN_UP) {\n    offsetY = -(window.innerHeight - referenceRect.bottom);\n  }\n\n  if (anchorDirection === _constants.ANCHOR_RIGHT) {\n    offsetX = -(window.innerWidth - referenceRect.right);\n  }\n\n  return {\n    transform: \"translate3d(\".concat(Math.round(offsetX), \"px, \").concat(Math.round(offsetY), \"px, 0)\")\n  };\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAAC,SAAS,CAAC,GAAGE,0BAA0B;AAE/C,IAAIC,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,0BAA0BA,CAACG,aAAa,EAAEC,eAAe,EAAEC,WAAW,EAAE;EAC/E,IAAIC,aAAa,GAAGD,WAAW,CAACE,qBAAqB,CAAC,CAAC;EACvD,IAAIC,OAAO,GAAGF,aAAa,CAACG,IAAI;EAChC,IAAIC,OAAO,GAAGJ,aAAa,CAACK,GAAG;EAE/B,IAAIR,aAAa,KAAKF,UAAU,CAACW,OAAO,EAAE;IACxCF,OAAO,GAAG,EAAEG,MAAM,CAACC,WAAW,GAAGR,aAAa,CAACS,MAAM,CAAC;EACxD;EAEA,IAAIX,eAAe,KAAKH,UAAU,CAACe,YAAY,EAAE;IAC/CR,OAAO,GAAG,EAAEK,MAAM,CAACI,UAAU,GAAGX,aAAa,CAACY,KAAK,CAAC;EACtD;EAEA,OAAO;IACLC,SAAS,EAAE,cAAc,CAACC,MAAM,CAACC,IAAI,CAACC,KAAK,CAACd,OAAO,CAAC,EAAE,MAAM,CAAC,CAACY,MAAM,CAACC,IAAI,CAACC,KAAK,CAACZ,OAAO,CAAC,EAAE,QAAQ;EACpG,CAAC;AACH"},"metadata":{},"sourceType":"script","externalDependencies":[]}