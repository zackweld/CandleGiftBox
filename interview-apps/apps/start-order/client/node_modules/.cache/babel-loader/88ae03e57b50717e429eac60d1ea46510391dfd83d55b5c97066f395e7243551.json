{"ast":null,"code":"var o = [{\n  color: \"--primary-color\",\n  description: \"Use to emphasise main ui components\"\n}, {\n  color: \"--primary-on-secondary-color\",\n  description: \"Use to emphasise main ui components on secondary background color\"\n}, {\n  color: \"--primary-hover-color\",\n  description: \"Use only as a hover on primary color\"\n}, {\n  color: \"--primary-hover-on-secondary-color\",\n  description: \"Use only as a hover on primary color on secondary background color\"\n}, {\n  color: \"--primary-selected-color\",\n  description: \"Use to indicate selected state of primary items\"\n}, {\n  color: \"--primary-selected-hover-color\",\n  description: \"Use to indicate hover state on a primary-selected-color items\"\n}, {\n  color: \"--primary-highlighted-color\",\n  description: \"Use this to indicate highlighted components of primary items\"\n}, {\n  color: \"--primary-surface-color\",\n  description: \"Use this as the surface of the main layout appearance\"\n}, {\n  color: \"--primary-selected-on-secondary-color\",\n  description: \"Use to indicate selected state of primary items on secondary background color\"\n}, {\n  color: \"--primary-text-color\",\n  description: \"Use for default text color\"\n}, {\n  color: \"--primary-text-on-secondary-color\",\n  description: \"Use for default text color on secondary background color\"\n}, {\n  color: \"--secondary-text-color\",\n  description: \"Use when you need text with lesser importance\"\n}, {\n  color: \"--secondary-text-on-secondary-color\",\n  description: \"Use when you need text with lesser importance (on secondary background color)\"\n}, {\n  color: \"--primary-background-hover-color\",\n  description: \"Use as hover color\"\n}, {\n  color: \"--primary-background-hover-on-secondary-color\",\n  description: \"Use as hover color on secondary color\"\n}, {\n  color: \"--inverted-color-background\",\n  description: \"Inverted background color (opposite of primary background color)\"\n}, {\n  color: \"--text-color-on-inverted\",\n  description: \"Inverted text color (opposite of primary text color)\"\n}, {\n  color: \"--text-color-on-primary\",\n  description: \"Use for text on primary color\"\n}, {\n  color: \"--fixed-light-color\",\n  description: \"Use as color that should remain light in all themes\"\n}, {\n  color: \"--fixed-dark-color\",\n  description: \"Use as color that should remain dark in all themes\"\n}, {\n  color: \"--positive-color\",\n  description: \"Use to indicate a positive action/state (success, completion, approval...)\"\n}, {\n  color: \"--positive-color-hover\",\n  description: \"Use only as hover color on positive color\"\n}, {\n  color: \"--positive-color-selected\",\n  description: \"Use only as selected indication for a positive colors\"\n}, {\n  color: \"--positive-color-selected-hover\",\n  description: \"Use to indicate hover state on a positive-color-selected items\"\n}, {\n  color: \"--negative-color\",\n  description: \"Use to indicate a negative action/state (delete, error...)\"\n}, {\n  color: \"--negative-color-hover\",\n  description: \"Use only as hover color on negative color\"\n}, {\n  color: \"--negative-color-selected\",\n  description: \"Use as selected indication for negative colors\"\n}, {\n  color: \"--negative-color-selected-hover\",\n  description: \"Use to indicate hover state on a negative-selected items\"\n}, {\n  color: \"--private-color\",\n  description: \"Use to indicate that something is private (board, icons...)\"\n}, {\n  color: \"--shareable-color\",\n  description: \"Use to indicate that something is shareable (board, dashboard...)\"\n}, {\n  color: \"--warning-color\",\n  description: \"Use to indicate a warning action/state (severity, alert, caution...)\"\n}, {\n  color: \"--warning-color-hover\",\n  description: \"Use only as hover color on warning color\"\n}, {\n  color: \"--warning-color-selected\",\n  description: \"Use as selected indication for warning colors\"\n}, {\n  color: \"--warning-color-selected-hover\",\n  description: \"Use to indicate hover state on a warning-selected items\"\n}, {\n  color: \"--ui-border-color\",\n  description: \"Border color for ui elements and components (Button, Input...)\"\n}, {\n  color: \"--ui-border-on-secondary-color\",\n  description: \"Border color for ui elements on secondary color\"\n}, {\n  color: \"--layout-border-color\",\n  description: \"Border color for general layout and separators (Leftpane, Menu Divider...)\"\n}, {\n  color: \"--layout-border-on-secondary-color\",\n  description: \"Border color for general layout on secondary background color\"\n}, {\n  color: \"--placeholder-color\",\n  description: \"Use for placeholder text in inputs fields\"\n}, {\n  color: \"--placeholder-on-secondary-color\",\n  description: \"Use for placeholder text in inputs fields on secondary background color\"\n}, {\n  color: \"--icon-color\",\n  description: \"Default color for icons\"\n}, {\n  color: \"--icon-on-secondary-color\",\n  description: \"Default color for icons on secondary background color\"\n}, {\n  color: \"--disabled-background-color\",\n  description: \"Use as background for disabled elements (ui hovers or elements)\"\n}, {\n  color: \"--disabled-text-color\",\n  description: \"Use as text in disabled components\"\n}, {\n  color: \"--disabled-background-on-secondary-color\",\n  description: \"Use as background for disabled elements on secondary background\"\n}, {\n  color: \"--disabled-text-on-secondary-color\",\n  description: \"Use as text in disabled components on secondary background color\"\n}, {\n  color: \"--link-color\",\n  description: \"Use only for links\"\n}, {\n  color: \"--link-on-secondary-color\",\n  description: \"Use only for links on secondary colors\"\n}, {\n  color: \"--primary-background-color\",\n  description: \"Primary background color\"\n}, {\n  color: \"--secondary-background-color\",\n  description: \"Secondary background color\"\n}, {\n  color: \"--grey-background-color\",\n  description: \"Grey background color\"\n}, {\n  color: \"--allgrey-background-color\",\n  description: \"Grey background color, stays grey in dark and black themes\"\n}, {\n  color: \"--ui-background-color\",\n  description: \"Background color for UI elements and components\"\n}];\no.reduce(function (o, e) {\n  var r = e.color.substring(2);\n  return o.set(r, e.description), o;\n}, new Map());\nvar e,\n  r,\n  c,\n  i,\n  n = [\"grass_green\", \"done-green\", \"bright-green\", \"saladish\", \"egg_yolk\", \"working_orange\", \"dark-orange\", \"peach\", \"sunset\", \"stuck-red\", \"dark-red\", \"sofia_pink\", \"lipstick\", \"bubble\", \"purple\", \"dark_purple\", \"berry\", \"dark_indigo\", \"indigo\", \"navy\", \"bright-blue\", \"dark-blue\", \"aquamarine\", \"chili-blue\", \"river\", \"winter\", \"explosive\", \"american_gray\", \"blackish\", \"brown\", \"orchid\", \"tan\", \"sky\", \"coffee\", \"royal\", \"teal\", \"lavender\", \"steel\", \"lilac\", \"pecan\"];\n!function (o) {\n  o.REGULAR = \"regular\", o.HOVER = \"hover\", o.SELECTED = \"selected\";\n}(e || (e = {})), function (o) {\n  o.GRASS_GREEN = \"grass_green\", o.DONE_GREEN = \"done-green\", o.BRIGHT_GREEN = \"bright-green\", o.SALADISH = \"saladish\", o.EGG_YOLK = \"egg_yolk\", o.WORKING_ORANGE = \"working_orange\", o.DARK_ORANGE = \"dark-orange\", o.PEACH = \"peach\", o.SUNSET = \"sunset\", o.STUCK_RED = \"stuck-red\", o.DARK_RED = \"dark-red\", o.SOFIA_PINK = \"sofia_pink\", o.LIPSTICK = \"lipstick\", o.BUBBLE = \"bubble\", o.PURPLE = \"purple\", o.DARK_PURPLE = \"dark_purple\", o.BERRY = \"berry\", o.DARK_INDIGO = \"dark_indigo\", o.INDIGO = \"indigo\", o.NAVY = \"navy\", o.BRIGHT_BLUE = \"bright-blue\", o.DARK_BLUE = \"dark-blue\", o.AQUAMARINE = \"aquamarine\", o.CHILI_BLUE = \"chili-blue\", o.RIVER = \"river\", o.WINTER = \"winter\", o.EXPLOSIVE = \"explosive\", o.AMERICAN_GRAY = \"american_gray\", o.BLACKISH = \"blackish\", o.BROWN = \"brown\", o.ORCHID = \"orchid\", o.TAN = \"tan\", o.SKY = \"sky\", o.COFFEE = \"coffee\", o.ROYAL = \"royal\", o.TEAL = \"teal\", o.LAVENDER = \"lavender\", o.STEEL = \"steel\", o.LILAC = \"lilac\", o.PECAN = \"pecan\";\n}(r || (r = {})), function (o) {\n  o.POSITIVE = \"--positive-color-selected\", o.NEGATIVE = \"--negative-color-selected\", o.PRIMARY = \"--primary-selected-color\", o.WARNING = \"--warning-color-selected\";\n}(c || (c = {})), function (o) {\n  o.POSITIVE = \"--positive-color-selected-hover\", o.NEGATIVE = \"--negative-color-selected-hover\", o.PRIMARY = \"--primary-selected-hover-color\";\n}(i || (i = {}));\nvar t = Object.assign(Object.assign(Object.assign({}, r), c), i);\nObject.values(t).reduce(function (o, e) {\n  return o[e] = e, o;\n}, {});\nfunction a(o) {\n  var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n    n = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],\n    a = function (o, e) {\n      return Object.keys(e)[Object.values(e).indexOf(o)];\n    }(o, t);\n  return a ? r[a] ? \"var(--color-\".concat(r[a]).concat(e ? \"-selected\" : \"\", \")\") : i[a] && n ? \"var(\".concat(i[a], \")\") : c[a] && e ? \"var(\".concat(c[a], \")\") : void 0 : o;\n}\nexport { e as ColorStyle, r as ContentColorByName, t as ElementAllowedColor, c as StateSelectedColor, i as StateSelectedHoverColor, o as colorsMap, n as contentColors, a as getElementColor };","map":{"version":3,"names":["o","color","description","reduce","e","r","substring","set","Map","c","i","n","REGULAR","HOVER","SELECTED","GRASS_GREEN","DONE_GREEN","BRIGHT_GREEN","SALADISH","EGG_YOLK","WORKING_ORANGE","DARK_ORANGE","PEACH","SUNSET","STUCK_RED","DARK_RED","SOFIA_PINK","LIPSTICK","BUBBLE","PURPLE","DARK_PURPLE","BERRY","DARK_INDIGO","INDIGO","NAVY","BRIGHT_BLUE","DARK_BLUE","AQUAMARINE","CHILI_BLUE","RIVER","WINTER","EXPLOSIVE","AMERICAN_GRAY","BLACKISH","BROWN","ORCHID","TAN","SKY","COFFEE","ROYAL","TEAL","LAVENDER","STEEL","LILAC","PECAN","POSITIVE","NEGATIVE","PRIMARY","WARNING","t","Object","assign","values","a","arguments","length","keys","indexOf","concat","ColorStyle","ContentColorByName","ElementAllowedColor","StateSelectedColor","StateSelectedHoverColor","colorsMap","contentColors","getElementColor"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/utils/colors-vars-map.ts"],"sourcesContent":["export const colorsMap = [\n  { color: \"--primary-color\", description: \"Use to emphasise main ui components\" },\n  {\n    color: \"--primary-on-secondary-color\",\n    description: \"Use to emphasise main ui components on secondary background color\"\n  },\n  { color: \"--primary-hover-color\", description: \"Use only as a hover on primary color\" },\n  {\n    color: \"--primary-hover-on-secondary-color\",\n    description: \"Use only as a hover on primary color on secondary background color\"\n  },\n  { color: \"--primary-selected-color\", description: \"Use to indicate selected state of primary items\" },\n  {\n    color: \"--primary-selected-hover-color\",\n    description: \"Use to indicate hover state on a primary-selected-color items\"\n  },\n  {\n    color: \"--primary-highlighted-color\",\n    description: \"Use this to indicate highlighted components of primary items\"\n  },\n  {\n    color: \"--primary-surface-color\",\n    description: \"Use this as the surface of the main layout appearance\"\n  },\n  {\n    color: \"--primary-selected-on-secondary-color\",\n    description: \"Use to indicate selected state of primary items on secondary background color\"\n  },\n  { color: \"--primary-text-color\", description: \"Use for default text color\" },\n  {\n    color: \"--primary-text-on-secondary-color\",\n    description: \"Use for default text color on secondary background color\"\n  },\n  { color: \"--secondary-text-color\", description: \"Use when you need text with lesser importance\" },\n  {\n    color: \"--secondary-text-on-secondary-color\",\n    description: \"Use when you need text with lesser importance (on secondary background color)\"\n  },\n  { color: \"--primary-background-hover-color\", description: \"Use as hover color\" },\n  { color: \"--primary-background-hover-on-secondary-color\", description: \"Use as hover color on secondary color\" },\n  {\n    color: \"--inverted-color-background\",\n    description: \"Inverted background color (opposite of primary background color)\"\n  },\n  { color: \"--text-color-on-inverted\", description: \"Inverted text color (opposite of primary text color)\" },\n  { color: \"--text-color-on-primary\", description: \"Use for text on primary color\" },\n  { color: \"--fixed-light-color\", description: \"Use as color that should remain light in all themes\" },\n  { color: \"--fixed-dark-color\", description: \"Use as color that should remain dark in all themes\" },\n  // states\n  {\n    color: \"--positive-color\",\n    description: \"Use to indicate a positive action/state (success, completion, approval...)\"\n  },\n  { color: \"--positive-color-hover\", description: \"Use only as hover color on positive color\" },\n  { color: \"--positive-color-selected\", description: \"Use only as selected indication for a positive colors\" },\n  {\n    color: \"--positive-color-selected-hover\",\n    description: \"Use to indicate hover state on a positive-color-selected items\"\n  },\n  {\n    color: \"--negative-color\",\n    description: \"Use to indicate a negative action/state (delete, error...)\"\n  },\n  { color: \"--negative-color-hover\", description: \"Use only as hover color on negative color\" },\n  { color: \"--negative-color-selected\", description: \"Use as selected indication for negative colors\" },\n  {\n    color: \"--negative-color-selected-hover\",\n    description: \"Use to indicate hover state on a negative-selected items\"\n  },\n  {\n    color: \"--private-color\",\n    description: \"Use to indicate that something is private (board, icons...)\"\n  },\n  {\n    color: \"--shareable-color\",\n    description: \"Use to indicate that something is shareable (board, dashboard...)\"\n  },\n  {\n    color: \"--warning-color\",\n    description: \"Use to indicate a warning action/state (severity, alert, caution...)\"\n  },\n  { color: \"--warning-color-hover\", description: \"Use only as hover color on warning color\" },\n  { color: \"--warning-color-selected\", description: \"Use as selected indication for warning colors\" },\n  {\n    color: \"--warning-color-selected-hover\",\n    description: \"Use to indicate hover state on a warning-selected items\"\n  },\n  // borders\n  { color: \"--ui-border-color\", description: \"Border color for ui elements and components (Button, Input...)\" },\n  { color: \"--ui-border-on-secondary-color\", description: \"Border color for ui elements on secondary color\" },\n  {\n    color: \"--layout-border-color\",\n    description: \"Border color for general layout and separators (Leftpane, Menu Divider...)\"\n  },\n  {\n    color: \"--layout-border-on-secondary-color\",\n    description: \"Border color for general layout on secondary background color\"\n  },\n  { color: \"--placeholder-color\", description: \"Use for placeholder text in inputs fields\" },\n  {\n    color: \"--placeholder-on-secondary-color\",\n    description: \"Use for placeholder text in inputs fields on secondary background color\"\n  },\n  { color: \"--icon-color\", description: \"Default color for icons\" },\n  { color: \"--icon-on-secondary-color\", description: \"Default color for icons on secondary background color\" },\n  // disabled\n  {\n    color: \"--disabled-background-color\",\n    description: \"Use as background for disabled elements (ui hovers or elements)\"\n  },\n  { color: \"--disabled-text-color\", description: \"Use as text in disabled components\" },\n  {\n    color: \"--disabled-background-on-secondary-color\",\n    description: \"Use as background for disabled elements on secondary background\"\n  },\n  {\n    color: \"--disabled-text-on-secondary-color\",\n    description: \"Use as text in disabled components on secondary background color\"\n  },\n  // Link\n  { color: \"--link-color\", description: \"Use only for links\" },\n  { color: \"--link-on-secondary-color\", description: \"Use only for links on secondary colors\" },\n  // Backgrounds\n  { color: \"--primary-background-color\", description: \"Primary background color\" },\n  { color: \"--secondary-background-color\", description: \"Secondary background color\" },\n  { color: \"--grey-background-color\", description: \"Grey background color\" },\n  { color: \"--allgrey-background-color\", description: \"Grey background color, stays grey in dark and black themes\" },\n  { color: \"--ui-background-color\", description: \"Background color for UI elements and components\" }\n];\n\nexport const colorsHashMap = colorsMap.reduce((map, current) => {\n  const newColorName = current.color.substring(2);\n  map.set(newColorName, current.description);\n  return map;\n}, new Map());\n\nexport const contentColors = [\n  \"grass_green\",\n  \"done-green\",\n  \"bright-green\",\n  \"saladish\",\n  \"egg_yolk\",\n  \"working_orange\",\n  \"dark-orange\",\n  \"peach\",\n  \"sunset\",\n  \"stuck-red\",\n  \"dark-red\",\n  \"sofia_pink\",\n  \"lipstick\",\n  \"bubble\",\n  \"purple\",\n  \"dark_purple\",\n  \"berry\",\n  \"dark_indigo\",\n  \"indigo\",\n  \"navy\",\n  \"bright-blue\",\n  \"dark-blue\",\n  \"aquamarine\",\n  \"chili-blue\",\n  \"river\",\n  \"winter\",\n  \"explosive\",\n  \"american_gray\",\n  \"blackish\",\n  \"brown\",\n  \"orchid\",\n  \"tan\",\n  \"sky\",\n  \"coffee\",\n  \"royal\",\n  \"teal\",\n  \"lavender\",\n  \"steel\",\n  \"lilac\",\n  \"pecan\"\n] as const;\n\nexport type CONTENT_COLORS_VALUES = (typeof contentColors)[number];\n\nexport enum ColorStyle {\n  REGULAR = \"regular\",\n  HOVER = \"hover\",\n  SELECTED = \"selected\"\n}\n\nexport enum ContentColorByName {\n  GRASS_GREEN = \"grass_green\",\n  DONE_GREEN = \"done-green\",\n  BRIGHT_GREEN = \"bright-green\",\n  SALADISH = \"saladish\",\n  EGG_YOLK = \"egg_yolk\",\n  WORKING_ORANGE = \"working_orange\",\n  DARK_ORANGE = \"dark-orange\",\n  PEACH = \"peach\",\n  SUNSET = \"sunset\",\n  STUCK_RED = \"stuck-red\",\n  DARK_RED = \"dark-red\",\n  SOFIA_PINK = \"sofia_pink\",\n  LIPSTICK = \"lipstick\",\n  BUBBLE = \"bubble\",\n  PURPLE = \"purple\",\n  DARK_PURPLE = \"dark_purple\",\n  BERRY = \"berry\",\n  DARK_INDIGO = \"dark_indigo\",\n  INDIGO = \"indigo\",\n  NAVY = \"navy\",\n  BRIGHT_BLUE = \"bright-blue\",\n  DARK_BLUE = \"dark-blue\",\n  AQUAMARINE = \"aquamarine\",\n  CHILI_BLUE = \"chili-blue\",\n  RIVER = \"river\",\n  WINTER = \"winter\",\n  EXPLOSIVE = \"explosive\",\n  AMERICAN_GRAY = \"american_gray\",\n  BLACKISH = \"blackish\",\n  BROWN = \"brown\",\n  ORCHID = \"orchid\",\n  TAN = \"tan\",\n  SKY = \"sky\",\n  COFFEE = \"coffee\",\n  ROYAL = \"royal\",\n  TEAL = \"teal\",\n  LAVENDER = \"lavender\",\n  STEEL = \"steel\",\n  LILAC = \"lilac\",\n  PECAN = \"pecan\"\n}\n\nexport enum StateSelectedColor {\n  POSITIVE = \"--positive-color-selected\",\n  NEGATIVE = \"--negative-color-selected\",\n  PRIMARY = \"--primary-selected-color\",\n  WARNING = \"--warning-color-selected\"\n}\nexport enum StateSelectedHoverColor {\n  POSITIVE = \"--positive-color-selected-hover\",\n  NEGATIVE = \"--negative-color-selected-hover\",\n  PRIMARY = \"--primary-selected-hover-color\"\n}\n\nexport const ElementAllowedColor = {\n  ...ContentColorByName,\n  ...StateSelectedColor,\n  ...StateSelectedHoverColor\n};\n\nexport type ElementColor = (typeof ElementAllowedColor)[keyof typeof ElementAllowedColor] | string;\n\nexport const elementColorsNames = Object.values(ElementAllowedColor).reduce((acc: Record<string, string>, key) => {\n  acc[key] = key;\n  return acc;\n}, {});\n\nconst getColorKeyByValue = (colorValue: string, colors: Record<string, string>) => {\n  return Object.keys(colors)[Object.values(colors).indexOf(colorValue)];\n};\n\nexport function getElementColor(\n  colorValue: keyof typeof ElementAllowedColor | string,\n  isSelectedPalette = false,\n  isSelectedHoverPalette = false\n): string {\n  const colorKey = getColorKeyByValue(colorValue, ElementAllowedColor);\n  if (!colorKey) {\n    return colorValue;\n  }\n\n  if (ContentColorByName[colorKey as keyof typeof ContentColorByName]) {\n    return `var(--color-${ContentColorByName[colorKey as keyof typeof ContentColorByName]}${\n      isSelectedPalette ? \"-selected\" : \"\"\n    })`;\n  }\n  if (StateSelectedHoverColor[colorKey as keyof typeof StateSelectedHoverColor] && isSelectedHoverPalette) {\n    return `var(${StateSelectedHoverColor[colorKey as keyof typeof StateSelectedHoverColor]})`;\n  }\n  if (StateSelectedColor[colorKey as keyof typeof StateSelectedColor] && isSelectedPalette) {\n    return `var(${StateSelectedColor[colorKey as keyof typeof StateSelectedColor]})`;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}