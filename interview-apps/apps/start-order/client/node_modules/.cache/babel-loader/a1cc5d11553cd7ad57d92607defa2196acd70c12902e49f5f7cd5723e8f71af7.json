{"ast":null,"code":"import e, { forwardRef as o, useRef as s, useMemo as t, Fragment as i } from \"react\";\nimport r from \"classnames\";\nimport { noop as a } from \"lodash-es\";\nimport n from \"../../hooks/useMergeRef.js\";\nimport c from \"../Tooltip/Tooltip.js\";\nimport d from \"../Icon/Icon.js\";\nimport l from \"../Icon/Icons/components/AddSmall.js\";\nimport { getWidthHeight as p } from \"./services/IconButton-helpers.js\";\nimport { withStaticProps as m } from \"../../types/withStaticProps.js\";\nimport { getTestId as u } from \"../../tests/testIds.js\";\nimport { ComponentDefaultTestId as f } from \"../../tests/constants.js\";\nimport { backwardCompatibilityForProperties as b } from \"../../helpers/backwardCompatibilityForProperties.js\";\nimport v from \"../Button/Button.js\";\nimport { BUTTON_ICON_SIZE as j } from \"../Button/ButtonConstants.js\";\nimport { getStyle as I } from \"../../helpers/typesciptCssModulesHelper.js\";\nimport C from \"./IconButton.module.scss.js\";\nvar y = o(function (o, m) {\n    var g = o.className,\n      h = o.wrapperClassName,\n      k = o.iconClassName,\n      z = o.id,\n      E = o.icon,\n      N = void 0 === E ? l : E,\n      B = o.size,\n      S = void 0 === B ? y.sizes.MEDIUM : B,\n      T = o.tooltipProps,\n      L = void 0 === T ? {} : T,\n      M = o.tooltipContent,\n      O = o.ariaLabeledBy,\n      P = o.ariaLabel,\n      w = o.ariaHasPopup,\n      x = o.ariaExpanded,\n      R = o.ariaControls,\n      A = o[\"aria-describedby\"],\n      F = o[\"aria-hidden\"],\n      H = o.hideTooltip,\n      U = void 0 !== H && H,\n      X = o.kind,\n      D = void 0 === X ? y.kinds.TERTIARY : X,\n      G = o.active,\n      W = o.disabled,\n      V = void 0 !== W && W,\n      Y = o.disabledReason,\n      _ = o.onClick,\n      q = void 0 === _ ? a : _,\n      J = o.color,\n      K = o.dataTestId,\n      Q = o[\"data-testid\"],\n      Z = o.insetFocus,\n      $ = void 0 !== Z && Z,\n      ee = o.tabIndex,\n      oe = o.loading,\n      se = void 0 !== oe && oe,\n      te = s(null),\n      ie = n(m, te),\n      re = b([Q, K]),\n      ae = t(function () {\n        return (null == L ? void 0 : L.content) || M;\n      }, [null == L ? void 0 : L.content, M]),\n      ne = t(function () {\n        return P || (\"string\" == typeof ae ? ae : void 0);\n      }, [P, ae]),\n      ce = t(function () {\n        switch (S) {\n          case y.sizes.XXS:\n          case y.sizes.XS:\n            return 16;\n          case y.sizes.SMALL:\n          case y.sizes.MEDIUM:\n          case y.sizes.LARGE:\n            return j;\n          default:\n            return 24;\n        }\n      }, [S]),\n      de = t(function () {\n        var e = {\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          padding: 0\n        };\n        return S && (e = Object.assign(Object.assign({}, e), p(S))), e;\n      }, [S]),\n      le = t(function () {\n        return U ? null : V && Y ? Y : ae || P;\n      }, [U, V, Y, ae, P]),\n      pe = h ? \"div\" : i,\n      me = t(function () {\n        return h ? {\n          className: r(h, C.wrapper)\n        } : {};\n      }, [h]);\n    return e.createElement(pe, Object.assign({}, me), e.createElement(c, Object.assign({}, L, {\n      content: le,\n      referenceWrapperClassName: C.referenceWrapper\n    }), e.createElement(v, {\n      onClick: q,\n      disabled: V,\n      color: J,\n      kind: D,\n      ariaLabeledBy: O,\n      ariaLabel: ne,\n      ariaHasPopup: w,\n      ariaExpanded: x,\n      ariaControls: R,\n      \"aria-describedby\": A,\n      \"aria-hidden\": F,\n      ref: ie,\n      id: z,\n      \"data-testid\": re || u(f.ICON_BUTTON, z),\n      noSidePadding: !0,\n      active: G,\n      className: g,\n      style: de,\n      insetFocus: $,\n      tabIndex: ee,\n      loading: se,\n      loaderClassName: r(C.loader, I(C, S))\n    }, e.createElement(d, {\n      icon: N,\n      iconType: d.type.SVG,\n      iconSize: ce,\n      ignoreFocusStyle: !0,\n      className: k,\n      clickable: !1\n    }))));\n  }),\n  g = m(y, {\n    sizes: v.sizes,\n    kinds: v.kinds,\n    colors: v.colors\n  });\nexport { g as default };","map":{"version":3,"names":["y","o","m","g","className","h","wrapperClassName","k","iconClassName","z","id","E","icon","N","l","B","size","S","sizes","MEDIUM","T","tooltipProps","L","M","tooltipContent","O","ariaLabeledBy","P","ariaLabel","w","ariaHasPopup","x","ariaExpanded","R","ariaControls","A","F","H","hideTooltip","U","X","kind","D","kinds","TERTIARY","G","active","W","disabled","V","Y","disabledReason","_","onClick","q","a","J","color","K","dataTestId","Q","Z","insetFocus","$","ee","tabIndex","oe","loading","se","te","s","ie","n","re","b","ae","t","content","ne","ce","XXS","XS","SMALL","LARGE","j","de","e","justifyContent","alignItems","padding","Object","assign","p","le","pe","i","me","r","C","wrapper","createElement","c","referenceWrapperClassName","referenceWrapper","v","ref","u","f","ICON_BUTTON","noSidePadding","style","loaderClassName","loader","I","d","iconType","type","SVG","iconSize","ignoreFocusStyle","clickable","colors","default"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/IconButton/IconButton.tsx"],"sourcesContent":["import React, { AriaAttributes, forwardRef, Fragment, useMemo, useRef } from \"react\";\nimport cx from \"classnames\";\nimport { noop as NOOP } from \"lodash-es\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport Tooltip, { TooltipProps } from \"../Tooltip/Tooltip\";\nimport Icon from \"../Icon/Icon\";\nimport AddSmall from \"../Icon/Icons/components/AddSmall\";\nimport { getWidthHeight, Size } from \"./services/IconButton-helpers\";\nimport { SubIcon, VibeComponent, VibeComponentProps, withStaticProps } from \"../../types\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { backwardCompatibilityForProperties } from \"../../helpers/backwardCompatibilityForProperties\";\nimport Button from \"../Button/Button\";\nimport { BUTTON_ICON_SIZE, ButtonColor, ButtonType } from \"../Button/ButtonConstants\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport styles from \"./IconButton.module.scss\";\n\nexport interface IconButtonProps extends VibeComponentProps {\n  /**\n   * id to be added to the element\n   */\n  id?: string;\n  /**\n   * callback function when clicking the icon button\n   */\n  onClick?: (event: React.MouseEvent) => void;\n  /**\n   * the class name of the button wrapper\n   */\n  wrapperClassName?: string;\n  /**\n   * the class name of the button icon\n   */\n  iconClassName?: string;\n  /**\n   * Icon to be rendered\n   */\n  icon?: SubIcon;\n  /**\n   * element id to describe the button accordingly\n   * */\n  ariaLabeledBy?: string;\n  /**\n   * a11y property to be added, used for screen reader to know what kind of button it is\n   */\n  ariaLabel?: string;\n  /**\n   * aria for a button popup\n   */\n  ariaHasPopup?: React.HTMLProps<HTMLButtonElement>[\"aria-haspopup\"];\n  /**\n   * a11y property to be added, used for screen reader to know if the button is expanded\n   */\n  ariaExpanded?: boolean;\n  /**\n   * aria controls - receives id for the controlled region\n   */\n  ariaControls?: string;\n  \"aria-describedby\"?: AriaAttributes[\"aria-describedby\"];\n  /**\n   * a11y property to be added, used for screen reader to know if the button is hidden\n   */\n  \"aria-hidden\"?: AriaAttributes[\"aria-hidden\"];\n  /**\n   * Size of the icon\n   */\n  size?: Size;\n  /**\n   * Whether the tooltip should be displayed or not\n   */\n  hideTooltip?: boolean;\n  /**\n   * Props for Tooltip component\n   */\n  tooltipProps?: Partial<TooltipProps>;\n  /**\n   * Tooltip wraps the button icon, it will display in the tooltip, if not present the aria label will be shown\n   */\n  tooltipContent?: string;\n  /**\n   * Kind of button - like <Button />\n   */\n  kind?: ButtonType;\n  active?: boolean;\n  /** The button's color  */\n  color?: ButtonColor;\n  /**\n   * disabled state\n   */\n  disabled?: boolean;\n  /**\n   * if disabled - this will be shown in the tooltip\n   */\n  disabledReason?: string;\n  /**\n   * @deprecated - use \"data-testid\" instead\n   */\n  dataTestId?: string;\n  /** Change the focus indicator from around the button to within it */\n  insetFocus?: boolean;\n  /** Specifies the tab order of an element */\n  tabIndex?: number;\n  /** Show a loader instead of the icon  */\n  loading?: boolean;\n}\n\nconst IconButton: VibeComponent<IconButtonProps> & {\n  sizes?: typeof Button.sizes;\n  kinds?: typeof Button.kinds;\n  colors?: typeof Button.colors;\n} = forwardRef(\n  (\n    {\n      className,\n      wrapperClassName,\n      iconClassName,\n      id,\n      icon = AddSmall,\n      size = IconButton.sizes.MEDIUM,\n      tooltipProps = {} as TooltipProps,\n      tooltipContent,\n      ariaLabeledBy,\n      ariaLabel,\n      ariaHasPopup,\n      ariaExpanded,\n      ariaControls,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-hidden\": ariaHidden,\n      hideTooltip = false,\n      kind = IconButton.kinds.TERTIARY,\n      active,\n      disabled = false,\n      disabledReason,\n      onClick = NOOP,\n      color,\n      dataTestId: backwardCompatabilityDataTestId,\n      \"data-testid\": dataTestId,\n      insetFocus = false,\n      tabIndex,\n      loading = false\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const overrideDataTestId = backwardCompatibilityForProperties([dataTestId, backwardCompatabilityDataTestId]);\n    const overrideTooltipContent = useMemo(\n      () => tooltipProps?.content || tooltipContent,\n      [tooltipProps?.content, tooltipContent]\n    );\n\n    const buttonAriaLabel = useMemo(() => {\n      if (ariaLabel) return ariaLabel;\n      if (typeof overrideTooltipContent === \"string\") return overrideTooltipContent;\n      return undefined;\n    }, [ariaLabel, overrideTooltipContent]);\n\n    const iconSize = useMemo(() => {\n      switch (size) {\n        case IconButton.sizes.XXS:\n        case IconButton.sizes.XS:\n          return 16;\n        case IconButton.sizes.SMALL:\n        case IconButton.sizes.MEDIUM:\n        case IconButton.sizes.LARGE:\n          return BUTTON_ICON_SIZE;\n        default:\n          return 24;\n      }\n    }, [size]);\n\n    const overrideStyle = useMemo(() => {\n      let style = {\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        padding: 0\n      } as React.CSSProperties;\n\n      if (size) {\n        style = { ...style, ...getWidthHeight(size) };\n      }\n      return style;\n    }, [size]);\n\n    const calculatedTooltipContent = useMemo(() => {\n      if (hideTooltip) return null;\n      if (disabled && disabledReason) return disabledReason;\n      if (overrideTooltipContent) return overrideTooltipContent as never;\n      return ariaLabel;\n    }, [hideTooltip, disabled, disabledReason, overrideTooltipContent, ariaLabel]);\n\n    const IconButtonWrapper = wrapperClassName ? \"div\" : Fragment;\n    const iconButtonWrapperProps = useMemo(() => {\n      return wrapperClassName ? { className: cx(wrapperClassName, styles.wrapper) } : {};\n    }, [wrapperClassName]);\n\n    return (\n      <IconButtonWrapper {...iconButtonWrapperProps}>\n        <Tooltip\n          {...tooltipProps}\n          content={calculatedTooltipContent}\n          referenceWrapperClassName={styles.referenceWrapper}\n        >\n          <Button\n            onClick={onClick}\n            disabled={disabled}\n            color={color}\n            kind={kind}\n            ariaLabeledBy={ariaLabeledBy}\n            ariaLabel={buttonAriaLabel}\n            ariaHasPopup={ariaHasPopup}\n            ariaExpanded={ariaExpanded}\n            ariaControls={ariaControls}\n            aria-describedby={ariaDescribedBy}\n            aria-hidden={ariaHidden}\n            ref={mergedRef}\n            id={id}\n            data-testid={overrideDataTestId || getTestId(ComponentDefaultTestId.ICON_BUTTON, id)}\n            noSidePadding\n            active={active}\n            className={className}\n            style={overrideStyle}\n            insetFocus={insetFocus}\n            tabIndex={tabIndex}\n            loading={loading}\n            loaderClassName={cx(styles.loader, getStyle(styles, size))}\n          >\n            <Icon\n              icon={icon}\n              iconType={Icon.type.SVG}\n              iconSize={iconSize}\n              ignoreFocusStyle\n              className={iconClassName}\n              clickable={false}\n            />\n          </Button>\n        </Tooltip>\n      </IconButtonWrapper>\n    );\n  }\n);\n\nexport default withStaticProps(IconButton, {\n  sizes: Button.sizes,\n  kinds: Button.kinds,\n  colors: Button.colors\n});\n"],"mappings":";;;;;;;;;;;;;;;;AA0GA,IAAMA,CAAA,GAIFC,CAAA,CACF,UAAAA,CAAA,EA8BEC,CAAA;IACE,IA7BAC,CAAA,GAASF,CAAA,CAATG,SAAA;MACAC,CAAA,GAAgBJ,CAAA,CAAhBK,gBAAA;MACAC,CAAA,GAAaN,CAAA,CAAbO,aAAA;MACAC,CAAA,GAAER,CAAA,CAAFS,EAAA;MAAEC,CAAA,GAAAV,CAAA,CACFW,IAAA;MAAAC,CAAA,QAAO,MAAHF,CAAA,GAAGG,CAAA,GAAQH,CAAA;MAAAI,CAAA,GAAAd,CAAA,CACfe,IAAA;MAAAC,CAAA,QAAO,MAAHF,CAAA,GAAGf,CAAA,CAAWkB,KAAA,CAAMC,MAAA,GAAMJ,CAAA;MAAAK,CAAA,GAAAnB,CAAA,CAC9BoB,YAAA;MAAAC,CAAA,QAAY,MAAAF,CAAA,GAAG,CAAkB,IAAAA,CAAA;MACjCG,CAAA,GAActB,CAAA,CAAduB,cAAA;MACAC,CAAA,GAAaxB,CAAA,CAAbyB,aAAA;MACAC,CAAA,GAAS1B,CAAA,CAAT2B,SAAA;MACAC,CAAA,GAAY5B,CAAA,CAAZ6B,YAAA;MACAC,CAAA,GAAY9B,CAAA,CAAZ+B,YAAA;MACAC,CAAA,GAAYhC,CAAA,CAAZiC,YAAA;MACoBC,CAAA,GAAelC,CAAA,CAAnC;MACemC,CAAA,GAAUnC,CAAA,CAAzB;MAAaoC,CAAA,GAAApC,CAAA,CACbqC,WAAA;MAAAC,CAAA,QAAc,MAAHF,CAAA,IAAQA,CAAA;MAAAG,CAAA,GAAAvC,CAAA,CACnBwC,IAAA;MAAAC,CAAA,QAAO,MAAHF,CAAA,GAAGxC,CAAA,CAAW2C,KAAA,CAAMC,QAAA,GAAQJ,CAAA;MAChCK,CAAA,GAAM5C,CAAA,CAAN6C,MAAA;MAAMC,CAAA,GAAA9C,CAAA,CACN+C,QAAA;MAAAC,CAAA,QAAW,MAAHF,CAAA,IAAQA,CAAA;MAChBG,CAAA,GAAcjD,CAAA,CAAdkD,cAAA;MAAcC,CAAA,GAAAnD,CAAA,CACdoD,OAAA;MAAAC,CAAA,QAAU,MAAHF,CAAA,GAAGG,CAAA,GAAIH,CAAA;MACdI,CAAA,GAAKvD,CAAA,CAALwD,KAAA;MACYC,CAAA,GAA+BzD,CAAA,CAA3C0D,UAAA;MACeC,CAAA,GAAU3D,CAAA,CAAzB;MAAa4D,CAAA,GAAA5D,CAAA,CACb6D,UAAA;MAAAC,CAAA,QAAa,MAAHF,CAAA,IAAQA,CAAA;MAClBG,EAAA,GAAQ/D,CAAA,CAARgE,QAAA;MAAQC,EAAA,GAAAjE,CAAA,CACRkE,OAAA;MAAAC,EAAA,QAAU,MAAHF,EAAA,IAAQA,EAAA;MAIXG,EAAA,GAAeC,CAAA,CAAO;MACtBC,EAAA,GAAYC,CAAA,CAAYtE,CAAA,EAAKmE,EAAA;MAE7BI,EAAA,GAAqBC,CAAA,CAAmC,CAACd,CAAA,EAAYF,CAAA;MACrEiB,EAAA,GAAyBC,CAAA,CAC7B;QAAA,QAAM,QAAAtD,CAAA,QAAY,IAAZA,CAAA,CAAcuD,OAAA,KAAWtD,CAAc;MAAA,GAC7C,CAAC,QAAAD,CAAA,QAAY,IAAZA,CAAA,CAAcuD,OAAA,EAAStD,CAAA;MAGpBuD,EAAA,GAAkBF,CAAA,CAAQ;QAC9B,OAAIjD,CAAA,KACkC,mBAA3BgD,EAAA,GAA4CA,EAAA,QAAvD,EAEF;MAAA,GAAG,CAAChD,CAAA,EAAWgD,EAAA;MAETI,EAAA,GAAWH,CAAA,CAAQ;QACvB,QAAQ3D,CAAA;UACN,KAAKjB,CAAA,CAAWkB,KAAA,CAAM8D,GAAA;UACtB,KAAKhF,CAAA,CAAWkB,KAAA,CAAM+D,EAAA;YACpB,OAAO;UACT,KAAKjF,CAAA,CAAWkB,KAAA,CAAMgE,KAAA;UACtB,KAAKlF,CAAA,CAAWkB,KAAA,CAAMC,MAAA;UACtB,KAAKnB,CAAA,CAAWkB,KAAA,CAAMiE,KAAA;YACpB,OAAOC,CAAA;UACT;YACE,OAAO;QAAA;MAEb,GAAG,CAACnE,CAAA;MAEEoE,EAAA,GAAgBT,CAAA,CAAQ;QAC5B,IAAIU,CAAA,GAAQ;UACVC,cAAA,EAAgB;UAChBC,UAAA,EAAY;UACZC,OAAA,EAAS;QAAA;QAMX,OAHIxE,CAAA,KACFqE,CAAA,GAAKI,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAAQL,CAAA,GAAUM,CAAA,CAAe3E,CAAA,KAEjCqE,CACT;MAAA,GAAG,CAACrE,CAAA;MAEE4E,EAAA,GAA2BjB,CAAA,CAAQ;QACvC,OAAIrC,CAAA,GAAoB,OACpBU,CAAA,IAAYC,CAAA,GAAuBA,CAAA,GACnCyB,EAAA,IACGhD,CACT;MAAA,GAAG,CAACY,CAAA,EAAaU,CAAA,EAAUC,CAAA,EAAgByB,EAAA,EAAwBhD,CAAA;MAE7DmE,EAAA,GAAoBzF,CAAA,GAAmB,QAAQ0F,CAAA;MAC/CC,EAAA,GAAyBpB,CAAA,CAAQ;QACrC,OAAOvE,CAAA,GAAmB;UAAED,SAAA,EAAW6F,CAAA,CAAG5F,CAAA,EAAkB6F,CAAA,CAAOC,OAAA;QAAA,IAAa,EAClF;MAAA,GAAG,CAAC9F,CAAA;IAEJ,OACEiF,CAAA,CAAAc,aAAA,CAACN,EAAA,EAAiBJ,MAAA,CAAAC,MAAA,KAAKK,EAAA,GACrBV,CAAA,CAAAc,aAAA,CAACC,CAAA,EAAOX,MAAA,CAAAC,MAAA,KACFrE,CAAA,EAAY;MAChBuD,OAAA,EAASgB,EAAA;MACTS,yBAAA,EAA2BJ,CAAA,CAAOK;IAAA,IAElCjB,CAAA,CAACc,aAAA,CAAAI,CAAA;MACCnD,OAAA,EAASC,CAAA;MACTN,QAAA,EAAUC,CAAA;MACVQ,KAAA,EAAOD,CAAA;MACPf,IAAA,EAAMC,CAAA;MACNhB,aAAA,EAAeD,CAAA;MACfG,SAAA,EAAWkD,EAAA;MACXhD,YAAA,EAAcD,CAAA;MACdG,YAAA,EAAcD,CAAA;MACdG,YAAA,EAAcD,CAAA;MAAA,oBACIE,CAAA;MAAe,eACpBC,CAAA;MACbqE,GAAA,EAAKlC,EAAA;MACL7D,EAAA,EAAID,CAAA;MAAE,eACOgE,EAAA,IAAsBiC,CAAA,CAAUC,CAAA,CAAuBC,WAAA,EAAanG,CAAA;MACjFoG,aAAA,GAAa;MACb/D,MAAA,EAAQD,CAAA;MACRzC,SAAA,EAAWD,CAAA;MACX2G,KAAA,EAAOzB,EAAA;MACPvB,UAAA,EAAYC,CAAA;MACZE,QAAA,EAAUD,EAAA;MACVG,OAAA,EAASC,EAAA;MACT2C,eAAA,EAAiBd,CAAA,CAAGC,CAAA,CAAOc,MAAA,EAAQC,CAAA,CAASf,CAAA,EAAQjF,CAAA;IAAA,GAEpDqE,CAAA,CAAAc,aAAA,CAACc,CAAA,EAAI;MACHtG,IAAA,EAAMC,CAAA;MACNsG,QAAA,EAAUD,CAAA,CAAKE,IAAA,CAAKC,GAAA;MACpBC,QAAA,EAAUvC,EAAA;MACVwC,gBAAA,GAAgB;MAChBnH,SAAA,EAAWG,CAAA;MACXiH,SAAA,GAAW;IAAA,KAMvB;EAAA;EAGarH,CAAA,GAAAD,CAAA,CAAgBF,CAAA,EAAY;IACzCkB,KAAA,EAAOsF,CAAA,CAAOtF,KAAA;IACdyB,KAAA,EAAO6D,CAAA,CAAO7D,KAAA;IACd8E,MAAA,EAAQjB,CAAA,CAAOiB;EAAA;AAAA,SAAAtH,CAAA,IAAAuH,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}