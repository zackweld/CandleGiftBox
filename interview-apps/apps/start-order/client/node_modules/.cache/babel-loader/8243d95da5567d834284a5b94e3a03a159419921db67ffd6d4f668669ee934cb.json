{"ast":null,"code":"import { defineProperty as r } from \"../../../_virtual/_rollupPluginBabelHelpers.js\";\nvar o, e;\n!function (r) {\n  r.LIGHT = \"light\", r.DARK = \"dark\", r.BLACK = \"black\";\n}(o || (o = {})), function (r) {\n  r.primaryColor = \"primary-color\", r.primaryHoverColor = \"primary-hover-color\", r.primarySelectedColor = \"primary-selected-color\", r.primarySelectedHoverColor = \"primary-selected-hover-color\", r.primarySelectedOnSecondaryColor = \"primary-selected-on-secondary-color\", r.textColorOnPrimary = \"text-color-on-primary\", r.brandColor = \"brand-color\", r.brandHoverColor = \"brand-hover-color\", r.brandSelectedColor = \"brand-selected-color\", r.brandSelectedHoverColor = \"brand-selected-hover-color\", r.textColorOnBrand = \"text-color-on-brand\";\n}(e || (e = {}));\nvar l = r(r(r({}, o.LIGHT, \"light-app-theme\"), o.DARK, \"dark-app-theme\"), o.BLACK, \"black-app-theme\");\nexport { o as SystemTheme, l as SystemThemeClassMap, e as ThemeColor };","map":{"version":3,"names":["o","e","r","LIGHT","DARK","BLACK","primaryColor","primaryHoverColor","primarySelectedColor","primarySelectedHoverColor","primarySelectedOnSecondaryColor","textColorOnPrimary","brandColor","brandHoverColor","brandSelectedColor","brandSelectedHoverColor","textColorOnBrand","l","SystemTheme","SystemThemeClassMap","ThemeColor"],"sources":["/Users/zacharyweld/Documents/Code/CandleGiftBoxDemo/CandleGiftBox/interview-apps/apps/start-order/client/node_modules/monday-ui-react-core/src/components/ThemeProvider/ThemeProviderConstants.ts"],"sourcesContent":["/**\n * System themes: dark, light, black\n */\nexport enum SystemTheme {\n  LIGHT = \"light\",\n  DARK = \"dark\",\n  BLACK = \"black\"\n}\n\n/**\n * Colors which are eligible for theming\n */\nexport enum ThemeColor {\n  primaryColor = \"primary-color\",\n  primaryHoverColor = \"primary-hover-color\",\n  primarySelectedColor = \"primary-selected-color\",\n  primarySelectedHoverColor = \"primary-selected-hover-color\",\n  primarySelectedOnSecondaryColor = \"primary-selected-on-secondary-color\",\n  textColorOnPrimary = \"text-color-on-primary\",\n  brandColor = \"brand-color\",\n  brandHoverColor = \"brand-hover-color\",\n  brandSelectedColor = \"brand-selected-color\",\n  brandSelectedHoverColor = \"brand-selected-hover-color\",\n  textColorOnBrand = \"text-color-on-brand\"\n}\n\nexport type Theme = {\n  /**\n   * The name of the theme - name of css class that will be added to the children - should be unique\n   */\n  name: string;\n  colors: SystemThemeColorMap;\n};\n\ntype SystemThemeColorMap = {\n  [key in SystemTheme]?: ThemeColorTokenValueMap;\n};\n\nexport type ThemeColorTokenValueMap = ThemeColorTokenValue | ThemeCustomClassValue;\n\nexport type ThemeColorTokenValue = {\n  [key in ThemeColor]?: string;\n};\n\ntype ThemeCustomClassValue = {\n  [key: string]: ThemeColorTokenValue | ThemeCustomClassValue;\n};\n\nexport const SystemThemeClassMap: SystemThemeClassMapType = {\n  [SystemTheme.LIGHT]: \"light-app-theme\",\n  [SystemTheme.DARK]: \"dark-app-theme\",\n  [SystemTheme.BLACK]: \"black-app-theme\"\n};\n\ntype SystemThemeClassMapType = {\n  [key in SystemTheme]: string;\n};\n"],"mappings":";IAGYA,CAAA,EASAC,CAAA;AAAA,CATZ,UAAYC,CAAA;EACVA,CAAA,CAAAC,KAAA,YACAD,CAAA,CAAAE,IAAA,WACAF,CAAA,CAAAG,KAAA,UACD;AAAA,CAJD,CAAYL,CAAA,KAAAA,CAAA,GAIX,MAKD,UAAYE,CAAA;EACVA,CAAA,CAAAI,YAAA,oBACAJ,CAAA,CAAAK,iBAAA,0BACAL,CAAA,CAAAM,oBAAA,6BACAN,CAAA,CAAAO,yBAAA,mCACAP,CAAA,CAAAQ,+BAAA,0CACAR,CAAA,CAAAS,kBAAA,4BACAT,CAAA,CAAAU,UAAA,kBACAV,CAAA,CAAAW,eAAA,wBACAX,CAAA,CAAAY,kBAAA,2BACAZ,CAAA,CAAAa,uBAAA,iCACAb,CAAA,CAAAc,gBAAA,wBACD;AAAA,CAZD,CAAYf,CAAA,KAAAA,CAAA,GAYX;AAwBM,IAAMgB,CAAA,GAAmBf,CAAA,CAAAA,CAAA,CAAAA,CAAA,KAC7BF,CAAA,CAAYG,KAAA,EAAQ,oBACpBH,CAAA,CAAYI,IAAA,EAAO,mBACnBJ,CAAA,CAAYK,KAAA,EAAQ;AAAA,SAAAL,CAAA,IAAAkB,WAAA,EAAAD,CAAA,IAAAE,mBAAA,EAAAlB,CAAA,IAAAmB,UAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}