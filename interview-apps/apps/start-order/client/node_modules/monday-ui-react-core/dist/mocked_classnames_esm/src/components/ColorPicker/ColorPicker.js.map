{"version":3,"file":"ColorPicker.js","sources":["../../../../../src/components/ColorPicker/ColorPicker.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { forwardRef, useCallback, useRef } from \"react\";\nimport { BaseSizes } from \"../../constants\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport DialogContentContainer from \"../DialogContentContainer/DialogContentContainer\";\nimport { ColorStyle } from \"../../utils/colors-vars-map\";\nimport NoColor from \"../Icon/Icons/components/NoColor\";\nimport ColorPickerContent from \"./components/ColorPickerContent/ColorPickerContent\";\nimport {\n  ColorShapes,\n  DEFAULT_NUMBER_OF_COLORS_IN_LINE,\n  ColorPickerValue,\n  ColorPickerArrayValueOnly\n} from \"./ColorPickerConstants\";\nimport { calculateColorPickerDialogWidth } from \"./services/ColorPickerStyleService\";\nimport { VibeComponentProps, VibeComponent, SubIcon, withStaticProps } from \"../../types\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport styles from \"./ColorPicker.module.scss\";\n\nexport interface ColorPickerProps extends VibeComponentProps {\n  value?: ColorPickerValue;\n  onSave?: (value: ColorPickerArrayValueOnly) => void;\n  ColorIndicatorIcon?: SubIcon;\n  SelectedIndicatorIcon?: SubIcon;\n  /**\n   * Hide color icon\n   */\n  NoColorIcon?: SubIcon;\n  colorStyle?: ColorStyle;\n  noColorText?: string;\n  shouldRenderIndicatorWithoutBackground?: boolean;\n  isBlackListMode?: boolean;\n  colorsList?: ColorPickerArrayValueOnly;\n  isMultiselect?: boolean;\n  colorSize?: BaseSizes;\n  numberOfColorsInLine?: number;\n  focusOnMount?: boolean;\n  colorShape?: ColorShapes;\n  /**\n   * Used to force the component render the colorList prop as is. Usually, this flag should not be used. It's intended only for edge cases.\n   * Usually, only \"monday colors\" will be rendered (unless blacklist mode is used). This flag will override this behavior.\n   */\n  forceUseRawColorList?: boolean;\n  /**\n   * Used to enable color name tooltip on each color in the component. it's incompatible with forceUseRawColorList flag.\n   * When \"tooltipContentByColor\" is supplied, it will override the color name tooltip.\n   *\n   */\n  showColorNameTooltip?: boolean;\n}\n\nconst ColorPicker: VibeComponent<ColorPickerProps> & {\n  // Backward compatibility for enum naming\n  COLOR_STYLES?: typeof ColorStyle;\n  sizes?: typeof BaseSizes;\n  colorStyles?: typeof ColorStyle;\n  colorSizes?: typeof BaseSizes;\n  colorShapes?: typeof ColorShapes;\n} = forwardRef(\n  (\n    {\n      className,\n      onSave = NOOP,\n      value = \"\",\n      noColorText,\n      colorStyle = ColorStyle.REGULAR,\n      ColorIndicatorIcon,\n      SelectedIndicatorIcon,\n      shouldRenderIndicatorWithoutBackground,\n      NoColorIcon = NoColor,\n      isBlackListMode = true,\n      colorsList = [],\n      isMultiselect,\n      colorSize = BaseSizes.MEDIUM,\n      numberOfColorsInLine = DEFAULT_NUMBER_OF_COLORS_IN_LINE,\n      focusOnMount,\n      colorShape = ColorShapes.SQUARE,\n      forceUseRawColorList,\n      showColorNameTooltip,\n      id,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const onChange = useCallback(onSave, [onSave]);\n\n    const width = calculateColorPickerDialogWidth(colorSize, numberOfColorsInLine);\n\n    return (\n      <DialogContentContainer\n        ref={mergedRef}\n        className={cx(styles.colorPicker, styles.colorPickerDialogContent, className)}\n        ariaLabelledby=\"Color Picker Dialog\"\n        ariaDescribedby=\"Pick color\"\n        style={{ width }}\n      >\n        <ColorPickerContent\n          onValueChange={onChange}\n          value={value}\n          noColorText={noColorText}\n          shouldRenderIndicatorWithoutBackground={ColorIndicatorIcon && shouldRenderIndicatorWithoutBackground}\n          colorStyle={colorStyle}\n          ColorIndicatorIcon={ColorIndicatorIcon}\n          SelectedIndicatorIcon={SelectedIndicatorIcon}\n          NoColorIcon={NoColorIcon}\n          colorsList={colorsList}\n          isBlackListMode={isBlackListMode}\n          isMultiselect={isMultiselect}\n          colorSize={colorSize}\n          numberOfColorsInLine={numberOfColorsInLine}\n          focusOnMount={focusOnMount}\n          colorShape={colorShape}\n          forceUseRawColorList={forceUseRawColorList}\n          showColorNameTooltip={showColorNameTooltip}\n          id={id}\n          data-testid={dataTestId || getTestId(ComponentDefaultTestId.COLOR_PICKER, id)}\n        />\n      </DialogContentContainer>\n    );\n  }\n);\n\nexport default withStaticProps(ColorPicker, {\n  // Backward compatibility for enum naming\n  COLOR_STYLES: ColorStyle,\n  sizes: BaseSizes,\n  colorStyles: ColorStyle,\n  colorSizes: BaseSizes,\n  colorShapes: ColorShapes\n});\n"],"names":["withStaticProps","forwardRef","_ref","ref","className","_ref$onSave","onSave","NOOP","_ref$value","value","noColorText","_ref$colorStyle","colorStyle","ColorStyle","REGULAR","ColorIndicatorIcon","SelectedIndicatorIcon","shouldRenderIndicatorWithoutBackground","_ref$NoColorIcon","NoColorIcon","NoColor","_ref$isBlackListMode","isBlackListMode","_ref$colorsList","colorsList","isMultiselect","_ref$colorSize","colorSize","BaseSizes","MEDIUM","_ref$numberOfColorsIn","numberOfColorsInLine","DEFAULT_NUMBER_OF_COLORS_IN_LINE","focusOnMount","_ref$colorShape","colorShape","ColorShapes","SQUARE","forceUseRawColorList","showColorNameTooltip","id","dataTestId","componentRef","useRef","mergedRef","useMergeRef","onChange","useCallback","width","calculateColorPickerDialogWidth","React","createElement","DialogContentContainer","cx","styles","colorPicker","colorPickerDialogContent","ariaLabelledby","ariaDescribedby","style","ColorPickerContent","onValueChange","getTestId","ComponentDefaultTestId","COLOR_PICKER","COLOR_STYLES","sizes","colorStyles","colorSizes","colorShapes"],"mappings":"i6BAoDA,IA0EeA,EAAAA,EAnEXC,GACF,SAAAC,EAuBEC,GACE,IAtBAC,EAASF,EAATE,UAASC,EAAAH,EACTI,OAAAA,OAASC,IAAHF,EAAGE,EAAIF,EAAAG,EAAAN,EACbO,MAAAA,OAAQ,IAAHD,EAAG,GAAEA,EACVE,EAAWR,EAAXQ,YAAWC,EAAAT,EACXU,WAAAA,OAAU,IAAAD,EAAGE,EAAWC,QAAOH,EAC/BI,EAAkBb,EAAlBa,mBACAC,EAAqBd,EAArBc,sBACAC,EAAsCf,EAAtCe,uCAAsCC,EAAAhB,EACtCiB,YAAAA,OAAcC,IAAHF,EAAGE,EAAOF,EAAAG,EAAAnB,EACrBoB,gBAAAA,OAAkB,IAAHD,GAAOA,EAAAE,EAAArB,EACtBsB,WAAAA,OAAa,IAAHD,EAAG,GAAEA,EACfE,EAAavB,EAAbuB,cAAaC,EAAAxB,EACbyB,UAAAA,OAAS,IAAAD,EAAGE,EAAUC,OAAMH,EAAAI,EAAA5B,EAC5B6B,qBAAAA,OAAuBC,IAAHF,EAAGE,EAAgCF,EACvDG,EAAY/B,EAAZ+B,aAAYC,EAAAhC,EACZiC,WAAAA,OAAU,IAAAD,EAAGE,EAAYC,OAAMH,EAC/BI,EAAoBpC,EAApBoC,qBACAC,EAAoBrC,EAApBqC,qBACAC,EAAEtC,EAAFsC,GACeC,EAAUvC,EAAzB,eAIIwC,EAAeC,EAAO,MACtBC,EAAYC,EAAY1C,EAAKuC,GAE7BI,EAAWC,EAAYzC,EAAQ,CAACA,IAEhC0C,EAAQC,EAAgCtB,EAAWI,GAEzD,OACEmB,EAAAC,cAACC,EAAsB,CACrBjD,IAAKyC,EACLxC,UAAWiD,EAAGC,EAAOC,YAAaD,EAAOE,yBAA0BpD,GACnEqD,eAAe,sBACfC,gBAAgB,aAChBC,MAAO,CAAEX,MAAAA,IAETE,EAAAC,cAACS,EACC,CAAAC,cAAef,EACfrC,MAAOA,EACPC,YAAaA,EACbO,uCAAwCF,GAAsBE,EAC9DL,WAAYA,EACZG,mBAAoBA,EACpBC,sBAAuBA,EACvBG,YAAaA,EACbK,WAAYA,EACZF,gBAAiBA,EACjBG,cAAeA,EACfE,UAAWA,EACXI,qBAAsBA,EACtBE,aAAcA,EACdE,WAAYA,EACZG,qBAAsBA,EACtBC,qBAAsBA,EACtBC,GAAIA,EAAE,cACOC,GAAcqB,EAAUC,EAAuBC,aAAcxB,KAIlF,IAG0C,CAE1CyB,aAAcpD,EACdqD,MAAOtC,EACPuC,YAAatD,EACbuD,WAAYxC,EACZyC,YAAajC"}