{"version":3,"file":"useMenuItemMouseEvents.js","sources":["../../../../../../../src/components/Menu/MenuItem/hooks/useMenuItemMouseEvents.ts"],"sourcesContent":["import { RefObject, useLayoutEffect } from \"react\";\nimport useIsMouseEnter from \"../../../../hooks/useIsMouseEnter\";\nimport usePrevious from \"../../../../hooks/usePrevious\";\n\nexport default function useMenuItemMouseEvents({\n  ref,\n  resetOpenSubMenuIndex,\n  setSubMenuIsOpenByIndex,\n  isActive,\n  setActiveItemIndex,\n  index,\n  hasChildren,\n  splitMenuItemIconButtonRef,\n  splitMenuItem = false\n}: {\n  ref: RefObject<HTMLElement>;\n  resetOpenSubMenuIndex: () => void;\n  setSubMenuIsOpenByIndex: (index: number, isOpen: boolean) => void;\n  isActive: boolean;\n  setActiveItemIndex: (index: number) => void;\n  index: number;\n  hasChildren: boolean;\n  splitMenuItemIconButtonRef?: React.RefObject<HTMLElement>;\n  splitMenuItem?: boolean;\n}) {\n  const isMouseEnter = useIsMouseEnter({ ref });\n  const isMouseEnterOnIconButton = useIsMouseEnter({ ref: splitMenuItemIconButtonRef });\n  const prevIsMouseEnter = usePrevious(isMouseEnter);\n  const prevIsMouseEnterOnIconButton = usePrevious(isMouseEnterOnIconButton);\n\n  useLayoutEffect(() => {\n    if (!isMouseEnterOnIconButton) return;\n\n    if (isMouseEnterOnIconButton === prevIsMouseEnterOnIconButton) return;\n\n    if (isActive) {\n      setSubMenuIsOpenByIndex(index, true);\n    } else {\n      resetOpenSubMenuIndex();\n    }\n  }, [\n    setSubMenuIsOpenByIndex,\n    index,\n    isMouseEnterOnIconButton,\n    prevIsMouseEnterOnIconButton,\n    isActive,\n    resetOpenSubMenuIndex\n  ]);\n\n  useLayoutEffect(() => {\n    if (!isMouseEnter) return;\n    if (isMouseEnter === prevIsMouseEnter) return;\n\n    if (!setSubMenuIsOpenByIndex || !resetOpenSubMenuIndex) {\n      console.error(\"MenuItem must be a first level child of a menu\");\n      return;\n    }\n\n    resetOpenSubMenuIndex();\n\n    if (!isActive && !splitMenuItem) {\n      setActiveItemIndex(index);\n      if (hasChildren) {\n        setSubMenuIsOpenByIndex(index, true);\n      } else {\n        resetOpenSubMenuIndex();\n      }\n    }\n\n    if (isActive && hasChildren) {\n      setSubMenuIsOpenByIndex(index, !!isMouseEnter);\n    }\n\n    if (!isActive && splitMenuItem) {\n      setActiveItemIndex(index);\n\n      if (isMouseEnterOnIconButton) {\n        setSubMenuIsOpenByIndex(index, true);\n      }\n    }\n  }, [\n    resetOpenSubMenuIndex,\n    prevIsMouseEnter,\n    isMouseEnter,\n    isMouseEnterOnIconButton,\n    setSubMenuIsOpenByIndex,\n    isActive,\n    setActiveItemIndex,\n    index,\n    hasChildren,\n    splitMenuItem\n  ]);\n\n  return isMouseEnter;\n}\n"],"names":["useMenuItemMouseEvents","_ref","resetOpenSubMenuIndex","setSubMenuIsOpenByIndex","isActive","setActiveItemIndex","index","hasChildren","splitMenuItemIconButtonRef","_ref$splitMenuItem","splitMenuItem","isMouseEnter","useIsMouseEnter","ref","isMouseEnterOnIconButton","prevIsMouseEnter","usePrevious","prevIsMouseEnterOnIconButton","useLayoutEffect","console","error"],"mappings":"kJAIc,SAAUA,EAAsBC,GAoB7C,IAlBCC,EAAqBD,EAArBC,sBACAC,EAAuBF,EAAvBE,wBACAC,EAAQH,EAARG,SACAC,EAAkBJ,EAAlBI,mBACAC,EAAKL,EAALK,MACAC,EAAWN,EAAXM,YACAC,EAA0BP,EAA1BO,2BAA0BC,EAAAR,EAC1BS,cAAAA,OAAgB,IAAHD,GAAQA,EAYfE,EAAeC,EAAgB,CAAEC,IApBpCZ,EAAHY,MAqBMC,EAA2BF,EAAgB,CAAEC,IAAKL,IAClDO,EAAmBC,EAAYL,GAC/BM,EAA+BD,EAAYF,GAiEjD,OA/DAI,GAAgB,WACTJ,GAEDA,IAA6BG,IAE7Bb,EACFD,EAAwBG,GAAO,GAE/BJ,IAEJ,GAAG,CACDC,EACAG,EACAQ,EACAG,EACAb,EACAF,IAGFgB,GAAgB,WACTP,GACDA,IAAiBI,IAEhBZ,GAA4BD,GAKjCA,IAEKE,GAAaM,IAChBL,EAAmBC,GACfC,EACFJ,EAAwBG,GAAO,GAE/BJ,KAIAE,GAAYG,GACdJ,EAAwBG,IAASK,IAG9BP,GAAYM,IACfL,EAAmBC,GAEfQ,GACFX,EAAwBG,GAAO,KAvBjCa,QAAQC,MAAM,kDA0BjB,GAAE,CACDlB,EACAa,EACAJ,EACAG,EACAX,EACAC,EACAC,EACAC,EACAC,EACAG,IAGKC,CACT"}