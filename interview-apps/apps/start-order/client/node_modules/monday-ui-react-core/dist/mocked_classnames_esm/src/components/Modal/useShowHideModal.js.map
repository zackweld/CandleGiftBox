{"version":3,"file":"useShowHideModal.js","sources":["../../../../../src/components/Modal/useShowHideModal.ts"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport useAnimationProps from \"./useAnimationProps\";\nimport useKeyEvent from \"../../hooks/useKeyEvent/index\";\nimport { A11yDialogType } from \"./ModalHelper\";\nimport { keyCodes } from \"../../constants\";\n\nconst KEYS = [keyCodes.ESCAPE];\n\nexport default function useShowHideModal({\n  instance,\n  show,\n  triggerElement,\n  onClose,\n  alertDialog\n}: {\n  instance: A11yDialogType;\n  show: boolean;\n  triggerElement: Element;\n  onClose: () => void;\n  alertDialog: boolean;\n}) {\n  const [isAnimating, setIsAnimating] = useState(false);\n  const getAnimationProps = useAnimationProps(triggerElement, instance);\n\n  const closeOnEsc = useCallback(\n    (event: React.KeyboardEvent) => {\n      if (!alertDialog && instance?.$el.contains(document.activeElement)) {\n        event.stopPropagation();\n        onClose?.();\n      }\n    },\n    [alertDialog, instance?.$el, onClose]\n  );\n\n  useKeyEvent({\n    callback: closeOnEsc,\n    capture: true,\n    keys: KEYS\n  });\n\n  useEffect(() => {\n    if (show) {\n      setIsAnimating(true);\n      instance?.show();\n      const animate = instance?.$el.childNodes[1].animate;\n      if (animate) {\n        instance?.$el.childNodes[1].animate?.(...getAnimationProps());\n      }\n    } else {\n      const animate = instance?.$el.childNodes[1].animate;\n      if (animate) {\n        const animation = instance?.$el.childNodes[1]?.animate(...getAnimationProps(true));\n        animation?.finished.then(() => {\n          setIsAnimating(false);\n          instance?.hide();\n        });\n      } else {\n        setIsAnimating(false);\n        instance?.hide();\n      }\n    }\n  }, [show, instance, getAnimationProps]);\n\n  return { shouldShow: isAnimating };\n}\n"],"names":["KEYS","keyCodes","ESCAPE","useShowHideModal","_ref","instance","show","triggerElement","onClose","alertDialog","_useState","useState","_useState2","_slicedToArray","isAnimating","setIsAnimating","getAnimationProps","useAnimationProps","closeOnEsc","useCallback","event","$el","contains","document","activeElement","stopPropagation","useKeyEvent","callback","capture","keys","useEffect","_b2","childNodes","animate","_b","call","apply","_a","concat","_toConsumableArray","_c2","animation","_c","finished","then","hide","shouldShow"],"mappings":"4ZAMA,IAAMA,EAAO,CAACC,EAASC,QAEC,SAAAC,EAAgBC,GAYvC,IAXCC,EAAQD,EAARC,SACAC,EAAIF,EAAJE,KACAC,EAAcH,EAAdG,eACAC,EAAOJ,EAAPI,QACAC,EAAWL,EAAXK,YAQAC,EAAsCC,GAAS,GAAMC,EAAAC,EAAAH,EAAA,GAA9CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAC5BI,EAAoBC,EAAkBV,EAAgBF,GAEtDa,EAAaC,GACjB,SAACC,IACMX,IAAeJ,eAAAA,EAAUgB,IAAIC,SAASC,SAASC,kBAClDJ,EAAMK,kBACNjB,SAAAA,IAEH,GACD,CAACC,EAAaJ,aAAA,EAAAA,EAAUgB,IAAKb,IAgC/B,OA7BAkB,EAAY,CACVC,SAAUT,EACVU,SAAS,EACTC,KAAM7B,IAGR8B,GAAU,qBAKOC,EAJf,GAAIzB,EACFS,GAAe,GACfV,SAAAA,EAAUC,QACMD,aAAA,EAAAA,EAAUgB,IAAIW,WAAW,GAAGC,WAEP,QAAnCC,EAAA7B,kBAAAA,EAAUgB,IAAIW,WAAW,IAAGC,eAAO,IAAAC,IAAAH,EAAAG,GAAAC,KAAAC,MAAAL,EAAAM,CAAAA,GAAAC,OAAAC,EAAMvB,aAI3C,GADgBX,aAAA,EAAAA,EAAUgB,IAAIW,WAAW,GAAGC,QAC/B,CAAA,IAAAO,EACLC,EAAyC,QAA7BC,EAAArC,aAAA,EAAAA,EAAUgB,IAAIW,WAAW,UAAI,IAAAU,OAAA,GAAAF,EAAAE,GAAAT,QAAOG,MAAAI,EAAAD,EAAIvB,GAAkB,KAC5EyB,SAAAA,EAAWE,SAASC,MAAK,WACvB7B,GAAe,GACfV,SAAAA,EAAUwC,MACZ,GACD,MACC9B,GAAe,GACfV,SAAAA,EAAUwC,MAGf,GAAE,CAACvC,EAAMD,EAAUW,IAEb,CAAE8B,WAAYhC,EACvB"}