{"version":3,"file":"useFocusGridItemByActiveStatus.js","sources":["../../../../../../src/components/Menu/MenuGridItem/useFocusGridItemByActiveStatus.tsx"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\nimport { useLastNavigationDirection } from \"../Menu/hooks/useLastNavigationDirection\";\n\nexport const useFocusGridItemByActiveStatus = ({\n  wrapperRef,\n  childRef,\n  index,\n  activeItemIndex,\n  useDocumentEventListeners = false\n}: {\n  wrapperRef: React.RefObject<HTMLElement>;\n  childRef: React.RefObject<HTMLElement>;\n  index: number;\n  activeItemIndex: number;\n  useDocumentEventListeners?: boolean;\n}) => {\n  const { lastNavigationDirectionRef } = useLastNavigationDirection();\n  const isActive = useMemo(() => index === activeItemIndex, [activeItemIndex, index]);\n\n  useEffect(() => {\n    if (useDocumentEventListeners) return;\n    if (isActive) {\n      childRef.current?.focus();\n    } else {\n      wrapperRef?.current?.blur?.();\n    }\n  }, [childRef, isActive, lastNavigationDirectionRef, wrapperRef, useDocumentEventListeners]);\n};\n"],"names":["useFocusGridItemByActiveStatus","_ref","wrapperRef","childRef","index","activeItemIndex","_ref$useDocumentEvent","useDocumentEventListeners","lastNavigationDirectionRef","useLastNavigationDirection","isActive","useMemo","useEffect","_a","current","focus","_c","_b","blur","call"],"mappings":"4IAGaA,EAAiC,SAAHC,GAYtC,IAXHC,EAAUD,EAAVC,WACAC,EAAQF,EAARE,SACAC,EAAKH,EAALG,MACAC,EAAeJ,EAAfI,gBAAeC,EAAAL,EACfM,0BAAAA,OAA4B,IAAHD,GAAQA,EAQzBE,EAA+BC,IAA/BD,2BACFE,EAAWC,GAAQ,WAAA,OAAMP,IAAUC,CAAe,GAAE,CAACA,EAAiBD,IAE5EQ,GAAU,qBACJL,IACAG,EACgB,QAAlBG,EAAAV,EAASW,eAAS,IAAAD,GAAAA,EAAAE,QAEO,QAAzBC,EAAmB,QAAnBC,EAAAf,aAAU,EAAVA,EAAYY,eAAO,IAAAG,OAAA,EAAAA,EAAEC,YAAI,IAAAF,GAAAA,EAAAG,KAAAF,GAE7B,GAAG,CAACd,EAAUO,EAAUF,EAA4BN,EAAYK,GAClE"}