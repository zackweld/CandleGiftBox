{"version":3,"file":"useSupportFirefoxLabelClick.js","sources":["../../../../../../src/components/Checkbox/hooks/useSupportFirefoxLabelClick.jsx"],"sourcesContent":["import { useCallback, useRef } from \"react\";\nimport { isFirefox } from \"../../../utils/user-agent-utils\";\n\nexport function useSupportFirefoxLabelClick({ inputRef }) {\n  // The purpose of this variable is to make sure that the captured event is a checkbox's label click event and not a manual event\n  // that we actually created in this hook.\n  // We handle the custom event create state as ref because this variable should not be depend on the component renders\n  // and it should be unique per checkbox.\n  const customEventCreated = useRef(false);\n\n  // fix for known bug firefox bug: firefox does not support checking or unchecking checkbox by its label when shift pressed\n  const onClickCapture = useCallback(\n    e => {\n      // We would like to dispatch a manual event to click on the input only for cases where there is a bug in supporting this capability -\n      // firefox browsers when the shift key is pressed.\n      // In addition we make sure here that the captured event is not a manually generated event created by this code because we want to prevent\n      // an infinite loop in recursion here.\n      if (!customEventCreated.current && e.shiftKey && isFirefox() && inputRef?.current?.dispatchEvent) {\n        e.preventDefault();\n        const manualClickEvent = new MouseEvent(\"click\", {\n          shiftKey: true,\n          // After dispatch this event we will want it to be captured by all the relevant event listeners which registered to this checkbox input.\n          bubbles: true,\n          cancelable: true\n        });\n\n        customEventCreated.current = true;\n        inputRef.current.dispatchEvent(manualClickEvent);\n      } else if (customEventCreated.current) {\n        customEventCreated.current = false;\n      }\n    },\n    [customEventCreated, inputRef]\n  );\n\n  return { onClickCapture };\n}\n"],"names":["useSupportFirefoxLabelClick","_ref","inputRef","customEventCreated","useRef","onClickCapture","useCallback","e","_inputRef$current","current","shiftKey","isFirefox","dispatchEvent","preventDefault","manualClickEvent","MouseEvent","bubbles","cancelable"],"mappings":"+GAGO,SAASA,EAA2BC,GAAe,IAAZC,EAAQD,EAARC,SAKtCC,EAAqBC,GAAO,GA2BlC,MAAO,CAAEC,eAxBcC,GACrB,SAAAC,GAAK,IAAAC,EAKH,IAAKL,EAAmBM,SAAWF,EAAEG,UAAYC,KAA7C,MAA4DT,GAAiBM,QAATA,EAARN,EAAUO,eAAVD,IAAiBA,GAAjBA,EAAmBI,cAAe,CAChGL,EAAEM,iBACF,IAAMC,EAAmB,IAAIC,WAAW,QAAS,CAC/CL,UAAU,EAEVM,SAAS,EACTC,YAAY,IAGdd,EAAmBM,SAAU,EAC7BP,EAASO,QAAQG,cAAcE,EACjC,MAAWX,EAAmBM,UAC5BN,EAAmBM,SAAU,EAEjC,GACA,CAACN,EAAoBD,IAIzB"}