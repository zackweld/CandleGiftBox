{"version":3,"file":"LegacyHeading.js","sources":["../../../../../src/components/LegacyHeading/LegacyHeading.tsx"],"sourcesContent":["import { camelCase } from \"lodash-es\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport cx from \"classnames\";\nimport { DialogPosition, Sizes } from \"../../constants\";\nimport React, { CSSProperties, useLayoutEffect } from \"react\";\nimport Tooltip from \"../../components/Tooltip/Tooltip\";\nimport useIsOverflowing from \"../../hooks/useIsOverflowing/useIsOverflowing\";\nimport useStyle from \"../../hooks/useStyle\";\nimport useRefWithCallback from \"../../hooks/useRefWithCallback\";\nimport TextWithHighlight from \"../TextWithHighlight/TextWithHighlight\";\nimport { HeadingSizes, HeadingTypes } from \"./LegacyHeadingConstants\";\nimport { withStaticProps, VibeComponentProps } from \"../../types\";\nimport styles from \"./LegacyHeading.module.scss\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\n\nexport interface HeadingProps extends VibeComponentProps {\n  type?: HeadingTypes;\n  ariaLabel?: string;\n  value?: string;\n  ellipsis?: boolean;\n  ellipsisMaxLines?: number;\n  suggestEditOnHover?: boolean;\n  /** Tooltip to show when no overflow */\n  nonEllipsisTooltip?: string;\n  size?: Sizes;\n  highlightTerm?: string;\n  customColor?: string;\n  style?: CSSProperties;\n  tooltipPosition?: DialogPosition;\n}\n\nconst LegacyHeading: React.FC<HeadingProps> & {\n  sizes?: typeof Sizes;\n  types?: typeof HeadingTypes;\n} = ({\n  className,\n  value = \"\",\n  type = HeadingTypes.h1,\n  size = HeadingSizes.LARGE,\n  ariaLabel = \"\",\n  id,\n  customColor,\n  ellipsis = true,\n  ellipsisMaxLines = 1,\n  style,\n  tooltipPosition,\n  highlightTerm = null,\n  suggestEditOnHover = false,\n  nonEllipsisTooltip = null,\n  \"data-testid\": dataTestId\n}) => {\n  const [componentRef, setRef] = useRefWithCallback(node =>\n    node.style.setProperty(\"--heading-clamp-lines\", ellipsisMaxLines.toString())\n  );\n  const finalStyle = useStyle(style, { color: customColor });\n  const classNames = cx(\n    styles.headingComponent,\n    className,\n    getStyle(styles, camelCase(\"element-type-\" + type)),\n    getStyle(styles, camelCase(\"size-\" + size)),\n    {\n      [styles.multiLineEllipsis]: ellipsis && ellipsisMaxLines > 1,\n      [styles.singleLineEllipsis]: ellipsis && ellipsisMaxLines <= 1,\n      [styles.suggestEditOnHover]: suggestEditOnHover\n    }\n  );\n  const Element = React.createElement(\n    type,\n    {\n      className: classNames,\n      \"aria-label\": ariaLabel,\n      id,\n      \"data-testid\": dataTestId || getTestId(ComponentDefaultTestId.HEADING, id),\n      ref: setRef,\n      style: finalStyle\n    },\n    highlightTerm ? (\n      <TextWithHighlight\n        highlightTerm={highlightTerm}\n        text={value}\n        linesToClamp={ellipsisMaxLines}\n        useEllipsis={ellipsis}\n        nonEllipsisTooltip={nonEllipsisTooltip}\n        tooltipPosition={tooltipPosition}\n      />\n    ) : (\n      value\n    )\n  );\n\n  const isOverflowing = useIsOverflowing({ ref: ellipsis ? componentRef : null, ignoreHeightOverflow: true });\n\n  useLayoutEffect(() => {\n    if (componentRef.current) {\n      componentRef.current.style.setProperty(\"--heading-clamp-lines\", ellipsisMaxLines?.toString());\n    }\n  }, [componentRef, ellipsisMaxLines, isOverflowing]);\n\n  // When using highlight term - use tooltip there\n  if (!highlightTerm) {\n    if (isOverflowing || nonEllipsisTooltip) {\n      const tooltipContent = isOverflowing ? value : nonEllipsisTooltip;\n      return (\n        <Tooltip content={tooltipContent} position={tooltipPosition}>\n          {Element}\n        </Tooltip>\n      );\n    }\n  }\n  return Element;\n};\n\nexport default withStaticProps(LegacyHeading, {\n  types: HeadingTypes,\n  sizes: Sizes\n});\n"],"names":["withStaticProps","_ref","className","_ref$value","value","_ref$type","type","HeadingTypes","h1","_ref$size","size","HeadingSizes","LARGE","_ref$ariaLabel","ariaLabel","id","customColor","_ref$ellipsis","ellipsis","_ref$ellipsisMaxLines","ellipsisMaxLines","style","tooltipPosition","_ref$highlightTerm","highlightTerm","_ref$suggestEditOnHov","suggestEditOnHover","_ref$nonEllipsisToolt","nonEllipsisTooltip","dataTestId","_useRefWithCallback","useRefWithCallback","node","setProperty","_useRefWithCallback2","_slicedToArray","componentRef","setRef","finalStyle","useStyle","color","classNames","cx","styles","headingComponent","getStyle","camelCase","_defineProperty","multiLineEllipsis","singleLineEllipsis","Element","React","createElement","getTestId","ComponentDefaultTestId","HEADING","ref","TextWithHighlight","text","linesToClamp","useEllipsis","isOverflowing","useIsOverflowing","ignoreHeightOverflow","useLayoutEffect","current","Tooltip","content","position","types","sizes","Sizes"],"mappings":"64BA+BA,IAiFeA,EAAAA,GA9EX,SAHeC,GAmBd,IAfHC,EAASD,EAATC,UAASC,EAAAF,EACTG,MAAAA,OAAQ,IAAHD,EAAG,GAAEA,EAAAE,EAAAJ,EACVK,KAAAA,OAAI,IAAAD,EAAGE,EAAaC,GAAEH,EAAAI,EAAAR,EACtBS,KAAAA,OAAI,IAAAD,EAAGE,EAAaC,MAAKH,EAAAI,EAAAZ,EACzBa,UAAAA,OAAY,IAAHD,EAAG,GAAEA,EACdE,EAAEd,EAAFc,GACAC,EAAWf,EAAXe,YAAWC,EAAAhB,EACXiB,SAAAA,OAAW,IAAHD,GAAOA,EAAAE,EAAAlB,EACfmB,iBAAAA,OAAmB,IAAHD,EAAG,EAACA,EACpBE,EAAKpB,EAALoB,MACAC,EAAerB,EAAfqB,gBAAeC,EAAAtB,EACfuB,cAAAA,OAAgB,IAAHD,EAAG,KAAIA,EAAAE,EAAAxB,EACpByB,mBAAAA,OAAqB,IAAHD,GAAQA,EAAAE,EAAA1B,EAC1B2B,mBAAAA,OAAqB,IAAHD,EAAG,KAAIA,EACVE,EAAU5B,EAAzB,eAEA6B,EAA+BC,GAAmB,SAAAC,GAAI,OACpDA,EAAKX,MAAMY,YAAY,wBAAyBb,SACjDc,EAAAC,EAAAL,EAAA,GAFMM,EAAYF,EAAA,GAAEG,EAAMH,EAAA,GAGrBI,EAAaC,EAASlB,EAAO,CAAEmB,MAAOxB,IACtCyB,EAAaC,EACjBC,EAAOC,iBACP1C,EACA2C,EAASF,EAAQG,EAAU,gBAAkBxC,IAC7CuC,EAASF,EAAQG,EAAU,QAAUpC,IAAMqC,EAAAA,EAAAA,EAExCJ,CAAAA,EAAAA,EAAOK,kBAAoB9B,GAAYE,EAAmB,GAC1DuB,EAAOM,mBAAqB/B,GAAgC,GAApBE,GACxCuB,EAAOjB,mBAAqBA,IAG3BwB,EAAUC,EAAMC,cACpB9C,EACA,CACEJ,UAAWuC,EACX,aAAc3B,EACdC,GAAAA,EACA,cAAec,GAAcwB,EAAUC,EAAuBC,QAASxC,GACvEyC,IAAKnB,EACLhB,MAAOiB,GAETd,EACE2B,EAAAC,cAACK,EACC,CAAAjC,cAAeA,EACfkC,KAAMtD,EACNuD,aAAcvC,EACdwC,YAAa1C,EACbU,mBAAoBA,EACpBN,gBAAiBA,IAGnBlB,GAIEyD,EAAgBC,EAAiB,CAAEN,IAAKtC,EAAWkB,EAAe,KAAM2B,sBAAsB,IASpG,IAPAC,GAAgB,WACV5B,EAAa6B,SACf7B,EAAa6B,QAAQ5C,MAAMY,YAAY,wBAAyBb,aAAA,EAAAA,KAEnE,GAAE,CAACgB,EAAchB,EAAkByC,KAG/BrC,KACCqC,GAAiBjC,GAEnB,OACEuB,EAAAC,cAACc,EAAO,CAACC,QAFYN,EAAgBzD,EAAQwB,EAEXwC,SAAU9C,GACzC4B,GAKT,OAAOA,CACT,GAE8C,CAC5CmB,MAAO9D,EACP+D,MAAOC"}