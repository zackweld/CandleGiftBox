{"version":3,"file":"useLastNavigationDirection.js","sources":["../../../../../../../src/components/Menu/Menu/hooks/useLastNavigationDirection.tsx"],"sourcesContent":["import { useCallback, useRef } from \"react\";\nimport useEventListener from \"../../../../hooks/useEventListener\";\nimport {\n  ARROW_DOWN_KEYS,\n  ARROW_LEFT_KEYS,\n  ARROW_RIGHT_KEYS,\n  ARROW_UP_KEYS,\n  NavDirections\n} from \"../../../../hooks/useFullKeyboardListeners\";\nimport useKeyEvent from \"../../../../hooks/useKeyEvent\";\n\nconst NAVIGATION_KEYS = [...ARROW_UP_KEYS, ...ARROW_RIGHT_KEYS, ...ARROW_DOWN_KEYS, ...ARROW_LEFT_KEYS];\n\nexport const useLastNavigationDirection = () => {\n  const documentRef = useRef(document);\n\n  const lastNavigationDirectionRef = useRef<NavDirections>();\n\n  const setLastNavigationDirection = useCallback((dir: NavDirections) => {\n    lastNavigationDirectionRef.current = dir;\n  }, []);\n\n  const onKeyEvent = useCallback(\n    ({ key }: KeyboardEvent) => {\n      if (ARROW_UP_KEYS.includes(key)) {\n        setLastNavigationDirection(NavDirections.UP);\n      } else if (ARROW_RIGHT_KEYS.includes(key)) {\n        setLastNavigationDirection(NavDirections.RIGHT);\n      } else if (ARROW_DOWN_KEYS.includes(key)) {\n        setLastNavigationDirection(NavDirections.DOWN);\n      } else if (ARROW_LEFT_KEYS.includes(key)) {\n        setLastNavigationDirection(NavDirections.LEFT);\n      }\n    },\n    [setLastNavigationDirection]\n  );\n\n  const onMousedownAnywhere = useCallback(() => {\n    lastNavigationDirectionRef.current = undefined;\n  }, [lastNavigationDirectionRef]);\n\n  useKeyEvent({ ref: documentRef, capture: true, keys: NAVIGATION_KEYS, callback: onKeyEvent });\n  useEventListener({ eventName: \"mousedown\", ref: documentRef, capture: true, callback: onMousedownAnywhere });\n\n  return { lastNavigationDirectionRef };\n};\n"],"names":["NAVIGATION_KEYS","concat","_toConsumableArray","ARROW_UP_KEYS","ARROW_RIGHT_KEYS","ARROW_DOWN_KEYS","ARROW_LEFT_KEYS","useLastNavigationDirection","documentRef","useRef","document","lastNavigationDirectionRef","setLastNavigationDirection","useCallback","dir","current","onKeyEvent","_ref","key","includes","NavDirections","UP","RIGHT","DOWN","LEFT","onMousedownAnywhere","undefined","useKeyEvent","ref","capture","keys","callback","useEventListener","eventName"],"mappings":"2ZAWA,IAAMA,EAAeC,GAAAA,OAAAC,EAAOC,GAAaD,EAAKE,GAAgBF,EAAKG,GAAeH,EAAKI,IAE1EC,EAA6B,WACxC,IAAMC,EAAcC,EAAOC,UAErBC,EAA6BF,IAE7BG,EAA6BC,GAAY,SAACC,GAC9CH,EAA2BI,QAAUD,CACtC,GAAE,IAEGE,EAAaH,GACjB,SAAAI,GAA2B,IAAxBC,EAAGD,EAAHC,IACGf,EAAcgB,SAASD,GACzBN,EAA2BQ,EAAcC,IAChCjB,EAAiBe,SAASD,GACnCN,EAA2BQ,EAAcE,OAChCjB,EAAgBc,SAASD,GAClCN,EAA2BQ,EAAcG,MAChCjB,EAAgBa,SAASD,IAClCN,EAA2BQ,EAAcI,KAE7C,GACA,CAACZ,IAGGa,EAAsBZ,GAAY,WACtCF,EAA2BI,aAAUW,CACvC,GAAG,CAACf,IAKJ,OAHAgB,EAAY,CAAEC,IAAKpB,EAAaqB,SAAS,EAAMC,KAAM9B,EAAiB+B,SAAUf,IAChFgB,EAAiB,CAAEC,UAAW,YAAaL,IAAKpB,EAAaqB,SAAS,EAAME,SAAUN,IAE/E,CAAEd,2BAAAA,EACX"}