{"version":3,"file":"DatePicker.js","sources":["../../../../../src/components/DatePicker/DatePicker.tsx"],"sourcesContent":["import React, { forwardRef, useCallback, useState } from \"react\";\nimport cx from \"classnames\";\nimport moment from \"moment\";\nimport \"react-dates/initialize\";\nimport { DayOfWeekShape, DayPickerRangeController, DayPickerSingleDateController } from \"react-dates\";\nimport DatePickerHeaderComponent from \"./DatePickerHeader/DatePickerHeader\";\nimport DateNavigationItem from \"./DateNavigationItem/DateNavigationItem\";\nimport YearPicker from \"./YearPicker/YearPicker\";\nimport { DAY_SIZE, WEEK_FIRST_DAY } from \"./constants\";\nimport { Direction, FocusInput, Moment, RangeDate } from \"./types\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport VibeComponent from \"../../types/VibeComponent\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { NOOP } from \"../../utils/function-utils\";\nimport styles from \"./DatePicker.module.scss\";\n// Make sure to update when upgrading react-dates\nimport \"./external_datepicker.scss\";\n\nexport interface DatePickerProps extends VibeComponentProps {\n  /** set the first day of the week to display */\n  firstDayOfWeek?: DayOfWeekShape;\n  /** current start date */\n  date?: Moment;\n  /** current end date */\n  endDate?: Moment;\n  /** on date selected callback */\n  onPickDate?: (date: Moment | RangeDate) => void;\n  /** hide the month navigations keys */\n  hideNavigationKeys?: boolean;\n  /** show days outside the cuurent month view */\n  enableOutsideDays?: boolean;\n  /** show week number column */\n  showWeekNumber?: boolean;\n  /** set the size of single day element */\n  daySize?: number;\n  /** determine if day should be disabled */\n  shouldBlockDay?: (date: Moment) => boolean;\n  /** date range mode*/\n  range?: boolean;\n  /** number of month to display*/\n  numberOfMonths?: number;\n  /** determine if year should be disabled */\n  shouldBlockYear?: (year: number) => boolean;\n  /** determine if date range should be disabled */\n  shouldBlockRange?: (date: Moment) => boolean;\n}\n\nconst DatePicker: VibeComponent<DatePickerProps, HTMLElement> = forwardRef<HTMLDivElement, DatePickerProps>(\n  (\n    {\n      id,\n      className,\n      firstDayOfWeek = WEEK_FIRST_DAY,\n      daySize = DAY_SIZE,\n      range = false,\n      shouldBlockDay,\n      shouldBlockYear,\n      numberOfMonths = 1,\n      hideNavigationKeys = false,\n      date,\n      endDate,\n      onPickDate,\n      enableOutsideDays = false,\n      showWeekNumber = false,\n      shouldBlockRange,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const [focusedInput, setFocusedInput] = useState(FocusInput.startDate);\n    const [isMonthYearSelection, setIsMonthYearSelection] = useState(false); //show Month/Year selection dropdown\n    const [overrideDateForView, setOverrideDateForView] = useState<Moment | null>(null);\n    const [yearFunc, setYearFunc] = useState(null);\n\n    const renderMonth = useCallback(\n      ({\n        month,\n        onYearSelect\n      }: {\n        month: moment.Moment;\n        onYearSelect: (currentMonth: moment.Moment, newMonthVal: string) => void;\n      }) => {\n        if (!yearFunc && onYearSelect) {\n          setYearFunc(() => onYearSelect);\n        }\n        return (\n          <DatePickerHeaderComponent\n            data-testid={dataTestId || getTestId(ComponentDefaultTestId.DATEPICKER_HEADER, id)}\n            currentDate={month || moment()}\n            isMonthYearSelection={isMonthYearSelection}\n            onToggleMonthYearPicker={() => setIsMonthYearSelection(val => !val)}\n            hideNavigationKeys={hideNavigationKeys}\n          />\n        );\n      },\n      [isMonthYearSelection, dataTestId, id, hideNavigationKeys, yearFunc]\n    );\n\n    const renderDay = useCallback(\n      (day: Moment) => {\n        const weekNumber = firstDayOfWeek === 0 ? day.clone().add(1, \"d\").isoWeek() : day.isoWeek();\n        return (\n          <>\n            <span className={styles.calendarDayWeekNumber}>{weekNumber}</span> {day.format(\"D\")}\n          </>\n        );\n      },\n      [firstDayOfWeek]\n    );\n\n    const changeCurrentDateFromMonthYearView = useCallback(\n      (newDate: Moment | null) => {\n        const oldDate = overrideDateForView || date;\n        setOverrideDateForView(newDate);\n        setIsMonthYearSelection(false);\n        yearFunc(oldDate, moment(newDate).year());\n      },\n      [overrideDateForView, date, yearFunc]\n    );\n\n    const renderMonthYearSelection = useCallback(() => {\n      return (\n        <YearPicker\n          data-testid={dataTestId || getTestId(ComponentDefaultTestId.DATEPICKER_YEAR_SELECTION, id)}\n          selectedDate={date}\n          isYearBlocked={shouldBlockYear}\n          changeCurrentDate={changeCurrentDateFromMonthYearView}\n        />\n      );\n    }, [dataTestId, id, overrideDateForView, date, shouldBlockYear, changeCurrentDateFromMonthYearView]);\n\n    const onDateRangeChange = useCallback(\n      (date: RangeDate) => {\n        if (!onPickDate) return;\n        if (focusedInput === FocusInput.startDate) {\n          onPickDate({ ...date, endDate: null });\n        } else {\n          onPickDate(date);\n        }\n      },\n      [focusedInput, onPickDate]\n    );\n\n    const onFocusChange = useCallback((focusedInput: FocusInput) => {\n      setFocusedInput(focusedInput || FocusInput.startDate);\n    }, []);\n\n    const shouldShowNav = !hideNavigationKeys && !isMonthYearSelection;\n    return (\n      <div\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.DATEPICKER, id)}\n        ref={ref}\n        id={id}\n        className={cx(styles.datepickerContainer, className, {\n          [styles.withWeekNumber]: showWeekNumber,\n          [styles.rangePickerMode]: range,\n          [styles.monthYearSelection]: isMonthYearSelection\n        })}\n      >\n        {range ? (\n          <DayPickerRangeController\n            renderDayContents={showWeekNumber ? renderDay : undefined}\n            firstDayOfWeek={firstDayOfWeek}\n            hideKeyboardShortcutsPanel\n            startDate={date}\n            endDate={endDate}\n            onDatesChange={onDateRangeChange}\n            focusedInput={focusedInput}\n            minimumNights={0}\n            onFocusChange={onFocusChange}\n            navPrev={shouldShowNav ? <DateNavigationItem kind={Direction.prev} /> : <div />}\n            navNext={shouldShowNav ? <DateNavigationItem kind={Direction.next} /> : <div />}\n            daySize={daySize}\n            isOutsideRange={shouldBlockRange}\n            isDayBlocked={shouldBlockDay}\n            renderMonthElement={renderMonth}\n            enableOutsideDays={enableOutsideDays || showWeekNumber}\n            numberOfMonths={numberOfMonths}\n            initialVisibleMonth={() => overrideDateForView || date || moment()}\n          />\n        ) : (\n          <DayPickerSingleDateController\n            renderDayContents={showWeekNumber ? renderDay : undefined}\n            firstDayOfWeek={firstDayOfWeek}\n            hideKeyboardShortcutsPanel\n            onFocusChange={NOOP}\n            numberOfMonths={numberOfMonths}\n            date={date}\n            onDateChange={(date: Moment) => onPickDate(date)}\n            navPrev={shouldShowNav ? <DateNavigationItem kind={Direction.prev} /> : <div />}\n            navNext={shouldShowNav ? <DateNavigationItem kind={Direction.next} /> : <div />}\n            focused={true}\n            renderMonthElement={renderMonth}\n            enableOutsideDays={enableOutsideDays || showWeekNumber}\n            daySize={daySize}\n            isDayBlocked={shouldBlockDay}\n            initialVisibleMonth={() => overrideDateForView || date || moment()}\n          />\n        )}\n        {isMonthYearSelection && renderMonthYearSelection()}\n      </div>\n    );\n  }\n);\n\nexport default DatePicker;\n"],"names":["DatePicker","forwardRef","_ref","ref","id","className","_ref$firstDayOfWeek","firstDayOfWeek","WEEK_FIRST_DAY","_ref$daySize","daySize","DAY_SIZE","_ref$range","range","shouldBlockDay","shouldBlockYear","_ref$numberOfMonths","numberOfMonths","_ref$hideNavigationKe","hideNavigationKeys","date","endDate","onPickDate","_ref$enableOutsideDay","enableOutsideDays","_ref$showWeekNumber","showWeekNumber","shouldBlockRange","dataTestId","_useState","useState","FocusInput","startDate","_useState2","_slicedToArray","focusedInput","setFocusedInput","_useState3","_useState4","isMonthYearSelection","setIsMonthYearSelection","_useState5","_useState6","overrideDateForView","setOverrideDateForView","_useState7","_useState8","yearFunc","setYearFunc","renderMonth","useCallback","_ref2","month","onYearSelect","React","DatePickerHeaderComponent","getTestId","ComponentDefaultTestId","DATEPICKER_HEADER","currentDate","moment","onToggleMonthYearPicker","val","renderDay","day","weekNumber","clone","add","isoWeek","createElement","Fragment","styles","calendarDayWeekNumber","format","changeCurrentDateFromMonthYearView","newDate","oldDate","year","renderMonthYearSelection","YearPicker","DATEPICKER_YEAR_SELECTION","selectedDate","isYearBlocked","changeCurrentDate","onDateRangeChange","onFocusChange","shouldShowNav","DATEPICKER","cx","datepickerContainer","_defineProperty","withWeekNumber","rangePickerMode","monthYearSelection","DayPickerRangeController","renderDayContents","undefined","hideKeyboardShortcutsPanel","onDatesChange","minimumNights","navPrev","DateNavigationItem","kind","Direction","prev","navNext","next","isOutsideRange","isDayBlocked","renderMonthElement","initialVisibleMonth","DayPickerSingleDateController","NOOP","onDateChange","focused"],"mappings":"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"}