{"version":3,"file":"SelectionIndicator.js","sources":["../../../../../src/components/Slider/SelectionIndicator.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport { debounce } from \"lodash-es\";\nimport TextField from \"../TextField/TextField\";\nimport { useSliderActions, useSliderSelection } from \"./SliderContext\";\nimport { InfixKind } from \"./SliderConstants\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport styles from \"./SelectionIndicator.module.scss\";\n\nconst VALUE_UPDATE_DELAY = 300;\n\nfunction getCurrentLabel(isPostfix: boolean, ranged: boolean, value: number | number[], valueText: string | string[]) {\n  if (!ranged) {\n    return [value as number, valueText as string];\n  }\n  if (isPostfix) {\n    return [(value as number[])[1], (valueText as string[])[1]];\n  }\n  return [(value as number[])[0], (valueText as string[])[0]];\n}\n\nfunction parseValue(valueText: string) {\n  return valueText.replace(/\\D/g, \"\");\n}\n\nexport interface SelectionIndicatorProps extends VibeComponentProps {\n  kind?: InfixKind;\n  key?: InfixKind;\n}\n\nconst SelectionIndicator: React.FC<SelectionIndicatorProps> = ({ kind = InfixKind.PREFIX }) => {\n  const isPostfix = kind === InfixKind.POSTFIX;\n  const { ranged, value, valueText } = useSliderSelection();\n  const [, currentTextValue] = getCurrentLabel(isPostfix, ranged, value, valueText);\n  const { changeThumbValue } = useSliderActions();\n  const handleChange = useMemo(\n    () =>\n      debounce(newValueText => {\n        const newValue = parseValue(newValueText);\n        const thumbIndex = isPostfix ? 1 : 0;\n        changeThumbValue(newValue, thumbIndex, true);\n      }, VALUE_UPDATE_DELAY),\n    [changeThumbValue, isPostfix]\n  );\n  return <TextField onChange={handleChange} value={String(currentTextValue)} className={styles.selectionIndicator} />;\n};\n\nexport default SelectionIndicator;\n"],"names":["SelectionIndicator","_ref","_ref$kind","kind","isPostfix","InfixKind","PREFIX","POSTFIX","_useSliderSelection","useSliderSelection","_getCurrentLabel","ranged","value","valueText","getCurrentLabel","currentTextValue","_slicedToArray","changeThumbValue","useSliderActions","handleChange","useMemo","debounce","newValueText","newValue","replace","parseValue","React","createElement","TextField","onChange","String","className","styles","selectionIndicator"],"mappings":"kXA6BA,IAAMA,EAAwD,SAAtCC,GAAsE,IAAAC,EAAAD,EAA7BE,KACzDC,QAD6D,IAAAF,EAAGG,EAAUC,OAAMJ,KAC3DG,EAAUE,QACrCC,EAAqCC,IACrCC,EAtBF,SAAyBN,EAAoBO,EAAiBC,EAA0BC,GACtF,OAAKF,EAGDP,EACK,CAAEQ,EAAmB,GAAKC,EAAuB,IAEnD,CAAED,EAAmB,GAAKC,EAAuB,IAL/C,CAACD,EAAiBC,EAM7B,CAc+BC,CAAgBV,EAD/BI,EAANG,OAAaH,EAALI,MAAgBJ,EAATK,WACdE,EAAwEC,EAAAN,EAAA,GAAxD,GACjBO,EAAqBC,IAArBD,iBACFE,EAAeC,GACnB,WAAA,OACEC,GAAS,SAAAC,GACP,IAAMC,EAjBd,SAAoBV,GAClB,OAAOA,EAAUW,QAAQ,MAAO,GAClC,CAeyBC,CAAWH,GAE5BL,EAAiBM,EADEnB,EAAY,EAAI,GACI,EACxC,GAhCoB,IAgCC,GACxB,CAACa,EAAkBb,IAErB,OAAOsB,EAAAC,cAACC,EAAU,CAAAC,SAAUV,EAAcP,MAAcG,EAAPe,GAA0BC,UAAWC,EAAOC,oBAC/F"}