{"version":3,"file":"ComboboxConstants.js","sources":["../../../../../../src/components/Combobox/components/ComboboxConstants.ts"],"sourcesContent":["import { SubIcon } from \"../../../types\";\nimport React from \"react\";\nimport { MutableRef } from \"preact/hooks\";\n\nexport const COMBOBOX_DIVIDER_ITEM = \"combobox-divider\";\nexport const COMBOBOX_CATEGORY_ITEM = \"combobox-category\";\nexport const COMBOBOX_OPTION_ITEM = \"combobox-option\";\nexport const COMBOBOX_LISTBOX_ID = \"combobox-listbox\";\n\nexport enum ComboboxOptionIconType {\n  DEFAULT = \"default\",\n  RENDERER = \"renderer\"\n}\n\nexport interface IComboboxCategoryMap {\n  [key: string]: IComboboxCategory;\n}\n\nexport interface IComboboxCategory {\n  label: string;\n  id: string;\n  ariaLabel?: string;\n  onlyShowOnSearch?: boolean;\n  color?: string;\n}\n\nexport interface IComboboxOption {\n  id: string;\n  categoryId?: string;\n  leftIcon?: SubIcon | ((className: string) => JSX.Element);\n  rightIcon?: SubIcon | ((className: string) => JSX.Element);\n  leftIconType?: ComboboxOptionIconType;\n  rightIconType?: ComboboxOptionIconType;\n  label: string;\n  iconSize?: number;\n  disabled?: boolean;\n  selected?: boolean;\n  ariaLabel?: string;\n  belongToCategory?: boolean;\n  tooltipContent?: string;\n}\n\nexport interface IComboboxItem {\n  height?: number;\n  type?: string;\n  category?: IComboboxCategory;\n  categoryId?: string;\n  id?: string;\n  index?: number;\n  withDivider?: boolean;\n  className?: string;\n  belongToCategory?: boolean;\n  option?: IComboboxOption;\n  optionRenderer?: (option: IComboboxOption) => JSX.Element;\n  isActive?: boolean;\n  optionLineHeight?: number;\n  shouldScrollToSelectedItem?: boolean;\n}\n\nexport interface IComboboxOptionEvents {\n  onOptionClick: (\n    event: React.MouseEvent | React.KeyboardEvent,\n    index: number,\n    option: IComboboxOption,\n    mouseTriggered: boolean\n  ) => void;\n  onOptionLeave: (event: React.MouseEvent, index: number, option: IComboboxOption, mouseTriggered: boolean) => void;\n  onOptionEnter: (event: React.MouseEvent, index: number, option: IComboboxOption, mouseTriggered: boolean) => void;\n  onOptionHover?: (event: React.MouseEvent, index: number, option: IComboboxOption, mouseTriggered: boolean) => void;\n}\n\nexport interface IOptionItemRendererArgs extends IComboboxOptionEvents {\n  id?: string;\n  index?: number;\n  option?: IComboboxOption;\n  className?: string;\n  isActive?: boolean;\n  visualFocus?: boolean;\n  scrollRef?: MutableRef<HTMLElement>;\n  scrollOffset?: number;\n  optionLineHeight?: number;\n  shouldScrollToSelectedItem?: boolean;\n  shouldScrollWhenActive?: boolean;\n  belongToCategory?: boolean;\n  visualFocusItemIndex?: number;\n  activeItemIndex?: number;\n  optionRenderer?: (option: IComboboxOption) => JSX.Element;\n}\n"],"names":["ComboboxOptionIconType","COMBOBOX_DIVIDER_ITEM","COMBOBOX_CATEGORY_ITEM","COMBOBOX_OPTION_ITEM","COMBOBOX_LISTBOX_ID"],"mappings":"AAIO,IAKKA,EALCC,EAAwB,mBACxBC,EAAyB,oBACzBC,EAAuB,kBACvBC,EAAsB,oBAEnC,SAAYJ,GACVA,EAAA,QAAA,UACAA,EAAA,SAAA,UACD,CAHD,CAAYA,IAAAA,EAGX,CAAA"}