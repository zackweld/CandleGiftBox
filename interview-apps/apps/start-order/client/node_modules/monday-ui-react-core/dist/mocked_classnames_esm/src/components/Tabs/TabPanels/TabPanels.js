import e from"classnames";import{camelCase as t}from"lodash-es";import a,{forwardRef as s,useRef as r,useMemo as i}from"react";import o from"../../../hooks/useMergeRef.js";import{TabPanelsAnimationDirection as n}from"./TabPanelsConstants.js";import{getTestId as m,ComponentDefaultTestId as l}from"../../../tests/testIds.js";import{getStyle as c}from"../../../helpers/typesciptCssModulesHelper.js";import{withStaticProps as p}from"../../../types/withStaticProps.js";import d from"./TabPanels.module.scss.js";var f=s((function(s,p){var f=s.className,u=s.id,v=s.activeTabId,b=void 0===v?0:v,j=s.animationDirection,P=void 0===j?n.RTL:j,T=s.children,h=s.renderOnlyActiveTab,N=void 0!==h&&h,g=s["data-testid"],O=r(null),y=o(p,O),A=i((function(){return a.Children.map(T,(function(s,r){var i=b===r;if(N&&!i)return null;var o=i?"active":"non-active",n=i?"animation-direction-".concat(P):"";return a.cloneElement(s,Object.assign(Object.assign({index:r},s.props),{className:e(d.tabPanel,[c(d,o)],[c(d,t(n))],s.props.className)}))})).filter(Boolean)}),[T,b,N,P]);return a.createElement("div",{ref:y,className:e(d.tabPanelsWrapper,f),id:u,"data-testid":g||m(l.TAB_PANELS,u)},A)}));Object.assign(f,{isTabPanels:!0});var u=p(f,{animationDirections:n});export{u as default};
//# sourceMappingURL=TabPanels.js.map
