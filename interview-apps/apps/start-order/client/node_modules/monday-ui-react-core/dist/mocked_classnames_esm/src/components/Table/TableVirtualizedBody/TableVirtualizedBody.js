import{__rest as t}from"../../../../_virtual/_tslib.js";import e,{forwardRef as o,useCallback as r,useEffect as i}from"react";import l from"../TableBody/TableBody.js";import s from"./TableVirtualizedBody.module.scss.js";import{FixedSizeList as n}from"react-window";import{useTable as a}from"../context/TableContext/TableContext.js";import m from"classnames";import{getTestId as c}from"../../../tests/testIds.js";import{ComponentDefaultTestId as d}from"../../../tests/constants.js";import{RowHeights as u}from"../Table/TableConsts.js";import f from"react-virtualized-auto-sizer";import{useTableRowMenu as p}from"../context/TableRowMenuContext/TableRowMenuContext.js";var b=o((function(o,b){var T=o.items,v=o.rowRenderer,j=o.onScroll,h=o.id,w=o.className,x=o["data-testid"],y=a(),z=y.size,R=y.virtualizedListRef,g=y.onVirtualizedListScroll,B=y.markTableAsVirtualized,C=p().resetHoveredRow,E=r((function(t){C(),g(t)}),[C,g]);i((function(){B()}),[B]);var S=r((function(o){var r,i=o.index,l=o.style,s=t(l,["width"]),n=v(T[i]);return e.cloneElement(n,{style:Object.assign(Object.assign({},s),null===(r=n.props)||void 0===r?void 0:r.style),key:i})}),[T,v]),L=r((function(t){null==j||j(t.scrollDirection,t.scrollOffset,t.scrollUpdateWasRequested)}),[j]);return e.createElement(l,{className:m(s.tableBody,w),id:h,"data-testid":x||c(d.TABLE_VIRTUALIZED_BODY,h),ref:b},(null==T?void 0:T.length)&&e.createElement(f,{onScroll:E},(function(t){return e.createElement(n,{itemSize:u[z],height:t.height,itemCount:T.length,width:t.width,onScroll:L,outerRef:function(t){R.current=t}},S)})))}));export{b as default};
//# sourceMappingURL=TableVirtualizedBody.js.map
