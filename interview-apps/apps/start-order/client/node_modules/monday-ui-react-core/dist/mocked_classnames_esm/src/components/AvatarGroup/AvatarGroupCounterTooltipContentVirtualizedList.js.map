{"version":3,"file":"AvatarGroupCounterTooltipContentVirtualizedList.js","sources":["../../../../../src/components/AvatarGroup/AvatarGroupCounterTooltipContentVirtualizedList.tsx"],"sourcesContent":["import React, { CSSProperties, ReactElement, Ref, useMemo } from \"react\";\nimport VirtualizedList, { VirtualizedListItem } from \"../VirtualizedList/VirtualizedList\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport { AvatarType } from \"../Avatar/AvatarConstants\";\nimport { AvatarProps } from \"../Avatar/Avatar\";\nimport { ElementContent } from \"../../types\";\nimport styles from \"./AvatarGroupCounterTooltipContentVirtualizedList.module.scss\";\n\nconst LIST_OPTIONS = Object.freeze({\n  maxItemsWithoutScroll: 10,\n  itemLineHeight: 34,\n  itemLineWidth: 150\n});\n\nexport type AvatarItem = {\n  value: AvatarProps & { tooltipContent: ElementContent };\n};\n\nexport interface AvatarGroupCounterTooltipContentVirtualizedListProps extends VibeComponentProps {\n  /**\n   * Array of Avatar components\n   */\n  avatarItems?: AvatarItem[];\n  avatarRenderer?: (\n    item: AvatarItem,\n    index: number,\n    style: CSSProperties,\n    type: AvatarType,\n    displayAsGrid: boolean\n  ) => ReactElement;\n  tooltipContainerAriaLabel?: string;\n  tooltipContentContainerRef?: Ref<HTMLDivElement>;\n  type?: AvatarType;\n}\n\nconst AvatarGroupCounterTooltipContentVirtualizedList: React.FC<\n  AvatarGroupCounterTooltipContentVirtualizedListProps\n> = ({ avatarItems = [], avatarRenderer, type, tooltipContainerAriaLabel, tooltipContentContainerRef }) => {\n  const virtualizedItems: VirtualizedListItem[] = useMemo(\n    () => avatarItems.map(item => ({ value: item, height: LIST_OPTIONS.itemLineHeight } as VirtualizedListItem)),\n    [avatarItems]\n  );\n\n  const minCount = Math.min(avatarItems.length, LIST_OPTIONS.maxItemsWithoutScroll);\n  const virtualizedListStyle = {\n    height: LIST_OPTIONS.itemLineHeight * minCount,\n    minWidth: LIST_OPTIONS.itemLineWidth\n  };\n\n  return (\n    <div\n      className={styles.virtualizedTooltipContainer}\n      aria-label={tooltipContainerAriaLabel}\n      ref={tooltipContentContainerRef}\n      tabIndex={-1}\n    >\n      <VirtualizedList\n        items={virtualizedItems}\n        itemRenderer={(item: VirtualizedListItem, index: number, style: CSSProperties) =>\n          avatarRenderer(item.value as AvatarItem, index, style, type, false)\n        }\n        role=\"treegrid\"\n        scrollableClassName={styles.scrollableContainer}\n        getItemId={(item: VirtualizedListItem, index: number) => String(index)}\n        style={virtualizedListStyle}\n      />\n    </div>\n  );\n};\n\nexport default AvatarGroupCounterTooltipContentVirtualizedList;\n"],"names":["LIST_OPTIONS","Object","freeze","maxItemsWithoutScroll","itemLineHeight","itemLineWidth","AvatarGroupCounterTooltipContentVirtualizedList","_ref","_ref$avatarItems","avatarItems","avatarRenderer","type","tooltipContainerAriaLabel","tooltipContentContainerRef","virtualizedItems","useMemo","map","item","value","height","React","createElement","className","styles","virtualizedTooltipContainer","ref","tabIndex","VirtualizedList","items","itemRenderer","index","style","role","scrollableClassName","scrollableContainer","getItemId","String","Math","min","length","minWidth"],"mappings":"wKAQA,IAAMA,EAAeC,OAAOC,OAAO,CACjCC,sBAAuB,GACvBC,eAAgB,GAChBC,cAAe,MAwBXC,EAEF,SAFiDC,GAEqD,IAAAC,EAAAD,EAAnGE,YAAAA,OAAc,IAAHD,EAAG,GAAEA,EAAEE,EAAcH,EAAdG,eAAgBC,EAAIJ,EAAJI,KAAMC,EAAyBL,EAAzBK,0BAA2BC,EAA0BN,EAA1BM,2BAClEC,EAA0CC,GAC9C,WAAA,OAAMN,EAAYO,KAAI,SAAAC,GAAI,MAAK,CAAEC,MAAOD,EAAME,OAAQnB,EAAaI,eAAwC,MAC3G,CAACK,IASH,OACEW,EACEC,cAAA,MAAA,CAAAC,UAAWC,EAAOC,4BAA2B,aACjCZ,EACZa,IAAKZ,EACLa,UAAW,GAEXN,EAAAC,cAACM,EAAe,CACdC,MAAOd,EACPe,aAAc,SAACZ,EAA2Ba,EAAeC,GAAoB,OAC3ErB,EAAeO,EAAKC,MAAqBY,EAAOC,EAAOpB,GAAM,EAAM,EAErEqB,KAAK,WACLC,oBAAqBV,EAAOW,oBAC5BC,UAAW,SAAClB,EAA2Ba,GAAa,OAAYA,EAAPM,EAAa,EACtEL,MApBuB,CAC3BZ,OAAQnB,EAAaI,eAFNiC,KAAKC,IAAI7B,EAAY8B,OAAQvC,EAAaG,uBAGzDqC,SAAUxC,EAAaK,iBAsB3B"}