{"version":3,"file":"List.js","sources":["../../../../../src/components/List/List.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, {\n  AriaAttributes,\n  CSSProperties,\n  forwardRef,\n  ReactElement,\n  useCallback,\n  useMemo,\n  useRef,\n  useState\n} from \"react\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport useKeyEvent from \"../../hooks/useKeyEvent\";\nimport { VirtualizedListItems } from \"./VirtualizedListItems/VirtualizedListItems\";\nimport { keyCodes, UP_DOWN_ARROWS } from \"../../constants/keyCodes\";\nimport { VibeComponent, withStaticProps, VibeComponentProps } from \"../../types\";\nimport { ListItemProps } from \"../ListItem/ListItem\";\nimport { ListTitleProps } from \"../ListTitle/ListTitle\";\nimport { ListWrapperComponentStringType, ListWrapperComponentType } from \"./ListConstants\";\nimport { ComponentDefaultTestId, getTestId } from \"../../tests/test-ids-utils\";\nimport { ListContext } from \"./utils/ListContext\";\nimport {\n  getListItemComponentType,\n  getListItemIdByIndex,\n  getListItemIndexById,\n  getNextListItemIndex,\n  getPrevListItemIndex,\n  useListId\n} from \"./utils/ListUtils\";\nimport styles from \"./List.module.scss\";\n\nexport interface ListProps extends VibeComponentProps {\n  /**\n   * the wrapping component to wrap the List Items [div, nav, ul, ol]\n   */\n  component?: ListWrapperComponentType | ListWrapperComponentStringType;\n  /**\n   * ARIA label string to describe to list\n   */\n  ariaLabel?: string;\n  /**\n   * ARIA described by string to reference an id to describe by\n   */\n  ariaDescribedBy?: string;\n  \"aria-controls\"?: AriaAttributes[\"aria-controls\"];\n  children?: ReactElement<ListItemProps | ListTitleProps> | ReactElement<ListItemProps | ListTitleProps>[];\n  /**\n   * Using virtualized list for rendering only the items which visible to the user in any given user (performance optimization)\n   */\n  renderOnlyVisibleItems?: boolean;\n  style?: CSSProperties;\n}\n\nconst List: VibeComponent<ListProps> & {\n  components?: typeof ListWrapperComponentType;\n} = forwardRef(\n  (\n    {\n      className,\n      id,\n      component = List.components.UL,\n      children,\n      ariaLabel,\n      ariaDescribedBy,\n      \"aria-controls\": ariaControls,\n      renderOnlyVisibleItems = false,\n      style,\n      \"data-testid\": dataTestId\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const childrenRefs: React.MutableRefObject<HTMLElement[]> = useRef([]);\n\n    const overrideId = useListId(id);\n    const [focusIndex, setFocusIndex] = useState(0);\n    const Component = component;\n\n    const updateFocusedItem = useCallback((id: string) => {\n      setFocusIndex(getListItemIndexById(childrenRefs, id));\n      componentRef?.current?.setAttribute(\"aria-activedescendant\", id);\n    }, []);\n\n    const onUpDownArrows = useCallback(\n      (event: KeyboardEvent) => {\n        if (renderOnlyVisibleItems) {\n          return;\n        }\n        event.preventDefault();\n\n        const isUpKey = event.key === keyCodes.UP_ARROW;\n        const isDownKey = event.key === keyCodes.DOWN_ARROW;\n        let overrideFocusIndex = undefined;\n\n        if (isDownKey && focusIndex + 1 < childrenRefs.current.length) {\n          overrideFocusIndex = getNextListItemIndex(focusIndex, childrenRefs);\n        } else if (isUpKey && focusIndex > 0) {\n          overrideFocusIndex = getPrevListItemIndex(focusIndex, childrenRefs);\n        }\n        if (overrideFocusIndex !== undefined) {\n          updateFocusedItem(getListItemIdByIndex(childrenRefs, overrideFocusIndex));\n          childrenRefs.current[overrideFocusIndex].focus();\n        }\n      },\n      [focusIndex, renderOnlyVisibleItems, updateFocusedItem]\n    );\n\n    useKeyEvent({\n      keys: UP_DOWN_ARROWS,\n      callback: onUpDownArrows,\n      ref: componentRef\n    });\n\n    const overrideChildren = useMemo(() => {\n      let override: ReactElement | ReactElement[] = Array.isArray(children) ? children : [children];\n      if (renderOnlyVisibleItems) {\n        override = <VirtualizedListItems>{override}</VirtualizedListItems>;\n      } else {\n        childrenRefs.current = childrenRefs.current.slice(0, override.length);\n        override = React.Children.map(override, (child, index) => {\n          if (!React.isValidElement(child)) {\n            return child;\n          }\n\n          const id = (child.props as { id: string }).id || `${overrideId}-item-${index}`;\n          return React.cloneElement(child, {\n            // @ts-ignore not sure how to deal with ref here\n            ref: ref => (childrenRefs.current[index] = ref),\n            tabIndex: focusIndex === index ? 0 : -1,\n            id,\n            component: getListItemComponentType(component)\n          });\n        });\n      }\n\n      return override;\n    }, [children, component, focusIndex, overrideId, renderOnlyVisibleItems]);\n\n    return (\n      <ListContext.Provider value={{ updateFocusedItem }}>\n        <Component\n          data-testid={dataTestId || getTestId(ComponentDefaultTestId.LIST, id)}\n          ref={mergedRef}\n          style={style}\n          className={cx(styles.list, className)}\n          id={overrideId}\n          aria-label={ariaLabel}\n          aria-describedby={ariaDescribedBy}\n          aria-controls={ariaControls}\n          tabIndex={-1}\n          role=\"listbox\"\n        >\n          {overrideChildren}\n        </Component>\n      </ListContext.Provider>\n    );\n  }\n);\n\nexport default withStaticProps(List, {\n  components: ListWrapperComponentType\n});\n"],"names":["List","forwardRef","_ref","ref","className","id","_ref$component","component","components","UL","children","ariaLabel","ariaDescribedBy","ariaControls","_ref$renderOnlyVisibl","renderOnlyVisibleItems","style","dataTestId","componentRef","useRef","mergedRef","useMergeRef","childrenRefs","overrideId","useListId","_useState","useState","_useState2","_slicedToArray","focusIndex","setFocusIndex","Component","updateFocusedItem","useCallback","getListItemIndexById","_a","current","setAttribute","onUpDownArrows","event","preventDefault","isUpKey","key","keyCodes","UP_ARROW","overrideFocusIndex","undefined","DOWN_ARROW","length","getNextListItemIndex","getPrevListItemIndex","getListItemIdByIndex","focus","useKeyEvent","keys","UP_DOWN_ARROWS","callback","overrideChildren","useMemo","override","Array","isArray","React","createElement","VirtualizedListItems","slice","Children","map","child","index","isValidElement","props","concat","cloneElement","_ref2","tabIndex","getListItemComponentType","ListContext","Provider","value","getTestId","ComponentDefaultTestId","LIST","cx","styles","list","role","withStaticProps","ListWrapperComponentType"],"mappings":"i6BAqDA,IAAMA,EAEFC,GACF,SAAAC,EAaEC,GACE,IAZAC,EAASF,EAATE,UACAC,EAAEH,EAAFG,GAAEC,EAAAJ,EACFK,UAAAA,OAAYP,IAAHM,EAAGN,EAAKQ,WAAWC,GAAEH,EAC9BI,EAAQR,EAARQ,SACAC,EAAST,EAATS,UACAC,EAAeV,EAAfU,gBACiBC,EAAYX,EAA7B,iBAAeY,EAAAZ,EACfa,uBAAAA,OAAyB,IAAHD,GAAQA,EAC9BE,EAAKd,EAALc,MACeC,EAAUf,EAAzB,eAIIgB,EAAeC,EAAO,MACtBC,EAAYC,EAAYlB,EAAKe,GAC7BI,EAAsDH,EAAO,IAE7DI,EAAaC,EAAUnB,GAC7BoB,EAAoCC,EAAS,GAAEC,EAAAC,EAAAH,EAAA,GAAxCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAC1BI,EAAYxB,EAEZyB,EAAoBC,GAAY,SAAC5B,SACrCyB,EAAcI,EAAqBZ,EAAcjB,IAC1B,QAAvB8B,EAAAjB,aAAY,EAAZA,EAAckB,eAAS,IAAAD,GAAAA,EAAAE,aAAa,wBAAyBhC,EAC9D,GAAE,IAEGiC,EAAiBL,GACrB,SAACM,GACC,IAAIxB,EAAJ,CAGAwB,EAAMC,iBAEN,IAAMC,EAAUF,EAAMG,MAAQC,EAASC,SAEnCC,OAAqBC,EADPP,EAAMG,MAAQC,EAASI,YAGPzB,EAAac,QAAQY,OAAtCnB,EAAa,EAC5BgB,EAAqBI,EAAqBpB,EAAYP,GAC7CmB,GAAWZ,EAAa,IACjCgB,EAAqBK,EAAqBrB,EAAYP,SAE7BwB,IAAvBD,IACFb,EAAkBmB,EAAqB7B,EAAcuB,IACrDvB,EAAac,QAAQS,GAAoBO,QAd1C,CAgBF,GACD,CAACvB,EAAYd,EAAwBiB,IAGvCqB,EAAY,CACVC,KAAMC,EACNC,SAAUlB,EACVnC,IAAKe,IAGP,IAAMuC,EAAmBC,GAAQ,WAC/B,IAAIC,EAA0CC,MAAMC,QAAQnD,GAAYA,EAAW,CAACA,GAqBpF,OApBIK,EACF4C,EAAWG,EAACC,cAAAC,EAAsB,KAAAL,IAElCrC,EAAac,QAAUd,EAAac,QAAQ6B,MAAM,EAAGN,EAASX,QAC9DW,EAAWG,EAAMI,SAASC,IAAIR,GAAU,SAACS,EAAOC,GAC9C,IAAKP,EAAMQ,eAAeF,GACxB,OAAOA,EAGT,IAAM/D,EAAM+D,EAAMG,MAAyBlE,IAAEmE,GAAAA,OAAOjD,EAAU,UAAAiD,OAASH,GACvE,OAAOP,EAAMW,aAAaL,EAAO,CAE/BjE,IAAK,SAAGuE,GAAA,OAAKpD,EAAac,QAAQiC,GAASlE,CAAI,EAC/CwE,SAAU9C,IAAewC,EAAQ,GAAK,EACtChE,GAAAA,EACAE,UAAWqE,EAAyBrE,IAExC,KAGKoD,CACT,GAAG,CAACjD,EAAUH,EAAWsB,EAAYN,EAAYR,IAEjD,OACE+C,EAACC,cAAAc,EAAYC,UAASC,MAAO,CAAE/C,kBAAAA,IAC7B8B,EAACC,cAAAhC,EACc,CAAA,cAAAd,GAAc+D,EAAUC,EAAuBC,KAAM7E,GAClEF,IAAKiB,EACLJ,MAAOA,EACPZ,UAAW+E,EAAGC,EAAOC,KAAMjF,GAC3BC,GAAIkB,EAAU,aACFZ,EAAS,mBACHC,EAAe,gBAClBC,EACf8D,UAAW,EACXW,KAAK,WAEJ7B,GAIT,IAGa8B,EAAAA,EAAgBvF,EAAM,CACnCQ,WAAYgF"}