{"version":3,"file":"TabsContext.js","sources":["../../../../../../src/components/Tabs/TabsContext/TabsContext.tsx"],"sourcesContent":["import React, { FC, forwardRef, ReactElement, useCallback, useEffect, useRef, useState } from \"react\";\nimport useMergeRef from \"../../../hooks/useMergeRef\";\nimport usePrevious from \"../../../hooks/usePrevious\";\nimport VibeComponentProps from \"../../../types/VibeComponentProps\";\nimport { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\n\nexport interface TabsContextProps extends VibeComponentProps {\n  activeTabId?: number;\n  children?: ReactElement | ReactElement[];\n}\n\ntype TabsChild = ReactElement & {\n  type: Record<string, unknown>;\n};\n\nconst TabsContext: FC<TabsContextProps> = forwardRef(\n  ({ className, id, activeTabId = 0, children, \"data-testid\": dataTestId }, ref) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n\n    const [previousActiveTabIdState, setPreviousActiveTabIdState] = useState(activeTabId);\n    const [activeTabIdState, setActiveTabIdState] = useState(activeTabId);\n    const prevActiveTabIdProp = usePrevious(activeTabId);\n\n    useEffect(() => {\n      // Update active tab if changed from props\n      if (activeTabId !== prevActiveTabIdProp && activeTabId !== activeTabIdState) {\n        setPreviousActiveTabIdState(activeTabIdState);\n        setActiveTabIdState(activeTabId);\n      }\n    }, [activeTabId, activeTabIdState, prevActiveTabIdProp]);\n\n    const onTabClick = useCallback(\n      (tabId: number) => {\n        setPreviousActiveTabIdState(activeTabIdState);\n        setActiveTabIdState(tabId);\n      },\n      [activeTabIdState]\n    );\n\n    return (\n      <div\n        ref={mergedRef}\n        className={className}\n        id={id}\n        data-testid={dataTestId || getTestId(ComponentDefaultTestId.TABS_CONTEXT, id)}\n      >\n        {React.Children.map(children, (child: TabsChild) => {\n          if (child.type.isTabList) {\n            const originalOnTabChange = child.props.onTabChange;\n            const onTabChange = (tabId: number) => {\n              onTabClick(tabId);\n              originalOnTabChange?.(tabId);\n            };\n            return React.cloneElement(child, { activeTabId: activeTabIdState, onTabChange });\n          }\n          if (child.type.isTabPanels) {\n            const animationDirection = previousActiveTabIdState < activeTabIdState ? \"ltr\" : \"rtl\";\n            return React.cloneElement(child, { activeTabId: activeTabIdState, animationDirection });\n          }\n          return child;\n        })}\n      </div>\n    );\n  }\n);\n\nexport default TabsContext;\n"],"names":["TabsContext","forwardRef","_ref","ref","className","id","_ref$activeTabId","activeTabId","children","dataTestId","componentRef","useRef","mergedRef","useMergeRef","_useState","useState","_useState2","_slicedToArray","previousActiveTabIdState","setPreviousActiveTabIdState","_useState3","_useState4","activeTabIdState","setActiveTabIdState","prevActiveTabIdProp","usePrevious","useEffect","onTabClick","useCallback","tabId","React","createElement","getTestId","ComponentDefaultTestId","TABS_CONTEXT","Children","map","child","type","isTabList","originalOnTabChange","props","onTabChange","cloneElement","isTabPanels","animationDirection"],"mappings":"oWAeMA,IAAAA,EAAoCC,GACxC,SAAAC,EAA0EC,GAAO,IAA9EC,EAASF,EAATE,UAAWC,EAAEH,EAAFG,GAAEC,EAAAJ,EAAEK,YAAAA,OAAc,IAAHD,EAAG,EAACA,EAAEE,EAAQN,EAARM,SAAyBC,EAAUP,EAAzB,eACrCQ,EAAeC,EAAO,MACtBC,EAAYC,EAAYV,EAAKO,GAEnCI,EAAgEC,EAASR,GAAYS,EAAAC,EAAAH,EAAA,GAA9EI,EAAwBF,EAAA,GAAEG,EAA2BH,EAAA,GAC5DI,EAAgDL,EAASR,GAAYc,EAAAJ,EAAAG,EAAA,GAA9DE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GACtCG,EAAsBC,EAAYlB,GAExCmB,GAAU,WAEJnB,IAAgBiB,GAAuBjB,IAAgBe,IACzDH,EAA4BG,GAC5BC,EAAoBhB,GAEvB,GAAE,CAACA,EAAae,EAAkBE,IAEnC,IAAMG,EAAaC,GACjB,SAACC,GACCV,EAA4BG,GAC5BC,EAAoBM,EACtB,GACA,CAACP,IAGH,OACEQ,EACEC,cAAA,MAAA,CAAA5B,IAAKS,EACLR,UAAWA,EACXC,GAAIA,EACS,cAAAI,GAAcuB,EAAUC,EAAuBC,aAAc7B,IAEzEyB,EAAMK,SAASC,IAAI5B,GAAU,SAAC6B,GAC7B,GAAIA,EAAMC,KAAKC,UAAW,CACxB,IAAMC,EAAsBH,EAAMI,MAAMC,YAKxC,OAAOZ,EAAMa,aAAaN,EAAO,CAAE9B,YAAae,EAAkBoB,YAJ9C,SAACb,GACnBF,EAAWE,GACXW,SAAAA,EAAsBX,KAGzB,CACD,OAAIQ,EAAMC,KAAKM,YAENd,EAAMa,aAAaN,EAAO,CAAE9B,YAAae,EAAkBuB,mBADZvB,EAA3BJ,EAA8C,MAAQ,QAG5EmB,CACR,IAGP"}