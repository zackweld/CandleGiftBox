{"version":3,"file":"TipseenWizard.js","sources":["../../../../../src/components/Tipseen/TipseenWizard.tsx"],"sourcesContent":["import React, { FC, useContext, useMemo } from \"react\";\nimport cx from \"classnames\";\nimport Steps, { StepsProps } from \"../Steps/Steps\";\nimport Button from \"../../components/Button/Button\";\nimport TipseenBasicContent from \"./TipseenBasicContent\";\nimport styles from \"./TipseenWizard.module.scss\";\nimport { TipseenContext } from \"./Tipseen\";\nimport { TipseenColor } from \"./TipseenConstants\";\nimport { StepsColor } from \"../Steps/StepsConstants\";\n\nconst FINISH_TEXT = \"Got it\";\n\nexport interface TipseenWizardProps extends StepsProps {\n  title?: string;\n  /**\n   * Classname for overriding TipseenTitle styles\n   */\n  titleClassName?: string;\n  onFinish?: (e: React.MouseEvent | React.KeyboardEvent) => void;\n}\n\nconst TipseenWizard: FC<TipseenWizardProps> = ({ id, title, onFinish, titleClassName, className, ...stepsProps }) => {\n  const overrideStepsProps = stepsProps as StepsProps;\n  const color = useContext(TipseenContext);\n  const buttonColor = useMemo(() => {\n    return color === TipseenColor.INVERTED ? StepsColor.ON_INVERTED_BACKGROUND : StepsColor.ON_PRIMARY_COLOR;\n  }, [color]);\n\n  const nextButtonProps = useMemo(\n    () => ({\n      kind: Button.kinds.PRIMARY,\n      size: Button.sizes.SMALL\n    }),\n    []\n  );\n  const backButtonProps = useMemo(\n    () => ({\n      size: Button.sizes.SMALL\n    }),\n    []\n  );\n  const finishButtonProps = useMemo(\n    () => ({\n      kind: Button.kinds.PRIMARY,\n      size: Button.sizes.SMALL,\n      children: FINISH_TEXT\n    }),\n    []\n  );\n  return (\n    <TipseenBasicContent\n      title={title}\n      className={cx(styles.tipseenWizard, className)}\n      titleClassName={titleClassName}\n      id={id || \"wizard\"}\n    >\n      <Steps\n        className={cx(styles.tipseenWizardWizard)}\n        color={buttonColor}\n        isContentOnTop\n        areButtonsIconsHidden\n        backButtonProps={backButtonProps}\n        nextButtonProps={nextButtonProps}\n        finishButtonProps={finishButtonProps}\n        onFinish={onFinish}\n        {...overrideStepsProps}\n      />\n    </TipseenBasicContent>\n  );\n};\nexport default TipseenWizard;\n"],"names":["TipseenWizard","_a","id","title","onFinish","titleClassName","className","overrideStepsProps","__rest","color","useContext","TipseenContext","buttonColor","useMemo","TipseenColor","INVERTED","StepsColor","ON_INVERTED_BACKGROUND","ON_PRIMARY_COLOR","nextButtonProps","kind","Button","kinds","PRIMARY","size","sizes","SMALL","backButtonProps","finishButtonProps","children","React","createElement","TipseenBasicContent","cx","styles","tipseenWizard","Steps","Object","assign","tipseenWizardWizard","isContentOnTop","areButtonsIconsHidden"],"mappings":"ubAUA,IAWMA,EAAwC,SAACC,GAAA,IAAEC,EAA+DD,EAA/DC,GAAIC,EAA2DF,EAA3DE,MAAOC,EAAoDH,EAApDG,SAAUC,EAA0CJ,EAA1CI,eAAgBC,EAA0BL,EAA1BK,UAC9EC,EADsGC,EAAAP,EAA/D,wDAEvCQ,EAAQC,EAAWC,GACnBC,EAAcC,GAAQ,WAC1B,OAAOJ,IAAUK,EAAaC,SAAWC,EAAWC,uBAAyBD,EAAWE,gBAC1F,GAAG,CAACT,IAEEU,EAAkBN,GACtB,WAAA,MAAO,CACLO,KAAMC,EAAOC,MAAMC,QACnBC,KAAMH,EAAOI,MAAMC,MACnB,GACF,IAEIC,EAAkBd,GACtB,WAAA,MAAO,CACLW,KAAMH,EAAOI,MAAMC,MACnB,GACF,IAEIE,EAAoBf,GACxB,WAAA,MAAO,CACLO,KAAMC,EAAOC,MAAMC,QACnBC,KAAMH,EAAOI,MAAMC,MACnBG,SAnCc,SAoCd,GACF,IAEF,OACEC,EAACC,cAAAC,EACC,CAAA7B,MAAOA,EACPG,UAAW2B,EAAGC,EAAOC,cAAe7B,GACpCD,eAAgBA,EAChBH,GAAIA,GAAM,UAEV4B,EAAAC,cAACK,EACCC,OAAAC,OAAA,CAAAhC,UAAW2B,EAAGC,EAAOK,qBACrB9B,MAAOG,EACP4B,kBACAC,uBAAqB,EACrBd,gBAAiBA,EACjBR,gBAAiBA,EACjBS,kBAAmBA,EACnBxB,SAAUA,GACNG,IAIZ"}