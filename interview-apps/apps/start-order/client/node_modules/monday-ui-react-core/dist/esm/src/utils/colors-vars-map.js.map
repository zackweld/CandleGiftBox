{"version":3,"file":"colors-vars-map.js","sources":["../../../../src/utils/colors-vars-map.ts"],"sourcesContent":["export const colorsMap = [\n  { color: \"--primary-color\", description: \"Use to emphasise main ui components\" },\n  {\n    color: \"--primary-on-secondary-color\",\n    description: \"Use to emphasise main ui components on secondary background color\"\n  },\n  { color: \"--primary-hover-color\", description: \"Use only as a hover on primary color\" },\n  {\n    color: \"--primary-hover-on-secondary-color\",\n    description: \"Use only as a hover on primary color on secondary background color\"\n  },\n  { color: \"--primary-selected-color\", description: \"Use to indicate selected state of primary items\" },\n  {\n    color: \"--primary-selected-hover-color\",\n    description: \"Use to indicate hover state on a primary-selected-color items\"\n  },\n  {\n    color: \"--primary-highlighted-color\",\n    description: \"Use this to indicate highlighted components of primary items\"\n  },\n  {\n    color: \"--primary-surface-color\",\n    description: \"Use this as the surface of the main layout appearance\"\n  },\n  {\n    color: \"--primary-selected-on-secondary-color\",\n    description: \"Use to indicate selected state of primary items on secondary background color\"\n  },\n  { color: \"--primary-text-color\", description: \"Use for default text color\" },\n  {\n    color: \"--primary-text-on-secondary-color\",\n    description: \"Use for default text color on secondary background color\"\n  },\n  { color: \"--secondary-text-color\", description: \"Use when you need text with lesser importance\" },\n  {\n    color: \"--secondary-text-on-secondary-color\",\n    description: \"Use when you need text with lesser importance (on secondary background color)\"\n  },\n  { color: \"--primary-background-hover-color\", description: \"Use as hover color\" },\n  { color: \"--primary-background-hover-on-secondary-color\", description: \"Use as hover color on secondary color\" },\n  {\n    color: \"--inverted-color-background\",\n    description: \"Inverted background color (opposite of primary background color)\"\n  },\n  { color: \"--text-color-on-inverted\", description: \"Inverted text color (opposite of primary text color)\" },\n  { color: \"--text-color-on-primary\", description: \"Use for text on primary color\" },\n  { color: \"--fixed-light-color\", description: \"Use as color that should remain light in all themes\" },\n  { color: \"--fixed-dark-color\", description: \"Use as color that should remain dark in all themes\" },\n  // states\n  {\n    color: \"--positive-color\",\n    description: \"Use to indicate a positive action/state (success, completion, approval...)\"\n  },\n  { color: \"--positive-color-hover\", description: \"Use only as hover color on positive color\" },\n  { color: \"--positive-color-selected\", description: \"Use only as selected indication for a positive colors\" },\n  {\n    color: \"--positive-color-selected-hover\",\n    description: \"Use to indicate hover state on a positive-color-selected items\"\n  },\n  {\n    color: \"--negative-color\",\n    description: \"Use to indicate a negative action/state (delete, error...)\"\n  },\n  { color: \"--negative-color-hover\", description: \"Use only as hover color on negative color\" },\n  { color: \"--negative-color-selected\", description: \"Use as selected indication for negative colors\" },\n  {\n    color: \"--negative-color-selected-hover\",\n    description: \"Use to indicate hover state on a negative-selected items\"\n  },\n  {\n    color: \"--private-color\",\n    description: \"Use to indicate that something is private (board, icons...)\"\n  },\n  {\n    color: \"--shareable-color\",\n    description: \"Use to indicate that something is shareable (board, dashboard...)\"\n  },\n  {\n    color: \"--warning-color\",\n    description: \"Use to indicate a warning action/state (severity, alert, caution...)\"\n  },\n  { color: \"--warning-color-hover\", description: \"Use only as hover color on warning color\" },\n  { color: \"--warning-color-selected\", description: \"Use as selected indication for warning colors\" },\n  {\n    color: \"--warning-color-selected-hover\",\n    description: \"Use to indicate hover state on a warning-selected items\"\n  },\n  // borders\n  { color: \"--ui-border-color\", description: \"Border color for ui elements and components (Button, Input...)\" },\n  { color: \"--ui-border-on-secondary-color\", description: \"Border color for ui elements on secondary color\" },\n  {\n    color: \"--layout-border-color\",\n    description: \"Border color for general layout and separators (Leftpane, Menu Divider...)\"\n  },\n  {\n    color: \"--layout-border-on-secondary-color\",\n    description: \"Border color for general layout on secondary background color\"\n  },\n  { color: \"--placeholder-color\", description: \"Use for placeholder text in inputs fields\" },\n  {\n    color: \"--placeholder-on-secondary-color\",\n    description: \"Use for placeholder text in inputs fields on secondary background color\"\n  },\n  { color: \"--icon-color\", description: \"Default color for icons\" },\n  { color: \"--icon-on-secondary-color\", description: \"Default color for icons on secondary background color\" },\n  // disabled\n  {\n    color: \"--disabled-background-color\",\n    description: \"Use as background for disabled elements (ui hovers or elements)\"\n  },\n  { color: \"--disabled-text-color\", description: \"Use as text in disabled components\" },\n  {\n    color: \"--disabled-background-on-secondary-color\",\n    description: \"Use as background for disabled elements on secondary background\"\n  },\n  {\n    color: \"--disabled-text-on-secondary-color\",\n    description: \"Use as text in disabled components on secondary background color\"\n  },\n  // Link\n  { color: \"--link-color\", description: \"Use only for links\" },\n  { color: \"--link-on-secondary-color\", description: \"Use only for links on secondary colors\" },\n  // Backgrounds\n  { color: \"--primary-background-color\", description: \"Primary background color\" },\n  { color: \"--secondary-background-color\", description: \"Secondary background color\" },\n  { color: \"--grey-background-color\", description: \"Grey background color\" },\n  { color: \"--allgrey-background-color\", description: \"Grey background color, stays grey in dark and black themes\" },\n  { color: \"--ui-background-color\", description: \"Background color for UI elements and components\" }\n];\n\nexport const colorsHashMap = colorsMap.reduce((map, current) => {\n  const newColorName = current.color.substring(2);\n  map.set(newColorName, current.description);\n  return map;\n}, new Map());\n\nexport const contentColors = [\n  \"grass_green\",\n  \"done-green\",\n  \"bright-green\",\n  \"saladish\",\n  \"egg_yolk\",\n  \"working_orange\",\n  \"dark-orange\",\n  \"peach\",\n  \"sunset\",\n  \"stuck-red\",\n  \"dark-red\",\n  \"sofia_pink\",\n  \"lipstick\",\n  \"bubble\",\n  \"purple\",\n  \"dark_purple\",\n  \"berry\",\n  \"dark_indigo\",\n  \"indigo\",\n  \"navy\",\n  \"bright-blue\",\n  \"dark-blue\",\n  \"aquamarine\",\n  \"chili-blue\",\n  \"river\",\n  \"winter\",\n  \"explosive\",\n  \"american_gray\",\n  \"blackish\",\n  \"brown\",\n  \"orchid\",\n  \"tan\",\n  \"sky\",\n  \"coffee\",\n  \"royal\",\n  \"teal\",\n  \"lavender\",\n  \"steel\",\n  \"lilac\",\n  \"pecan\"\n] as const;\n\nexport type CONTENT_COLORS_VALUES = (typeof contentColors)[number];\n\nexport enum ColorStyle {\n  REGULAR = \"regular\",\n  HOVER = \"hover\",\n  SELECTED = \"selected\"\n}\n\nexport enum ContentColorByName {\n  GRASS_GREEN = \"grass_green\",\n  DONE_GREEN = \"done-green\",\n  BRIGHT_GREEN = \"bright-green\",\n  SALADISH = \"saladish\",\n  EGG_YOLK = \"egg_yolk\",\n  WORKING_ORANGE = \"working_orange\",\n  DARK_ORANGE = \"dark-orange\",\n  PEACH = \"peach\",\n  SUNSET = \"sunset\",\n  STUCK_RED = \"stuck-red\",\n  DARK_RED = \"dark-red\",\n  SOFIA_PINK = \"sofia_pink\",\n  LIPSTICK = \"lipstick\",\n  BUBBLE = \"bubble\",\n  PURPLE = \"purple\",\n  DARK_PURPLE = \"dark_purple\",\n  BERRY = \"berry\",\n  DARK_INDIGO = \"dark_indigo\",\n  INDIGO = \"indigo\",\n  NAVY = \"navy\",\n  BRIGHT_BLUE = \"bright-blue\",\n  DARK_BLUE = \"dark-blue\",\n  AQUAMARINE = \"aquamarine\",\n  CHILI_BLUE = \"chili-blue\",\n  RIVER = \"river\",\n  WINTER = \"winter\",\n  EXPLOSIVE = \"explosive\",\n  AMERICAN_GRAY = \"american_gray\",\n  BLACKISH = \"blackish\",\n  BROWN = \"brown\",\n  ORCHID = \"orchid\",\n  TAN = \"tan\",\n  SKY = \"sky\",\n  COFFEE = \"coffee\",\n  ROYAL = \"royal\",\n  TEAL = \"teal\",\n  LAVENDER = \"lavender\",\n  STEEL = \"steel\",\n  LILAC = \"lilac\",\n  PECAN = \"pecan\"\n}\n\nexport enum StateSelectedColor {\n  POSITIVE = \"--positive-color-selected\",\n  NEGATIVE = \"--negative-color-selected\",\n  PRIMARY = \"--primary-selected-color\",\n  WARNING = \"--warning-color-selected\"\n}\nexport enum StateSelectedHoverColor {\n  POSITIVE = \"--positive-color-selected-hover\",\n  NEGATIVE = \"--negative-color-selected-hover\",\n  PRIMARY = \"--primary-selected-hover-color\"\n}\n\nexport const ElementAllowedColor = {\n  ...ContentColorByName,\n  ...StateSelectedColor,\n  ...StateSelectedHoverColor\n};\n\nexport type ElementColor = (typeof ElementAllowedColor)[keyof typeof ElementAllowedColor] | string;\n\nexport const elementColorsNames = Object.values(ElementAllowedColor).reduce((acc: Record<string, string>, key) => {\n  acc[key] = key;\n  return acc;\n}, {});\n\nconst getColorKeyByValue = (colorValue: string, colors: Record<string, string>) => {\n  return Object.keys(colors)[Object.values(colors).indexOf(colorValue)];\n};\n\nexport function getElementColor(\n  colorValue: keyof typeof ElementAllowedColor | string,\n  isSelectedPalette = false,\n  isSelectedHoverPalette = false\n): string {\n  const colorKey = getColorKeyByValue(colorValue, ElementAllowedColor);\n  if (!colorKey) {\n    return colorValue;\n  }\n\n  if (ContentColorByName[colorKey as keyof typeof ContentColorByName]) {\n    return `var(--color-${ContentColorByName[colorKey as keyof typeof ContentColorByName]}${\n      isSelectedPalette ? \"-selected\" : \"\"\n    })`;\n  }\n  if (StateSelectedHoverColor[colorKey as keyof typeof StateSelectedHoverColor] && isSelectedHoverPalette) {\n    return `var(${StateSelectedHoverColor[colorKey as keyof typeof StateSelectedHoverColor]})`;\n  }\n  if (StateSelectedColor[colorKey as keyof typeof StateSelectedColor] && isSelectedPalette) {\n    return `var(${StateSelectedColor[colorKey as keyof typeof StateSelectedColor]})`;\n  }\n}\n"],"names":["colorsMap","color","description","reduce","map","current","newColorName","substring","set","Map","ColorStyle","ContentColorByName","StateSelectedColor","StateSelectedHoverColor","contentColors","ElementAllowedColor","Object","assign","values","acc","key","getElementColor","colorValue","isSelectedPalette","arguments","length","undefined","isSelectedHoverPalette","colorKey","colors","keys","indexOf","getColorKeyByValue","concat"],"mappings":"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"}