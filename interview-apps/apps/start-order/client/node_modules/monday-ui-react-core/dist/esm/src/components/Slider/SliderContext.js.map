{"version":3,"file":"SliderContext.js","sources":["../../../../../src/components/Slider/SliderContext.tsx"],"sourcesContent":["import React, { createContext, ReactElement, useContext, useMemo, useState } from \"react\";\nimport { createTestIdHelper } from \"../../helpers/testid-helper\";\nimport { useDragging, useSliderActionsContextValue, useSliderValues } from \"./SliderHooks\";\nimport { SliderProps } from \"./Slider\";\nimport { SliderContextActions, SliderContextInfix, SliderContextSelection, SliderContextUI } from \"./SliderConstants\";\nimport { IconType } from \"../Icon/IconConstants\";\n\nconst UiContext = createContext({});\nconst SelectionContext = createContext({});\nconst ActionsContext = createContext({});\nconst InfixContext = createContext({});\n\nexport interface SliderProviderProps extends SliderProps {\n  children?: ReactElement | ReactElement[];\n  infixOptions?: {\n    /**\n     * Show selected from Slider range value\n     */\n    indicateSelection?: boolean;\n    /**\n     * Options for initial/start/prefix element, it can be one of:\n     *  - Any Component (react component, node, text, number etc.)\n     *  - Or it can be an object of options for Icons component (see Icon components props)\n     *  - Or it can be an object for Label (Icon, Heading - and other components)\n     *  - Or it can be Render Props Function witch are getting value and valueText\n     */\n    prefix?: { icon: IconType } | string | ((value: number, valueText: string) => void) | ReactElement;\n    /**\n     * Options for postfix/end/finishing element. Same as prefix element.\n     */\n    postfix?: { icon: IconType } | string | ((value: number, valueText: string) => void) | ReactElement;\n    /**\n     * Width of SelectionIndicator (i.e. TextField)\n     */\n    selectionIndicatorWidth?: string;\n  };\n}\n\nexport function SliderProvider({\n  children,\n  ariaLabel,\n  ariaLabelledby,\n  color,\n  \"data-testid\": dataTestId,\n  defaultValue,\n  disabled,\n  max,\n  min,\n  onChange,\n  ranged,\n  showValue,\n  size,\n  step,\n  value,\n  valueFormatter,\n  valueText,\n  infixOptions\n}: SliderProviderProps) {\n  const shapeTestId = createTestIdHelper(dataTestId);\n  const { actualValue, actualValueText, getSelectedValue, setSelectedValue } = useSliderValues(\n    defaultValue,\n    value,\n    valueFormatter,\n    valueText\n  );\n\n  const [active, setActive] = useState<number>(null);\n  const [focused, setFocused] = useState<number>(null);\n  const [dragging, setDragging, getDragging] = useDragging();\n\n  const uiContextValue: SliderContextUI = useMemo(\n    () => ({ active, ariaLabel, ariaLabelledby, color, disabled, dragging, focused, size, shapeTestId, showValue }),\n    [active, ariaLabel, ariaLabelledby, color, disabled, dragging, focused, size, shapeTestId, showValue]\n  );\n\n  const selectionContextValue: SliderContextSelection = useMemo(\n    () => ({\n      max,\n      min,\n      ranged,\n      step,\n      value: actualValue,\n      valueText: actualValueText\n    }),\n    [max, min, ranged, step, actualValue, actualValueText]\n  );\n\n  const actionsContextValue: SliderContextActions = useSliderActionsContextValue(\n    actualValue,\n    focused,\n    getDragging,\n    getSelectedValue,\n    max,\n    min,\n    onChange,\n    ranged,\n    setActive,\n    setFocused,\n    setDragging,\n    setSelectedValue,\n    step\n  );\n\n  return (\n    <UiContext.Provider value={uiContextValue}>\n      <SelectionContext.Provider value={selectionContextValue}>\n        <ActionsContext.Provider value={actionsContextValue}>\n          <InfixContext.Provider value={infixOptions}>{children}</InfixContext.Provider>\n        </ActionsContext.Provider>\n      </SelectionContext.Provider>\n    </UiContext.Provider>\n  );\n}\n\nexport function useSliderUi(): SliderContextUI {\n  return useContext(UiContext) as SliderContextUI;\n}\n\nexport function useSliderInfix(): SliderContextInfix {\n  return useContext(InfixContext) as SliderContextInfix;\n}\n\nexport function useSliderSelection(): SliderContextSelection {\n  return useContext(SelectionContext) as SliderContextSelection;\n}\n\nexport function useSliderActions(): SliderContextActions {\n  return useContext(ActionsContext) as SliderContextActions;\n}\n"],"names":["UiContext","createContext","SelectionContext","ActionsContext","InfixContext","SliderProvider","_ref","children","ariaLabel","ariaLabelledby","color","defaultValue","disabled","max","min","onChange","ranged","showValue","size","step","value","valueFormatter","valueText","infixOptions","shapeTestId","createTestIdHelper","_useSliderValues","useSliderValues","actualValue","actualValueText","getSelectedValue","setSelectedValue","_useState","useState","_useState2","_slicedToArray","active","setActive","_useState3","_useState4","focused","setFocused","_useDragging","useDragging","_useDragging2","dragging","setDragging","getDragging","uiContextValue","useMemo","selectionContextValue","actionsContextValue","useSliderActionsContextValue","React","Provider","createElement","useSliderUi","useContext","useSliderInfix","useSliderSelection","useSliderActions"],"mappings":"6UAOA,IAAMA,EAAYC,EAAc,CAAA,GAC1BC,EAAmBD,EAAc,CAAA,GACjCE,EAAiBF,EAAc,CAAA,GAC/BG,EAAeH,EAAc,CAAA,YA4BnBI,EAAcC,GAmBR,IAlBpBC,EAAQD,EAARC,SACAC,EAASF,EAATE,UACAC,EAAcH,EAAdG,eACAC,EAAKJ,EAALI,MAEAC,EAAYL,EAAZK,aACAC,EAAQN,EAARM,SACAC,EAAGP,EAAHO,IACAC,EAAGR,EAAHQ,IACAC,EAAQT,EAARS,SACAC,EAAMV,EAANU,OACAC,EAASX,EAATW,UACAC,EAAIZ,EAAJY,KACAC,EAAIb,EAAJa,KACAC,EAAKd,EAALc,MACAC,EAAcf,EAAde,eACAC,EAAShB,EAATgB,UACAC,EAAYjB,EAAZiB,aAEMC,EAAcC,EAfKnB,EAAzB,gBAgBAoB,EAA6EC,EAC3EhB,EACAS,EACAC,EACAC,GAJMM,EAAWF,EAAXE,YAAaC,EAAeH,EAAfG,gBAAiBC,EAAgBJ,EAAhBI,iBAAkBC,EAAgBL,EAAhBK,iBAOxDC,EAA4BC,EAAiB,MAAKC,EAAAC,EAAAH,EAAA,GAA3CI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,EAA8BL,EAAiB,MAAKM,EAAAJ,EAAAG,EAAA,GAA7CE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAA6CC,IAAaC,EAAAT,EAAAO,EAAA,GAAnDG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAAEG,EAAWH,EAAA,GAEnCI,EAAkCC,GACtC,WAAA,MAAO,CAAEb,OAAAA,EAAQ5B,UAAAA,EAAWC,eAAAA,EAAgBC,MAAAA,EAAOE,SAAAA,EAAUiC,SAAAA,EAAUL,QAAAA,EAAStB,KAAAA,EAAMM,YAAAA,EAAaP,UAAAA,EAAY,GAC/G,CAACmB,EAAQ5B,EAAWC,EAAgBC,EAAOE,EAAUiC,EAAUL,EAAStB,EAAMM,EAAaP,IAGvFiC,EAAgDD,GACpD,WAAA,MAAO,CACLpC,IAAAA,EACAC,IAAAA,EACAE,OAAAA,EACAG,KAAAA,EACAC,MAAOQ,EACPN,UAAWO,EACZ,GACD,CAAChB,EAAKC,EAAKE,EAAQG,EAAMS,EAAaC,IAGlCsB,EAA4CC,EAChDxB,EACAY,EACAO,EACAjB,EACAjB,EACAC,EACAC,EACAC,EACAqB,EACAI,EACAK,EACAf,EACAZ,GAGF,OACEkC,gBAACrD,EAAUsD,SAAS,CAAAlC,MAAO4B,GACzBK,EAAAE,cAACrD,EAAiBoD,SAAS,CAAAlC,MAAO8B,GAChCG,EAAAE,cAACpD,EAAemD,SAAS,CAAAlC,MAAO+B,GAC9BE,EAAAE,cAACnD,EAAakD,SAAQ,CAAClC,MAAOG,GAAehB,KAKvD,UAEgBiD,IACd,OAAOC,EAAWzD,EACpB,UAEgB0D,IACd,OAAOD,EAAWrD,EACpB,UAEgBuD,IACd,OAAOF,EAAWvD,EACpB,UAEgB0D,IACd,OAAOH,EAAWtD,EACpB"}