{"version":3,"file":"TableContext.js","sources":["../../../../../../../src/components/Table/context/TableContext/TableContext.tsx"],"sourcesContent":["import React, { createContext, UIEventHandler, useCallback, useContext, useMemo, useRef, useState } from \"react\";\nimport { ITableContext, ITableProviderProps } from \"./TableContext.types\";\n\nconst TableContext = createContext<ITableContext | undefined>(undefined);\n\nexport const TableProvider = ({ value, children }: ITableProviderProps) => {\n  const tableRootRef = useRef<HTMLDivElement>(null);\n\n  const [isVirtualized, setIsVirtualized] = useState<boolean>(false);\n  const markTableAsVirtualized = useCallback(() => {\n    setIsVirtualized(true);\n  }, []);\n\n  const [scrollLeft, setScrollLeft] = useState<number>(0);\n  const headRef = useRef<HTMLDivElement>(null);\n  const virtualizedListRef = useRef<HTMLDivElement>(null);\n\n  const onTableRootScroll = useCallback<UIEventHandler<HTMLDivElement>>(\n    e => {\n      const newLeft = (e.target as HTMLDivElement).scrollLeft;\n      if (newLeft !== scrollLeft) {\n        setScrollLeft(newLeft);\n      }\n    },\n    [scrollLeft]\n  );\n\n  const onHeadScroll: UIEventHandler<HTMLDivElement> = useCallback(\n    e => {\n      const newLeft = (e.target as HTMLDivElement).scrollLeft;\n      if (virtualizedListRef.current && newLeft !== scrollLeft) {\n        virtualizedListRef.current.scrollLeft = newLeft;\n        setScrollLeft(newLeft);\n      }\n    },\n    [scrollLeft]\n  );\n\n  const onVirtualizedListScroll = useCallback<UIEventHandler<HTMLDivElement>>(\n    e => {\n      const newLeft = (e.target as HTMLDivElement).scrollLeft;\n      if (headRef.current && newLeft !== scrollLeft) {\n        headRef.current.scrollLeft = newLeft;\n        setScrollLeft(newLeft);\n      }\n    },\n    [scrollLeft]\n  );\n\n  const contextValue = useMemo<ITableContext>(\n    () => ({\n      ...value,\n      tableRootRef,\n      headRef,\n      scrollLeft,\n      onTableRootScroll,\n      onHeadScroll,\n      virtualizedListRef,\n      onVirtualizedListScroll,\n      isVirtualized,\n      markTableAsVirtualized\n    }),\n    [\n      value,\n      tableRootRef,\n      scrollLeft,\n      onTableRootScroll,\n      onHeadScroll,\n      onVirtualizedListScroll,\n      isVirtualized,\n      markTableAsVirtualized\n    ]\n  );\n  return <TableContext.Provider value={contextValue}>{children}</TableContext.Provider>;\n};\n\nexport const useTable = () => {\n  const context = useContext(TableContext);\n  if (context === undefined) {\n    throw new Error(\"useTable must be used within a TableProvider\");\n  }\n  return context;\n};\n"],"names":["TableContext","createContext","undefined","TableProvider","_ref","value","children","tableRootRef","useRef","_useState","useState","_useState2","_slicedToArray","isVirtualized","setIsVirtualized","markTableAsVirtualized","useCallback","_useState3","_useState4","scrollLeft","setScrollLeft","headRef","virtualizedListRef","onTableRootScroll","e","newLeft","target","onHeadScroll","current","onVirtualizedListScroll","contextValue","useMemo","Object","assign","React","createElement","Provider","useTable","context","useContext","Error"],"mappings":"sMAGA,IAAMA,EAAeC,OAAyCC,GAEjDC,EAAgB,SAAHC,GAAgD,IAA1CC,EAAKD,EAALC,MAAOC,EAAQF,EAARE,SAC/BC,EAAeC,EAAuB,MAE5CC,EAA0CC,GAAkB,GAAMC,EAAAC,EAAAH,EAAA,GAA3DI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAChCI,EAAyBC,GAAY,WACzCF,GAAiB,EAClB,GAAE,IAEHG,EAAoCP,EAAiB,GAAEQ,EAAAN,EAAAK,EAAA,GAAhDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,EAAUb,EAAuB,MACjCc,EAAqBd,EAAuB,MAE5Ce,EAAoBP,GACxB,SAAAQ,GACE,IAAMC,EAAWD,EAAEE,OAA0BP,WACzCM,IAAYN,GACdC,EAAcK,EAElB,GACA,CAACN,IAGGQ,EAA+CX,GACnD,SAAAQ,GACE,IAAMC,EAAWD,EAAEE,OAA0BP,WACzCG,EAAmBM,SAAWH,IAAYN,IAC5CG,EAAmBM,QAAQT,WAAaM,EACxCL,EAAcK,GAElB,GACA,CAACN,IAGGU,EAA0Bb,GAC9B,SAAAQ,GACE,IAAMC,EAAWD,EAAEE,OAA0BP,WACzCE,EAAQO,SAAWH,IAAYN,IACjCE,EAAQO,QAAQT,WAAaM,EAC7BL,EAAcK,GAElB,GACA,CAACN,IAGGW,EAAeC,GACnB,WAAA,OAAMC,OAAAC,OAAAD,OAAAC,OAAA,CAAA,EACD5B,GAAK,CACRE,aAAAA,EACAc,QAAAA,EACAF,WAAAA,EACAI,kBAAAA,EACAI,aAAAA,EACAL,mBAAAA,EACAO,wBAAAA,EACAhB,cAAAA,EACAE,uBAAAA,MAEF,CACEV,EACAE,EACAY,EACAI,EACAI,EACAE,EACAhB,EACAE,IAGJ,OAAOmB,EAAAC,cAACnC,EAAaoC,SAAQ,CAAC/B,MAAOyB,GAAexB,EACtD,EAEa+B,EAAW,WACtB,IAAMC,EAAUC,EAAWvC,GAC3B,QAAgBE,IAAZoC,EACF,MAAUE,MAAM,gDAElB,OAAOF,CACT"}