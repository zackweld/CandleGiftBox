{"version":3,"file":"DatePickerHeader.js","sources":["../../../../../../src/components/DatePicker/DatePickerHeader/DatePickerHeader.tsx"],"sourcesContent":["import React from \"react\";\nimport DropdownChevronUp from \"../../Icon/Icons/components/DropdownChevronUp\";\nimport DropdownChevronDown from \"../../Icon/Icons/components/DropdownChevronDown\";\nimport moment from \"moment\";\nimport { Moment } from \"../types\";\nimport styles from \"./DatePickerHeader.module.scss\";\nimport Icon from \"../../Icon/Icon\";\n\nexport interface DatePickerHeaderProps {\n  currentDate: Moment;\n  isMonthYearSelection: boolean;\n  onToggleMonthYearPicker: () => void;\n  hideNavigationKeys: boolean;\n  \"data-testid\"?: string;\n  ariaLabel?: string;\n}\n\nconst DatePickerHeader = (props: DatePickerHeaderProps) => {\n  const {\n    currentDate,\n    isMonthYearSelection,\n    onToggleMonthYearPicker,\n    hideNavigationKeys,\n    \"data-testid\": dateTestId,\n    ariaLabel = \"Toggle select year\"\n  } = props;\n\n  const localedDated = moment(currentDate.valueOf());\n  const month = localedDated.format(\"MMMM\");\n  const year = localedDated.format(\"YYYY\");\n  const string = month + \" \" + year;\n  return (\n    <div className={styles.datePickerHeader}>\n      <div>{string}</div>\n      {!hideNavigationKeys && (\n        <button\n          data-testid={`${dateTestId}-year-toggle`}\n          type=\"button\"\n          className={styles.button}\n          aria-label={ariaLabel}\n          onClick={onToggleMonthYearPicker}\n        >\n          <div className={styles.buttonContent}>\n            <Icon\n              iconType={Icon?.type?.SVG}\n              icon={isMonthYearSelection ? DropdownChevronUp : DropdownChevronDown}\n              iconSize={24}\n              clickable={false}\n            />\n          </div>\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default DatePickerHeader;\n"],"names":["DatePickerHeader","props","isMonthYearSelection","onToggleMonthYearPicker","hideNavigationKeys","dateTestId","_props$ariaLabel","ariaLabel","localedDated","moment","currentDate","valueOf","month","format","year","React","createElement","className","styles","datePickerHeader","concat","type","button","onClick","buttonContent","Icon","iconType","_a","SVG","icon","DropdownChevronUp","DropdownChevronDown","iconSize","clickable"],"mappings":"gQAiBA,IAAMA,EAAmB,SAACC,SAGtBC,EAKED,EALFC,qBACAC,EAIEF,EAJFE,wBACAC,EAGEH,EAHFG,mBACeC,EAEbJ,EAFF,eAAaK,EAEXL,EADFM,UAAAA,OAAY,IAAHD,EAAG,qBAAoBA,EAG5BE,EAAeC,EAFjBR,EANFS,YAQsCC,WAClCC,EAAQJ,EAAaK,OAAO,QAC5BC,EAAON,EAAaK,OAAO,QAEjC,OACEE,EAAKC,cAAA,MAAA,CAAAC,UAAWC,EAAOC,kBACrBJ,EAAAC,cAAA,MAAA,KAHWJ,EAAQ,IAAME,IAIvBV,GACAW,EAAAC,cAAA,SAAA,CAAA,cAAAI,GAAAA,OACkBf,EAAwB,gBACxCgB,KAAK,SACLJ,UAAWC,EAAOI,oBACNf,EACZgB,QAASpB,GAETY,EAAAC,cAAA,MAAA,CAAKC,UAAWC,EAAOM,eACrBT,EAAAC,cAACS,EACC,CAAAC,SAAsB,QAAZC,EAAAF,aAAI,EAAJA,EAAMJ,YAAM,IAAAM,OAAA,EAAAA,EAAAC,IACtBC,KAAM3B,EAAuB4B,EAAoBC,EACjDC,SAAU,GACVC,WAAW,MAOzB"}