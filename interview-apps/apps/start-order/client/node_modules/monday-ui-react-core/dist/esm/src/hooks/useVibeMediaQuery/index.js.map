{"version":3,"file":"index.js","sources":["../../../../../src/hooks/useVibeMediaQuery/index.ts"],"sourcesContent":["import { useLayoutEffect, useState } from \"react\";\nimport useMediaQuery from \"../../hooks/useMediaQuery\";\nimport {\n  VIBE_MEDIA_QUERIES,\n  LARGE,\n  SMALL1,\n  XLARGE,\n  MEDIUM1,\n  MEDIUM2,\n  SMALL2,\n  MEDIA_QUERY_SIZES\n} from \"../../utils/media-query-utils\";\n\nexport default function useVibeMediaQuery() {\n  const [mediaSize, setMediaSize] = useState(SMALL1);\n  const [isSmall1, isSmall2, isMedium1, isMedium2, isLarge, isXLarge] = useMediaQuery(VIBE_MEDIA_QUERIES);\n\n  useLayoutEffect(() => {\n    if (isSmall1) setMediaSize(SMALL1);\n    if (isSmall2) setMediaSize(SMALL2);\n    if (isMedium1) setMediaSize(MEDIUM1);\n    if (isMedium2) setMediaSize(MEDIUM2);\n    if (isLarge) setMediaSize(LARGE);\n    if (isXLarge) setMediaSize(XLARGE);\n  }, [isSmall1, isSmall2, isMedium1, isMedium2, isLarge, isXLarge, setMediaSize]);\n\n  return mediaSize;\n}\n\nuseVibeMediaQuery.sizes = MEDIA_QUERY_SIZES;\n"],"names":["useVibeMediaQuery","_useState","useState","SMALL1","_useState2","_slicedToArray","mediaSize","setMediaSize","_useMediaQuery","useMediaQuery","VIBE_MEDIA_QUERIES","_useMediaQuery2","isSmall1","isSmall2","isMedium1","isMedium2","isLarge","isXLarge","useLayoutEffect","SMALL2","MEDIUM1","MEDIUM2","LARGE","XLARGE","sizes","MEDIA_QUERY_SIZES"],"mappings":"qWAac,SAAUA,IACtB,IAAAC,EAAkCC,EAASC,GAAOC,EAAAC,EAAAJ,EAAA,GAA3CK,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,EAAsEC,EAAcC,GAAmBC,EAAAN,EAAAG,EAAA,GAAhGI,EAAQD,EAAA,GAAEE,EAAQF,EAAA,GAAEG,EAASH,EAAA,GAAEI,EAASJ,EAAA,GAAEK,EAAOL,EAAA,GAAEM,EAAQN,EAAA,GAWlE,OATAO,GAAgB,WACVN,GAAUL,EAAaJ,GACvBU,GAAUN,EAAaY,GACvBL,GAAWP,EAAaa,GACxBL,GAAWR,EAAac,GACxBL,GAAST,EAAae,GACtBL,GAAUV,EAAagB,EAC7B,GAAG,CAACX,EAAUC,EAAUC,EAAWC,EAAWC,EAASC,EAAUV,IAE1DD,CACT,CAEAN,EAAkBwB,MAAQC"}