{"version":3,"file":"MenuTitle.js","sources":["../../../../../../src/components/Menu/MenuTitle/MenuTitle.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { FC } from \"react\";\nimport { camelCase } from \"lodash-es\";\nimport { getStyle } from \"../../../helpers/typesciptCssModulesHelper\";\nimport { ComponentDefaultTestId, getTestId } from \"../../../tests/test-ids-utils\";\nimport Text from \"../../Text/Text\";\nimport { backwardCompatibilityForProperties } from \"../../../helpers/backwardCompatibilityForProperties\";\nimport { MenuTitleCaptionPosition } from \"./MenuTitleConstants\";\nimport { VibeComponentProps, withStaticProps } from \"../../../types\";\nimport styles from \"./MenuTitle.module.scss\";\n\nexport interface MenuTitleProps extends VibeComponentProps {\n  /**\n   * @deprecated - use className instead\n   */\n  classname?: string;\n  caption?: string;\n  captionPosition?: MenuTitleCaptionPosition;\n}\n\nconst MenuTitle: FC<MenuTitleProps> & {\n  positions?: typeof MenuTitleCaptionPosition;\n  captionPositions?: typeof MenuTitleCaptionPosition;\n  isMenuChild?: boolean;\n} = ({\n  className,\n  // Backward compatibility for props naming\n  classname,\n  caption = \"\",\n  captionPosition = MenuTitle.positions.BOTTOM,\n  id,\n  \"data-testid\": dataTestId\n}) => {\n  const overrideClassName = backwardCompatibilityForProperties([className, classname]);\n  const renderCaptionIfNeeded = () => {\n    if (caption) {\n      return (\n        <label\n          className={cx(styles.titleCaption, getStyle(styles, camelCase(\"title__caption--\" + captionPosition)))}\n          id={id}\n          data-testid={dataTestId || getTestId(ComponentDefaultTestId.MENU_TITLE_CAPTION, id)}\n        >\n          {caption}\n        </label>\n      );\n    }\n  };\n  return (\n    <Text\n      color={Text.colors.SECONDARY}\n      type={Text.types.TEXT2}\n      className={cx(styles.title, overrideClassName)}\n      data-testid={dataTestId || getTestId(ComponentDefaultTestId.MENU_TITLE, id)}\n    >\n      {renderCaptionIfNeeded()}\n    </Text>\n  );\n};\n\nObject.assign(MenuTitle, {\n  isMenuChild: true\n});\n\nexport default withStaticProps(MenuTitle, {\n  positions: MenuTitleCaptionPosition,\n  captionPositions: MenuTitleCaptionPosition\n});\n"],"names":["MenuTitle","_ref","_ref$caption","caption","_ref$captionPosition","captionPosition","positions","BOTTOM","id","dataTestId","overrideClassName","backwardCompatibilityForProperties","className","classname","React","Text","color","colors","SECONDARY","type","types","TEXT2","cx","styles","title","getTestId","ComponentDefaultTestId","MENU_TITLE","createElement","titleCaption","getStyle","camelCase","MENU_TITLE_CAPTION","renderCaptionIfNeeded","Object","assign","isMenuChild","withStaticProps","MenuTitleCaptionPosition","captionPositions"],"mappings":"+iBAoBA,IAAMA,EAIF,SAJEA,EAASC,GAYV,IALMC,EAAAD,EACTE,QAAAA,OAAU,IAAHD,EAAG,GAAEA,EAAAE,EAAAH,EACZI,gBAAAA,OAAkBL,IAAHI,EAAGJ,EAAUM,UAAUC,OAAMH,EAC5CI,EAAEP,EAAFO,GACeC,EAAUR,EAAzB,eAEMS,EAAoBC,EAAmC,CARpDV,EAATW,UAESX,EAATY,YAoBA,OACEC,gBAACC,EAAI,CACHC,MAAOD,EAAKE,OAAOC,UACnBC,KAAMJ,EAAKK,MAAMC,MACjBT,UAAWU,EAAGC,EAAOC,MAAOd,GACf,cAAAD,GAAcgB,EAAUC,EAAuBC,WAAYnB,IAlB9C,WAC5B,GAAIL,EACF,OACEW,EACEc,cAAA,QAAA,CAAAhB,UAAWU,EAAGC,EAAOM,aAAcC,EAASP,EAAQQ,EAAU,mBAAqB1B,KACnFG,GAAIA,EACS,cAAAC,GAAcgB,EAAUC,EAAuBM,mBAAoBxB,IAE/EL,GAYJ8B,GAGP,EAEAC,OAAOC,OAAOnC,EAAW,CACvBoC,aAAa,IAGf,IAAeC,EAAAA,EAAgBrC,EAAW,CACxCM,UAAWgC,EACXC,iBAAkBD"}