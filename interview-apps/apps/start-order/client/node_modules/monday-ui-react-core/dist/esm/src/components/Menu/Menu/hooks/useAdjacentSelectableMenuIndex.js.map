{"version":3,"file":"useAdjacentSelectableMenuIndex.js","sources":["../../../../../../../src/components/Menu/Menu/hooks/useAdjacentSelectableMenuIndex.tsx"],"sourcesContent":["import { ReactElement, useCallback } from \"react\";\nimport { isMenuChildSelectable } from \"../utils/utils\";\n\nexport const useAdjacentSelectableMenuIndex = ({ children }: { children: ReactElement[] }) => {\n  const getNextSelectableIndex = useCallback(\n    (currentActiveItemIndex: number) => {\n      let newIndex;\n      for (let offset = 1; offset <= children.length; offset++) {\n        newIndex = (currentActiveItemIndex + offset) % children.length;\n        if (isMenuChildSelectable(children[newIndex])) {\n          return newIndex;\n        }\n      }\n      return null;\n    },\n    [children]\n  );\n\n  const getPreviousSelectableIndex = useCallback(\n    (currentActiveItemIndex: number) => {\n      let newIndex;\n      for (let offset = children.length - 1; offset > 0; offset--) {\n        newIndex = (currentActiveItemIndex + offset) % children.length;\n        if (isMenuChildSelectable(children[newIndex])) {\n          return newIndex;\n        }\n      }\n      return null;\n    },\n    [children]\n  );\n\n  return { getNextSelectableIndex, getPreviousSelectableIndex };\n};\n"],"names":["useAdjacentSelectableMenuIndex","_ref","children","getNextSelectableIndex","useCallback","currentActiveItemIndex","newIndex","offset","length","isMenuChildSelectable","getPreviousSelectableIndex"],"mappings":"kGAGaA,EAAiC,SAAHC,GAAkD,IAA5CC,EAAQD,EAARC,SA6B/C,MAAO,CAAEC,uBA5BsBC,GAC7B,SAACC,GAEC,IADA,IAAIC,EACKC,EAAS,EAAaL,EAASM,QAAnBD,EAA2BA,IAE9C,GAAIE,EAAsBP,EAD1BI,GAAYD,EAAyBE,GAAUL,EAASM,SAEtD,OAAOF,EAGX,OAAO,IACT,GACA,CAACJ,IAiB8BQ,2BAdEN,GACjC,SAACC,GAEC,IADA,IAAIC,EACKC,EAASL,EAASM,OAAS,EAAGD,EAAS,EAAGA,IAEjD,GAAIE,EAAsBP,EAD1BI,GAAYD,EAAyBE,GAAUL,EAASM,SAEtD,OAAOF,EAGX,OAAO,IACT,GACA,CAACJ,IAIL"}