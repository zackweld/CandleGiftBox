{"version":3,"file":"Badge.js","sources":["../../../../../src/components/Badge/Badge.tsx"],"sourcesContent":["import React, { forwardRef, useRef } from \"react\";\nimport cx from \"classnames\";\nimport { camelCase } from \"lodash-es\";\nimport useMergeRef from \"../../hooks/useMergeRef\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport VibeComponent from \"../../types/VibeComponent\";\nimport { getTestId } from \"../../tests/test-ids-utils\";\nimport { ComponentDefaultTestId } from \"../../tests/constants\";\nimport { BadgeAlignments, BadgeAnchor, BadgeType } from \"./BadgeConstants\";\nimport Indicator, { IndicatorProps } from \"./Indicator/Indicator\";\nimport Counter, { CounterProps } from \"../Counter/Counter\";\nimport { getStyle } from \"../../helpers/typesciptCssModulesHelper\";\nimport { IndicatorColor } from \"./Indicator/IndicatorConstants\";\nimport { CounterColor } from \"../Counter/CounterConstants\";\nimport styles from \"./Badge.module.scss\";\n\nexport interface BadgeBaseProps extends VibeComponentProps {\n  anchor?: BadgeAnchor;\n  alignment?: BadgeAlignments;\n  children: React.ReactNode;\n}\n\ninterface CounterBadgeProps extends CounterProps {\n  type: BadgeType.COUNTER;\n}\n\ninterface IndicatorBadgeProps extends IndicatorProps {\n  type?: BadgeType.INDICATOR;\n}\n\nexport type BadgeProps = BadgeBaseProps & (CounterBadgeProps | IndicatorBadgeProps);\n\nconst Badge: VibeComponent<BadgeProps> & {\n  types?: typeof BadgeType;\n  alignments?: typeof BadgeAlignments;\n  anchors?: typeof BadgeAnchor;\n} = forwardRef(\n  (\n    {\n      type = Badge.types.INDICATOR,\n      anchor = Badge.anchors.TOP_END,\n      alignment = Badge.alignments.RECTANGULAR,\n      className,\n      id,\n      \"data-testid\": dataTestId,\n      children,\n      ...badgeProps\n    },\n    ref\n  ) => {\n    const componentRef = useRef(null);\n    const mergedRef = useMergeRef(ref, componentRef);\n    const badgeClassNames = cx(\n      styles.badge,\n      getStyle(styles, camelCase(anchor as unknown as string)),\n      getStyle(styles, alignment)\n    );\n\n    const color =\n      badgeProps.color || type === BadgeType.INDICATOR ? Indicator.colors.NOTIFICATION : Counter.colors.NEGATIVE;\n\n    return (\n      <div ref={mergedRef} className={cx(styles.badgeWrapper, className)} id={id}>\n        {children}\n        <div className={badgeClassNames} data-testid={dataTestId || getTestId(ComponentDefaultTestId.BADGE, id)}>\n          {type === BadgeType.INDICATOR ? (\n            <Indicator color={color as IndicatorColor} {...(badgeProps as IndicatorBadgeProps)} />\n          ) : (\n            type === BadgeType.COUNTER && (\n              <Counter color={color as CounterColor} {...(badgeProps as CounterBadgeProps)} />\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n);\n\nBadge.types = BadgeType;\nBadge.alignments = BadgeAlignments;\nBadge.anchors = BadgeAnchor;\n\nexport default Badge;\n"],"names":["Badge","forwardRef","_a","ref","_a$type","type","types","INDICATOR","_a$anchor","anchor","anchors","TOP_END","_a$alignment","alignment","alignments","RECTANGULAR","className","id","dataTestId","children","badgeProps","__rest","componentRef","useRef","mergedRef","useMergeRef","badgeClassNames","cx","styles","badge","getStyle","camelCase","color","BadgeType","Indicator","colors","NOTIFICATION","Counter","NEGATIVE","React","createElement","badgeWrapper","getTestId","ComponentDefaultTestId","BADGE","Object","assign","COUNTER","BadgeAlignments","BadgeAnchor"],"mappings":"qlBAgCMA,IAAAA,EAIFC,GACF,SACEC,EAUAC,GAVA,IAAAC,EAOUF,EANRG,KAAAA,OAAOL,IAAHI,EAAGJ,EAAMM,MAAMC,UAASH,EAAAI,EAMpBN,EALRO,OAAAA,OAAST,IAAHQ,EAAGR,EAAMU,QAAQC,QAAOH,EAAAI,EAKtBV,EAJRW,UAAAA,OAAYb,IAAHY,EAAGZ,EAAMc,WAAWC,YAAWH,EACxCI,EAGQd,EAHRc,UACAC,EAEQf,EAFRe,GACeC,EACPhB,EADR,eACAiB,EAAQjB,EAARiB,SACGC,EAAUC,EAAAnB,EARf,yEAYMoB,EAAeC,EAAO,MACtBC,EAAYC,EAAYtB,EAAKmB,GAC7BI,EAAkBC,EACtBC,EAAOC,MACPC,EAASF,EAAQG,EAAUtB,IAC3BqB,EAASF,EAAQf,IAGbmB,EACJZ,EAAWY,OAAS3B,IAAS4B,EAAU1B,UAAY2B,EAAUC,OAAOC,aAAeC,EAAQF,OAAOG,SAEpG,OACEC,EAAKC,cAAA,MAAA,CAAArC,IAAKqB,EAAWR,UAAWW,EAAGC,EAAOa,aAAczB,GAAYC,GAAIA,GACrEE,EACDoB,EAAKC,cAAA,MAAA,CAAAxB,UAAWU,EAA8B,cAAAR,GAAcwB,EAAUC,EAAuBC,MAAO3B,IACjGZ,IAAS4B,EAAU1B,UAClBgC,EAAAC,cAACN,EAASW,OAAAC,OAAA,CAACd,MAAOA,GAA8BZ,IAEhDf,IAAS4B,EAAUc,SACjBR,EAACC,cAAAH,EAAQQ,OAAAC,OAAA,CAAAd,MAAOA,GAA4BZ,KAMxD,IAGFpB,EAAMM,MAAQ2B,EACdjC,EAAMc,WAAakC,EACnBhD,EAAMU,QAAUuC"}