{"version":3,"file":"StepsNumbersHeader.js","sources":["../../../../../src/components/Steps/StepsNumbersHeader.tsx"],"sourcesContent":["import cx from \"classnames\";\nimport React, { FC, useMemo } from \"react\";\nimport VibeComponentProps from \"../../types/VibeComponentProps\";\nimport Text from \"../Text/Text\";\nimport styles from \"./StepsNumbersHeader.module.scss\";\nimport { StepsColor } from \"./StepsConstants\";\n\nexport interface StepsNumbersHeaderProps extends VibeComponentProps {\n  activeStepIndex: number;\n  stepsCount: number;\n  color?: StepsColor;\n}\n\nexport const StepsNumbersHeader: FC<StepsNumbersHeaderProps> = ({ activeStepIndex, stepsCount, color }) => {\n  const textColor = useMemo(() => {\n    if (color === StepsColor.PRIMARY) {\n      return color;\n    } else {\n      return color === StepsColor.ON_INVERTED_BACKGROUND ? Text.colors.ON_INVERTED : Text.colors.ON_PRIMARY;\n    }\n  }, [color]);\n\n  return (\n    // @ts-ignore\n    <Text type={Text.types.TEXT2} color={textColor} className={cx(styles.numbers)}>{`${\n      activeStepIndex + 1\n    } \\\\ ${stepsCount}`}</Text>\n  );\n};\n"],"names":["StepsNumbersHeader","_ref","activeStepIndex","stepsCount","color","textColor","useMemo","StepsColor","PRIMARY","ON_INVERTED_BACKGROUND","Text","colors","ON_INVERTED","ON_PRIMARY","React","createElement","type","types","TEXT2","className","cx","styles","numbers","concat"],"mappings":"oMAaaA,EAAkD,SAAhCC,GAA2E,IAAxCC,EAAeD,EAAfC,gBAAiBC,EAAUF,EAAVE,WAAYC,EAAKH,EAALG,MACvFC,EAAYC,GAAQ,WACxB,OAAIF,IAAUG,EAAWC,QAChBJ,EAEAA,IAAUG,EAAWE,uBAAyBC,EAAKC,OAAOC,YAAcF,EAAKC,OAAOE,UAE/F,GAAG,CAACT,IAEJ,OAEEU,EAAAC,cAACL,EAAI,CAACM,KAAMN,EAAKO,MAAMC,MAAOd,MAAOC,EAAWc,UAAWC,EAAGC,EAAOC,oBACnEpB,EAAkB,EACpBqB,QAAAA,OAAOpB,GAEX"}