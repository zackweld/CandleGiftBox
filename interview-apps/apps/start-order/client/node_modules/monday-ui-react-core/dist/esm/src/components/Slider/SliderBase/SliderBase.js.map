{"version":3,"file":"SliderBase.js","sources":["../../../../../../src/components/Slider/SliderBase/SliderBase.tsx"],"sourcesContent":["import React, { FC, forwardRef, useCallback } from \"react\";\nimport {\n  isArrowDownEvent,\n  isArrowLeftEvent,\n  isArrowRightEvent,\n  isArrowUpEvent,\n  isEndEvent,\n  isHomeEvent,\n  isPageDownEvent,\n  isPageUpEvent\n} from \"../../../utils/dom-event-utils\";\nimport { useSliderActions, useSliderSelection, useSliderUi } from \"../SliderContext\";\nimport { calcDimensions, calculatePageStep, getNearest, moveToPx } from \"../SliderHelpers\";\nimport { useSliderRail } from \"../SliderHooks\";\nimport SliderRail from \"./SliderRail\";\nimport SliderTrack from \"./SliderTrack\";\nimport SliderFilledTrack from \"./SliderFilledTrack\";\nimport SliderThumb from \"./SliderThumb\";\nimport VibeComponentProps from \"../../../types/VibeComponentProps\";\nimport cx from \"classnames\";\nimport { getStyle } from \"../../../helpers/typesciptCssModulesHelper\";\nimport styles from \"./SliderBase.module.scss\";\n\nexport type SliderBaseProps = VibeComponentProps;\n\nconst SliderBase: FC<SliderBaseProps> = forwardRef(({ className }, _ref) => {\n  const { color, disabled, size, shapeTestId } = useSliderUi();\n  const { min, max, ranged, step, value } = useSliderSelection();\n  const { changeThumbValue, drugThumb, decreaseValue, increaseValue } = useSliderActions();\n  const { railCoords, railRef } = useSliderRail();\n  const { dimension, offset, positions, thumbKeys } = calcDimensions(max, min, ranged, value);\n\n  const handlePointerMove = useCallback(\n    (e: PointerEvent) => {\n      const offsetInPx = Math.round(e.clientX - railCoords.left);\n      const newValue = moveToPx(offsetInPx, min, max, railCoords, step);\n      drugThumb(newValue);\n    },\n    [drugThumb, min, max, railCoords, step]\n  );\n\n  const handleRailClick = useCallback(\n    (e: React.MouseEvent) => {\n      const offsetInPx = e.clientX - railCoords.left;\n      const newValue = moveToPx(offsetInPx, min, max, railCoords, step);\n      const thumbIndex = getNearest(newValue, ranged, value);\n      changeThumbValue(newValue, thumbIndex);\n    },\n    [changeThumbValue, min, max, railCoords, ranged, step, value]\n  );\n\n  function handleKeyDown(e: React.KeyboardEvent) {\n    if (isArrowUpEvent(e) || isArrowRightEvent(e)) {\n      return increaseValue();\n    }\n    if (isArrowDownEvent(e) || isArrowLeftEvent(e)) {\n      return decreaseValue();\n    }\n    if (isPageUpEvent(e)) {\n      e.preventDefault();\n      return increaseValue(calculatePageStep(max, min, step));\n    }\n    if (isPageDownEvent(e)) {\n      e.preventDefault();\n      return decreaseValue(calculatePageStep(max, min, step));\n    }\n    if (isHomeEvent(e)) {\n      e.preventDefault();\n      return changeThumbValue(min);\n    }\n    if (isEndEvent(e)) {\n      e.preventDefault();\n      return changeThumbValue(max);\n    }\n  }\n\n  return (\n    <div\n      className={cx(\n        styles.base,\n        { [getStyle(styles, size)]: size, [getStyle(styles, color)]: color, [styles.disabled]: disabled },\n        className\n      )}\n      data-testid={shapeTestId(\"base\")}\n      onKeyDown={handleKeyDown}\n    >\n      <SliderRail onClick={handleRailClick} size={size} ref={railRef}>\n        <SliderTrack color={color} />\n        {railRef.current && (\n          <>\n            <SliderFilledTrack dimension={dimension} offset={offset} color={color} />\n            {positions.map((position, index) => {\n              return (\n                <SliderThumb\n                  key={thumbKeys[index]}\n                  index={index}\n                  onMove={handlePointerMove}\n                  position={position}\n                  color={color}\n                  size={size}\n                />\n              );\n            })}\n          </>\n        )}\n      </SliderRail>\n    </div>\n  );\n});\n\nexport default SliderBase;\n"],"names":["SliderBase","forwardRef","_ref2","_ref","className","_useSliderUi","useSliderUi","color","disabled","size","shapeTestId","_useSliderSelection","useSliderSelection","min","max","ranged","step","value","_useSliderActions","useSliderActions","changeThumbValue","drugThumb","decreaseValue","increaseValue","_useSliderRail","useSliderRail","railCoords","railRef","_calcDimensions","calcDimensions","dimension","offset","positions","thumbKeys","handlePointerMove","useCallback","e","newValue","moveToPx","Math","round","clientX","left","handleRailClick","thumbIndex","getNearest","React","createElement","cx","styles","base","_defineProperty","getStyle","onKeyDown","isArrowUpEvent","isArrowRightEvent","isArrowDownEvent","isArrowLeftEvent","isPageUpEvent","preventDefault","calculatePageStep","isPageDownEvent","isHomeEvent","isEndEvent","SliderRail","onClick","ref","SliderTrack","current","Fragment","SliderFilledTrack","map","position","index","SliderThumb","key","onMove"],"mappings":"w2BAyBMA,IAAAA,EAAkCC,GAAW,SAAAC,EAAgBC,GAAQ,IAArBC,EAASF,EAATE,UACpDC,EAA+CC,IAAvCC,EAAKF,EAALE,MAAOC,EAAQH,EAARG,SAAUC,EAAIJ,EAAJI,KAAMC,EAAWL,EAAXK,YAC/BC,EAA0CC,IAAlCC,EAAGF,EAAHE,IAAKC,EAAGH,EAAHG,IAAKC,EAAMJ,EAANI,OAAQC,EAAIL,EAAJK,KAAMC,EAAKN,EAALM,MAChCC,EAAsEC,IAA9DC,EAAgBF,EAAhBE,iBAAkBC,EAASH,EAATG,UAAWC,EAAaJ,EAAbI,cAAeC,EAAaL,EAAbK,cACpDC,EAAgCC,IAAxBC,EAAUF,EAAVE,WAAYC,EAAOH,EAAPG,QACpBC,EAAoDC,EAAef,EAAKD,EAAKE,EAAQE,GAA7Ea,EAASF,EAATE,UAAWC,EAAMH,EAANG,OAAQC,EAASJ,EAATI,UAAWC,EAASL,EAATK,UAEhCC,EAAoBC,GACxB,SAACC,GACC,IACMC,EAAWC,EADEC,KAAKC,MAAMJ,EAAEK,QAAUf,EAAWgB,MACf7B,EAAKC,EAAKY,EAAYV,GAC5DK,EAAUgB,EACZ,GACA,CAAChB,EAAWR,EAAKC,EAAKY,EAAYV,IAG9B2B,GAAkBR,GACtB,SAACC,GACC,IACMC,EAAWC,EADEF,EAAEK,QAAUf,EAAWgB,KACJ7B,EAAKC,EAAKY,EAAYV,GACtD4B,EAAaC,EAAWR,EAAUtB,EAAQE,GAChDG,EAAiBiB,EAAUO,EAC7B,GACA,CAACxB,EAAkBP,EAAKC,EAAKY,EAAYX,EAAQC,EAAMC,IA4BzD,OACE6B,EACEC,cAAA,MAAA,CAAA3C,UAAW4C,EACTC,EAAOC,KAAIC,EAAAA,EAAAA,EAAA,CAAA,EACRC,EAASH,EAAQxC,GAAQA,GAAO2C,EAASH,EAAQ1C,GAASA,GAAQ0C,EAAOzC,SAAWA,GACvFJ,GACD,cACYM,EAAY,QACzB2C,UAjCJ,SAAuBjB,GACrB,OAAIkB,EAAelB,IAAMmB,EAAkBnB,GAClCb,IAELiC,EAAiBpB,IAAMqB,EAAiBrB,GACnCd,IAELoC,EAActB,IAChBA,EAAEuB,iBACKpC,EAAcqC,EAAkB9C,EAAKD,EAAKG,KAE/C6C,EAAgBzB,IAClBA,EAAEuB,iBACKrC,EAAcsC,EAAkB9C,EAAKD,EAAKG,KAE/C8C,EAAY1B,IACdA,EAAEuB,iBACKvC,EAAiBP,IAEtBkD,EAAW3B,IACbA,EAAEuB,iBACKvC,EAAiBN,SAF1B,CAIF,GAYIgC,EAAAC,cAACiB,EAAU,CAACC,QAAStB,GAAiBlC,KAAMA,EAAMyD,IAAKvC,GACrDmB,EAAAC,cAACoB,EAAW,CAAC5D,MAAOA,IACnBoB,EAAQyC,SACPtB,EAAAC,cAAAD,EAAAuB,SAAA,KACEvB,EAAAC,cAACuB,EAAiB,CAACxC,UAAWA,EAAWC,OAAQA,EAAQxB,MAAOA,IAC/DyB,EAAUuC,KAAI,SAACC,EAAUC,GACxB,OACE3B,EAAAC,cAAC2B,EAAW,CACVC,IAAK1C,EAAUwC,GACfA,MAAOA,EACPG,OAAQ1C,EACRsC,SAAUA,EACVjE,MAAOA,EACPE,KAAMA,GAGZ,MAMZ"}