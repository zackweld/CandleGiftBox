{"version":3,"file":"CounterConstants.js","sources":["../../../../../src/components/Counter/CounterConstants.ts"],"sourcesContent":["import { SIZES } from \"../../constants/sizes\";\n\nexport enum CounterType {\n  FILL = \"fill\",\n  LINE = \"line\"\n}\n\nexport enum CounterColor {\n  PRIMARY = \"primary\",\n  DARK = \"dark\",\n  NEGATIVE = \"negative\",\n  LIGHT = \"light\"\n}\n\nexport enum CounterSize {\n  SMALL = \"small\",\n  LARGE = \"large\"\n}\n\nconst OLD_COUNTER_SIZES = {\n  sm: SIZES.SMALL,\n  md: SIZES.MEDIUM,\n  lg: SIZES.LARGE\n} as const;\n\n// Support old sizes (backward compatible)\ntype Size = keyof typeof OLD_COUNTER_SIZES | (typeof SIZES)[keyof typeof SIZES];\n\nexport const getActualSize = (size: Size) => {\n  if (size in OLD_COUNTER_SIZES) {\n    // @ts-expect-error Element implicitly has an 'any' type because expression of type 'Size' can't be used to index typeof OLD_COUNTER_SIZES\n    return OLD_COUNTER_SIZES[size];\n  }\n\n  return size;\n};\n"],"names":["CounterType","CounterColor","CounterSize","OLD_COUNTER_SIZES","sm","SIZES","SMALL","md","MEDIUM","lg","LARGE","getActualSize","size"],"mappings":"qDAEYA,EAKAC,EAOAC,GAZZ,SAAYF,GACVA,EAAA,KAAA,OACAA,EAAA,KAAA,MACD,CAHD,CAAYA,IAAAA,EAGX,CAAA,IAED,SAAYC,GACVA,EAAA,QAAA,UACAA,EAAA,KAAA,OACAA,EAAA,SAAA,WACAA,EAAA,MAAA,OACD,CALD,CAAYA,IAAAA,EAKX,CAAA,IAED,SAAYC,GACVA,EAAA,MAAA,QACAA,EAAA,MAAA,OACD,CAHD,CAAYA,IAAAA,EAGX,CAAA,IAED,IAAMC,EAAoB,CACxBC,GAAIC,EAAMC,MACVC,GAAIF,EAAMG,OACVC,GAAIJ,EAAMK,OAMCC,EAAgB,SAACC,GAC5B,OAAIA,KAAQT,EAEHA,EAAkBS,GAGpBA,CACT"}