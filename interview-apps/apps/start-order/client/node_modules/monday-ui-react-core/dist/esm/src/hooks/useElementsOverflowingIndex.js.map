{"version":3,"file":"useElementsOverflowingIndex.js","sources":["../../../../src/hooks/useElementsOverflowingIndex.ts"],"sourcesContent":["import { ReactNode, RefObject, useCallback, useEffect, useState } from \"react\";\nimport { last } from \"lodash-es\";\nimport useResizeObserver from \"./useResizeObserver\";\n\n// Use this hook when you want to get the index of the child which should be hidden from\ntype AggregatedChildResult = { childLength: number; totalLength: number };\n\nfunction useElementsOverflowingIndex({\n  ref,\n  children,\n  paddingSize,\n  resizeDebounceTime,\n  ignoreLast\n}: {\n  ref: RefObject<HTMLElement>;\n  children: ReactNode;\n  paddingSize: number;\n  resizeDebounceTime: number;\n  ignoreLast: boolean;\n}) {\n  const [size, setSize] = useState<number>(null);\n\n  const onResize = useCallback(\n    ({ borderBoxSize }: { borderBoxSize: ResizeObserverSize }) => {\n      setSize(borderBoxSize.inlineSize);\n    },\n    [setSize]\n  );\n  useResizeObserver({\n    ref,\n    callback: onResize,\n    debounceTime: resizeDebounceTime\n  });\n\n  const [aggregatedChildLengths, setAggregatedChildLengths] = useState<Array<AggregatedChildResult>>([]);\n  const [indexToSplit, setIndexToSplit] = useState<number | null>(null);\n\n  useEffect(() => {\n    if (ignoreLast) {\n      const withoutLast = aggregatedChildLengths.slice(0, -1);\n      const allInWithoutLast = !withoutLast.find(({ totalLength }) => totalLength > size - paddingSize);\n      if (allInWithoutLast) {\n        setIndexToSplit(-1);\n      } else {\n        const lastSize = aggregatedChildLengths.length > 0 ? last(aggregatedChildLengths).childLength : 0;\n        setIndexToSplit(\n          aggregatedChildLengths.findIndex(({ totalLength }) => totalLength > size - paddingSize - lastSize)\n        );\n      }\n    } else {\n      setIndexToSplit(aggregatedChildLengths.findIndex(({ totalLength }) => totalLength > size - paddingSize));\n    }\n  }, [aggregatedChildLengths, size, setIndexToSplit, paddingSize, ignoreLast]);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const childLengthsArray: Array<AggregatedChildResult> = [];\n    let totalLength = 0;\n    ref.current.childNodes.forEach((node: HTMLElement) => {\n      const childLength = node.clientWidth;\n      totalLength += childLength;\n      childLengthsArray.push({ childLength, totalLength });\n    });\n    setAggregatedChildLengths(childLengthsArray);\n  }, [children, ref, setAggregatedChildLengths]);\n\n  return indexToSplit;\n}\n\nexport default useElementsOverflowingIndex;\n"],"names":["useElementsOverflowingIndex","_ref","ref","children","paddingSize","resizeDebounceTime","ignoreLast","_useState","useState","_useState2","_slicedToArray","size","setSize","onResize","useCallback","_ref2","borderBoxSize","inlineSize","useResizeObserver","callback","debounceTime","_useState3","_useState4","aggregatedChildLengths","setAggregatedChildLengths","_useState5","_useState6","indexToSplit","setIndexToSplit","useEffect","slice","find","_ref3","totalLength","lastSize","length","last","childLength","findIndex","_ref4","_ref5","current","childLengthsArray","childNodes","forEach","node","clientWidth","push"],"mappings":"oNAOA,SAASA,EAA2BC,GAYnC,IAXCC,EAAGD,EAAHC,IACAC,EAAQF,EAARE,SACAC,EAAWH,EAAXG,YACAC,EAAkBJ,EAAlBI,mBACAC,EAAUL,EAAVK,WAQAC,EAAwBC,EAAiB,MAAKC,EAAAC,EAAAH,EAAA,GAAvCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAEdI,EAAWC,GACf,SAAAC,GACEH,EADcG,EAAbC,cACqBC,WACxB,GACA,CAACL,IAEHM,EAAkB,CAChBhB,IAAAA,EACAiB,SAAUN,EACVO,aAAcf,IAGhB,IAAAgB,EAA4Db,EAAuC,IAAGc,EAAAZ,EAAAW,EAAA,GAA/FE,EAAsBD,EAAA,GAAEE,EAAyBF,EAAA,GACxDG,EAAwCjB,EAAwB,MAAKkB,EAAAhB,EAAAe,EAAA,GAA9DE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GA+BpC,OA7BAG,GAAU,WACR,GAAIvB,EAGF,IAFoBiB,EAAuBO,MAAM,GAAI,GACfC,MAAK,SAAAC,GAAc,OAAAA,EAAXC,YAAgCtB,EAAOP,KAEnFwB,GAAiB,OACZ,CACL,IAAMM,EAAWX,EAAuBY,OAAS,EAAIC,EAAKb,GAAwBc,YAAc,EAChGT,EACEL,EAAuBe,WAAU,SAAAC,GAAc,OAAAA,EAAXN,YAAgCtB,EAAOP,EAAc8B,CAAQ,IAEpG,MAEDN,EAAgBL,EAAuBe,WAAU,SAAAE,GAAc,OAAAA,EAAXP,YAAgCtB,EAAOP,CAAW,IAE1G,GAAG,CAACmB,EAAwBZ,EAAMiB,EAAiBxB,EAAaE,IAEhEuB,GAAU,WACR,GAAK3B,EAAIuC,QAAT,CACA,IAAMC,EAAkD,GACpDT,EAAc,EAClB/B,EAAIuC,QAAQE,WAAWC,SAAQ,SAACC,GAC9B,IAAMR,EAAcQ,EAAKC,YAEzBJ,EAAkBK,KAAK,CAAEV,YAAAA,EAAaJ,YADtCA,GAAeI,GAEjB,IACAb,EAA0BkB,EARR,CASnB,GAAE,CAACvC,EAAUD,EAAKsB,IAEZG,CACT"}